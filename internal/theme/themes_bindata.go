// Code generated by go-bindata.
// sources:
// themes/comply-blank/README.md
// themes/comply-blank/TODO.md
// themes/comply-blank/narratives/.gitkeep
// themes/comply-blank/policies/.gitkeep
// themes/comply-blank/procedures/.gitkeep
// themes/comply-blank/standards/.gitkeep
// themes/comply-blank/templates/.gitkeep
// themes/comply-blank/templates/default.latex
// themes/comply-blank/templates/index.ace
// themes/comply-soc2/README.md
// themes/comply-soc2/TODO.md
// themes/comply-soc2/narratives/README.md
// themes/comply-soc2/narratives/control.md
// themes/comply-soc2/narratives/organizational.md
// themes/comply-soc2/narratives/products.md
// themes/comply-soc2/narratives/security.md
// themes/comply-soc2/narratives/system.md
// themes/comply-soc2/policies/README.md
// themes/comply-soc2/policies/access.md
// themes/comply-soc2/policies/application.md
// themes/comply-soc2/policies/availability.md
// themes/comply-soc2/policies/change.md
// themes/comply-soc2/policies/classification.md
// themes/comply-soc2/policies/conduct.md
// themes/comply-soc2/policies/confidentiality.md
// themes/comply-soc2/policies/continuity.md
// themes/comply-soc2/policies/cyber.md
// themes/comply-soc2/policies/datacenter.md
// themes/comply-soc2/policies/development.md
// themes/comply-soc2/policies/disaster.md
// themes/comply-soc2/policies/encryption.md
// themes/comply-soc2/policies/incident.md
// themes/comply-soc2/policies/information.md
// themes/comply-soc2/policies/log.md
// themes/comply-soc2/policies/media.md
// themes/comply-soc2/policies/office.md
// themes/comply-soc2/policies/password.md
// themes/comply-soc2/policies/policy.md
// themes/comply-soc2/policies/privacy.md
// themes/comply-soc2/policies/processing.md
// themes/comply-soc2/policies/remote.md
// themes/comply-soc2/policies/retention.md
// themes/comply-soc2/policies/risk.md
// themes/comply-soc2/policies/vendor.md
// themes/comply-soc2/policies/workstation.md
// themes/comply-soc2/procedures/README.md
// themes/comply-soc2/procedures/offboarding.md
// themes/comply-soc2/procedures/onboarding.md
// themes/comply-soc2/procedures/patch.md
// themes/comply-soc2/procedures/workstation.md
// themes/comply-soc2/standards/README.md
// themes/comply-soc2/standards/TSC-2017.yml
// themes/comply-soc2/templates/default.latex
// themes/comply-soc2/templates/index.ace
// DO NOT EDIT!

package theme

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _complyBlankReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x41\x8f\xdc\x36\x0f\xbd\xeb\x57\xf0\xc3\x5c\x12\x20\x98\x39\x7c\xb7\xdc\xd2\x2c\x8a\x16\x48\xd3\x45\x67\x6f\x45\x01\xcb\x12\x6d\x13\x23\x4b\x2e\x45\x79\xea\x06\xf9\xef\x05\x65\x7b\xbc\x28\x16\x9d\xd3\xc8\xa2\xc8\xf7\x1e\xf9\x78\x82\x6f\xdf\xce\x5f\xed\x88\xdf\xbf\xc3\xe7\x34\x4e\x81\x6c\x74\x08\xcf\x9c\x7a\xb6\xa3\x31\x2f\x03\x65\x60\x9c\x52\x26\x49\xbc\x80\x4b\x31\xa7\x40\xde\x0a\x66\xb0\x21\x80\x4f\xae\x8c\x18\x45\xa3\x82\x15\xf4\x20\x09\x64\xc0\xff\xcc\x7b\x36\xe6\x04\x57\xe1\xe2\xa4\x30\x1a\xf3\x2a\xe2\xc8\x67\x19\x21\x71\x6f\x23\xfd\x8d\x1e\x6c\x86\x2e\x85\x90\xee\xf9\xa3\x31\x4d\xd3\x98\x68\x99\xad\xd0\x8c\xf9\x02\xfa\xfb\xfa\x38\xc3\xc4\x69\x26\x8f\x60\x23\xa4\x19\x79\x26\xbc\x43\xea\x2a\xaa\x2d\xa1\x15\x4a\x11\x6c\xf4\xf5\xa3\x3b\xca\x63\x9c\x89\x53\x54\x04\x67\x33\xa5\x40\x8e\xf6\x02\x00\xcf\xdb\x19\x7a\x4d\x1b\xeb\xdb\x16\x07\x3b\x53\x62\x2d\x80\xe3\x14\xd2\x82\xaa\x4c\xf4\x2a\x95\xb0\x75\x92\x38\x9f\xcd\xc4\xc9\xa1\x2f\xbc\x27\x7b\x7e\x9c\x61\x62\xcc\x8e\xa9\x45\xc8\x13\x3a\xea\xc8\x41\x16\x9c\x32\xc8\x60\xa5\xaa\x20\xf6\x86\x11\x28\x02\x63\x9e\x52\xcc\xa8\x1a\xdf\x70\x01\x9c\x55\xa9\xb3\xc9\x62\xa3\xb7\xec\x77\xa4\xd7\xfd\xbc\xa5\x5c\x36\x9a\x51\x38\x85\x0c\xd9\x0a\xe5\x8e\xd0\x43\xbb\xfc\x5b\x80\x69\xef\x90\x28\x1b\x6d\xf3\x96\xf3\x65\x3f\xef\x79\x56\x3d\x8b\x4c\x45\xa0\x4b\x3c\x5a\xd9\x45\xfe\xe9\xe5\x97\x2f\xf0\x64\xf3\xd0\x26\xcb\xbe\x8a\xf1\xfc\xf4\x23\xd8\x9c\x51\xd1\x6a\xf7\xcc\x09\x7e\x28\x14\x3c\xc5\xde\x98\x4f\xf5\xa2\x52\x6d\x0b\x05\x81\x92\x29\xf6\xf0\x7b\x53\x71\x2d\xcd\x1f\xef\x06\x91\x29\x7f\xbc\x5c\xd6\x0f\xe7\x2c\x9c\x62\xef\xc7\xb3\x4b\xe3\xfb\x0f\x70\x1f\xc8\x0d\xe0\x6c\x84\x16\x81\x62\x16\x1b\x02\x7a\x98\xc9\x42\xd3\x32\xde\xf7\x6f\xb0\xe5\x83\x77\xa3\x75\xbf\x5e\xdf\x43\x62\x68\xfa\x04\x3d\x0a\xf4\x24\x43\x69\x35\xe1\x65\xcf\xbe\x55\xab\x60\x9f\x4b\x1b\x28\x0f\x15\xee\xcb\x80\xd0\xac\xc4\x2f\x0d\x78\x62\x74\xbb\x37\xc4\x52\x5c\x7d\xd1\x63\x44\xae\x7e\xd8\x68\xc3\x17\x8a\xb7\xac\x5d\x7c\x48\xe4\x0f\x89\x56\xf7\xd0\x8c\x1f\xaa\x5c\xd5\x59\x38\x61\xf4\x18\xeb\xc4\xa9\x36\x14\x5d\x28\x7e\x23\xb6\x96\x85\xcf\x4f\x5f\x81\xb1\x43\xc6\xe8\x30\x9f\x41\xb1\x61\x14\xe2\xb7\x21\xca\x80\x8c\x5d\x62\x84\xd1\x2e\xaa\x56\x99\x42\xb2\x7e\x75\xad\x8d\x70\xfd\x3f\xb4\xc5\xdd\x50\x54\x9a\xa4\xd1\x90\xc5\x0a\xb9\x95\x05\x0c\x29\x0b\xdc\x49\x86\xa4\x4d\x2f\x5c\x23\xc6\xe4\x75\x6a\xab\xa7\xaa\xb3\x8f\xd6\x5f\xc5\x4a\xc9\xc6\x3c\xc6\x1d\xd4\x12\x37\xed\x2e\x65\x28\x93\xaf\x0a\xdd\x07\x8c\x38\x23\xc3\xd6\x70\xc8\x4b\x74\x8d\x46\x50\x9c\xd3\x0d\xfd\x19\x7e\xae\x7f\xc0\xd6\x2b\x98\x58\x1d\x27\xe9\xf1\x40\xc7\xc6\x37\xfa\x65\x13\xa9\x8a\x3c\x2a\x5a\x57\x98\x31\x0a\x08\x55\x5e\xb9\x22\xaa\x30\x0f\x50\x57\x37\xa0\x2f\x01\xd9\x98\x4f\x71\x81\xe6\x95\x5b\x9b\xd5\x86\x7b\x5a\x0b\x8d\xe3\x14\x1b\xc8\xdb\x13\xb8\x53\x08\x60\x8b\xa4\x51\x75\xb2\x21\x2c\xe0\x18\x2b\x2f\x8a\xb0\xa4\xc2\x3a\x18\x1d\xf5\x85\x55\xe6\x8a\x42\xf9\xe7\x25\x0b\x8e\x6f\x70\xdf\xb1\x54\x01\xf0\x2f\x74\x45\x54\x01\xed\xec\xe3\x6e\xad\xda\x5a\x77\xeb\x6a\xf9\xb8\xd4\x4d\xe7\x0b\x6e\x15\x56\x86\x4f\xa8\x0b\x49\x97\x19\xfc\x86\x2e\x8d\x23\x46\x5f\xdb\x64\xcc\x21\xa8\x63\x9a\x04\x32\x8d\x14\x2c\xef\xdb\x7b\xdd\xb5\x8a\xd3\x0a\x04\xb4\x59\x20\xd5\xf5\x80\x0c\xde\x2e\xdb\x0e\x3e\xfd\xef\xd2\x52\xbc\xb4\x36\x0f\xe6\x64\x4e\xba\xca\x18\xff\x2c\x94\x49\x30\x7f\x34\x27\x00\xf5\x15\x58\xe7\x30\xe7\x7a\x3c\xf8\xef\xa2\xac\xab\x98\xe2\x66\xce\xf3\x32\x86\x1a\xb9\x4e\xe6\x39\x0f\x0a\x69\x5a\xed\xb7\x0f\xa3\xe6\x37\x27\x65\xa8\xd6\xad\x5b\x49\x60\xdf\xd6\xd5\x40\x47\x07\x8d\x22\x98\x4a\x08\x1a\xbe\x4e\xdc\xeb\x2e\xac\x03\xfa\x6a\xee\x34\x4c\x98\xfa\x1e\x79\x6d\xa4\xc2\x4b\xdd\x43\xfb\xbd\x87\xc7\xa3\x63\x78\x4e\xeb\x20\x6e\x88\xcc\xeb\xe1\xd4\xcb\x37\x58\x40\xc7\x69\xdc\xb6\xe8\xe5\x30\xaa\x39\xd8\x6f\x77\xaa\xf7\x3f\x01\x00\x00\xff\xff\x61\x8f\x5d\x05\xad\x07\x00\x00")

func complyBlankReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankReadmeMd,
		"comply-blank/README.md",
	)
}

func complyBlankReadmeMd() (*asset, error) {
	bytes, err := complyBlankReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/README.md", size: 1965, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankTodoMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xdb\x48\x0c\xbd\xfb\x2b\x08\xe4\x92\x02\x76\x7c\xdf\x5b\xd0\x64\xb1\x3d\x74\x53\x2c\x8a\x5e\x8a\x02\xa6\x67\x68\x89\xcd\x68\xa8\x25\x39\x4e\xd5\xa2\xff\xbe\x18\x49\x56\x15\x24\x0b\xf4\x3a\x7c\x1c\x3e\xf2\x3d\xf2\x0a\x7e\xfc\xb8\xf9\x1b\x3b\xfa\xf9\x13\xde\x4a\xd7\x27\xc6\x1c\x08\x3e\xa8\x34\x8a\xdd\x66\xf3\x17\x37\xed\x2e\xd1\x99\x12\x7c\x7c\xb8\x7b\x80\xa0\x84\x4e\x11\x8e\x03\x7c\x0e\x15\x3f\x7c\xb9\x6e\xdd\x7b\xfb\x63\xbf\x6f\xd8\xdb\x72\xbc\x09\xd2\xed\xcd\x55\x72\x13\xbb\xfd\x84\x79\xb3\xd9\x5c\x5d\xc1\xbb\xcc\xce\x98\xf8\x3b\x3a\x4b\x86\x0f\x2d\x1a\xc1\x75\x2b\x45\xed\xcd\x66\x07\x9f\xe1\x0b\xdc\xc6\x08\xbd\xca\x57\x0a\x0e\x2e\x60\x52\x34\x10\x04\xc9\xae\x92\x66\xcc\x27\x52\x3e\x0d\x70\x98\xbe\x86\x63\xe1\x14\x0f\xd0\x50\x26\x45\x27\x83\x33\x26\x8e\x20\xc5\xfb\xe2\x73\xca\xdb\x91\x35\x38\x87\x47\x72\xce\x4d\x6d\x23\x52\xae\x6c\x6c\x5b\xbf\x3f\x71\x53\x94\xe0\xcc\x78\xf9\xf7\x66\xe8\xd2\xe1\xf5\x8a\x36\xe4\x70\x00\xfa\x46\xa1\xd4\x7a\x4f\xec\xad\x14\x07\x52\x15\xb5\xb1\xd3\xdb\xe2\xad\x68\x2d\x34\x37\xf9\x44\xf4\xb8\x34\xf9\xa9\x12\xac\x7c\xcc\x31\x47\xd4\x68\xfb\x2d\xf4\x5a\x72\x4d\x40\x83\x4c\x81\xcc\x50\x87\x0b\xfb\x62\x2e\x1d\x7f\x27\xc8\xa8\x8a\xce\x67\xb2\xfd\x8b\x58\x2f\x89\x03\xd7\x08\x00\xc0\x14\xbd\x63\x73\xe5\x63\xf1\x65\x86\x06\xd8\x49\x6e\x16\xf4\x0a\x7c\x9f\xad\xce\xe0\x12\x01\x8c\x51\xc9\x0c\x30\xa5\x25\xfb\x65\x55\x95\x40\xb1\xe8\x6f\xd7\x5d\xf0\x2b\xf8\x2c\xcf\x24\xdc\x24\x12\x38\x75\x7d\xaa\x7a\xae\x70\xb7\x66\xdc\x64\xb0\xd0\x52\x2c\x89\xec\x75\x79\x5c\xa2\x1c\x80\x73\xe4\x30\xfa\x61\xcd\x1f\x0c\x9d\xed\xc4\x14\x47\x9d\xee\xa8\x4f\x32\x74\x94\xfd\x55\xa1\xa6\xf0\x2f\xdd\xe7\xba\x7a\x80\x6b\x23\x82\x7f\xee\x6f\xef\xde\xdf\xdf\x74\x11\x4e\xa2\x40\xdf\xb0\xeb\x13\x81\x05\xe5\xde\xff\xe7\x8b\xd9\xac\x93\x39\x47\x87\xb7\xa8\x14\x21\x49\x18\x97\x62\xf3\x62\x7e\x8b\x1c\x2e\xe0\x84\xdd\x8c\xf8\xa8\xc8\x79\x7c\x00\xc9\x50\x8c\x40\x4e\x2b\x7f\xdb\x60\x4e\x5d\xcd\x89\x54\x67\x86\xa3\x12\x97\xf5\xde\x29\x25\x3a\x63\x76\xc0\xe0\x7c\x66\x1f\xc6\x69\x3c\xf4\x75\x83\x56\xae\x25\x27\xcd\x98\x2e\xbd\xbc\x97\xcc\x2e\x0a\xce\x1d\xd5\x39\x4f\x42\x3d\x89\x3e\x9e\x92\x3c\x2d\x1b\xfc\xb5\x98\x03\xe6\x08\x4a\xbb\xbe\x1c\x13\x5b\xbb\x32\xee\x76\x65\xb0\x1c\x57\x7e\x78\xee\xfc\x69\x8b\x22\x3f\x17\x66\x0b\x98\x73\xc1\x54\x2f\xca\x54\xee\x5d\xd7\x8b\x3a\x28\xfd\x5b\xc8\x1c\x12\x9b\xc3\xf5\xc4\xac\x6e\x66\x4a\x70\xa4\xe5\x36\xc4\x4b\xd6\x9f\x25\x9d\x6a\xac\x5a\xe3\x92\x3a\x27\xad\xed\xe6\x8e\xa1\x5d\xf8\x6e\x57\x64\xb7\x23\xf9\x5f\x5d\xbd\xcc\xa2\x33\x47\xca\xe3\xf1\x4a\x89\xc2\x7c\x33\x7b\xa5\x33\x4b\xb1\x34\xec\xe6\xfb\xb1\x1a\xc1\x42\xe1\xbf\x00\x00\x00\xff\xff\x3f\x2b\x38\xdd\x95\x05\x00\x00")

func complyBlankTodoMdBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankTodoMd,
		"comply-blank/TODO.md",
	)
}

func complyBlankTodoMd() (*asset, error) {
	bytes, err := complyBlankTodoMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/TODO.md", size: 1429, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankNarrativesGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func complyBlankNarrativesGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankNarrativesGitkeep,
		"comply-blank/narratives/.gitkeep",
	)
}

func complyBlankNarrativesGitkeep() (*asset, error) {
	bytes, err := complyBlankNarrativesGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/narratives/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1525909140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankPoliciesGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func complyBlankPoliciesGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankPoliciesGitkeep,
		"comply-blank/policies/.gitkeep",
	)
}

func complyBlankPoliciesGitkeep() (*asset, error) {
	bytes, err := complyBlankPoliciesGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/policies/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1525909140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankProceduresGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func complyBlankProceduresGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankProceduresGitkeep,
		"comply-blank/procedures/.gitkeep",
	)
}

func complyBlankProceduresGitkeep() (*asset, error) {
	bytes, err := complyBlankProceduresGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/procedures/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1525909140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankStandardsGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func complyBlankStandardsGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankStandardsGitkeep,
		"comply-blank/standards/.gitkeep",
	)
}

func complyBlankStandardsGitkeep() (*asset, error) {
	bytes, err := complyBlankStandardsGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/standards/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1525909140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankTemplatesGitkeep = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func complyBlankTemplatesGitkeepBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankTemplatesGitkeep,
		"comply-blank/templates/.gitkeep",
	)
}

func complyBlankTemplatesGitkeep() (*asset, error) {
	bytes, err := complyBlankTemplatesGitkeepBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/templates/.gitkeep", size: 0, mode: os.FileMode(420), modTime: time.Unix(1525909140, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankTemplatesDefaultLatex = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\xdd\x6e\xec\xb6\x11\xbe\xd7\x53\x10\x88\x8c\x1e\x03\xbb\x86\x7d\x8a\x16\x45\x80\x0d\x82\x9e\xfc\xb4\xc9\x1e\x24\x70\xdc\x22\x80\xe5\x0b\x4a\x1a\xad\x88\xa5\x48\x85\xa4\xec\xdd\x12\xba\xe9\xf3\xf4\xa9\xfa\x24\xc5\xf0\x47\xa2\xb4\xeb\x5e\xb4\xe7\xe2\x2c\x35\x33\x9c\x19\x0e\x87\x9c\x6f\xe8\xa2\x96\xd5\xd0\x81\x30\x15\xa7\x5a\x3f\xe7\xac\xf9\xd0\x48\x61\x34\xfb\x07\xdc\xe6\x79\x1c\xe6\x9b\x1c\x44\xcd\x9a\x1c\xf9\x9c\x8a\xc3\x6d\x9e\x97\xb4\x04\xbe\xc5\x8f\x05\xb7\xa7\x3d\xa8\x30\x7d\x1a\xfb\xd1\x24\xd6\x48\xf5\xc1\xd9\x93\xbd\x61\x52\xdc\xe6\x79\xf2\x95\xe7\x1a\x7a\xaf\xb2\x91\x2a\x7f\xb1\xf9\xc2\xc5\x7c\xcc\xd0\x4c\x09\xb4\x03\x45\x95\x61\x15\x87\xdb\x3c\x2b\x06\x0d\x3d\xad\x8e\xf4\x00\x76\xc1\x1b\xc9\x0d\x11\x00\xb5\x26\x46\x92\x12\x08\x97\xb4\x86\x9a\x34\x4c\x69\x93\x05\x87\xb2\xb8\xec\x86\x76\x8c\x9f\x97\xea\x9e\x9d\xbb\x33\xd7\x7b\xa9\x43\x74\x16\xb4\x4b\xd7\x67\x11\xf4\x1b\xb8\x86\xa5\xab\xbc\x93\x35\x28\x31\x2e\x3c\xe1\x4c\x80\x36\x0a\x4c\xd5\xae\x56\xa6\xc1\xe8\x9e\x56\x30\x66\x05\x0e\xbd\x8c\xcd\x93\x09\xf9\xac\x2a\x9d\x48\x3b\xad\xcf\x5d\xb9\xa1\x9d\xee\xa8\x69\xc7\x05\x93\x35\x27\x30\x70\xda\xb0\x86\x0f\xd4\xc0\x69\xc9\x6d\xd8\x89\x9b\xd3\x47\x17\xc8\x5e\xc9\x57\x56\x83\x26\x85\x81\x93\xd1\x43\xa9\x2b\xc5\x7a\x93\x15\xac\x11\x43\x47\xee\x8b\xa0\x8a\x3c\x14\x0d\x2b\xa2\x3e\xf7\xb5\xbb\x27\x37\x84\x35\xa4\xaf\x1b\x03\xa7\x8c\x90\x45\x88\x43\xfc\x41\x54\x21\xae\x20\xaa\xdc\xc7\xeb\xe9\x21\x2c\xe8\xc5\x06\xc6\xb8\x9a\x3d\x98\xe6\x4f\x2f\x96\x89\x7e\xf0\x5c\xd4\x06\x83\x92\xb7\xf9\x52\xd0\x22\x51\x9f\xbb\x24\x44\x68\xc1\xfb\x15\x5c\x95\x8a\x9c\x80\xd3\xe0\x62\x58\x4e\x46\xc8\x52\x11\xc6\x50\xf7\xe0\x3d\x41\x1d\x17\x12\xee\xe4\x44\x89\x86\xe1\xff\x35\x34\x74\xe0\xc6\xa5\x04\x50\x33\x28\xd0\x76\xcf\x0e\x7e\xb4\x7b\x82\x5f\x37\xbf\x54\x94\xc3\xee\x33\x35\x55\xbb\x97\x6f\xa0\x2a\xaa\x61\xcc\x96\xf9\xc7\x40\xfb\x75\x09\x78\x9b\xb3\x2b\xc9\x34\x06\xfa\x4e\xd0\x0e\xf2\xf1\x79\x49\x8c\x49\xfa\xb2\x12\xc6\x8f\x90\x36\x98\xb5\xab\xf0\x09\x78\xab\x64\xd7\x51\x51\xdb\x02\xa9\xa3\xfd\xf7\x3f\xff\xb5\xcc\xd7\x8e\x32\x81\x4a\xdc\x04\x42\x30\x35\x23\xc9\x1f\x9e\xf8\x35\x1f\x9d\x15\xe5\xf2\xe0\x44\x81\x7c\x69\x4a\x53\xa1\x57\xa6\x22\xc9\x9b\x8a\x5f\xb3\xa9\x15\xe5\xd2\x54\x14\x58\x99\xea\xa4\x90\xeb\x55\x05\xd2\xf3\x67\xda\xf7\x4c\x1c\x76\x06\x4e\x5b\x2a\x34\x4b\xe5\x27\xcb\x1b\xbf\xf6\x35\x39\x5f\x51\x56\x0e\x4d\xc9\x3e\xc9\xad\xfd\xa2\xa6\xbd\x88\xb6\x27\x7d\xf8\x86\x1d\x98\xd1\x9b\x3d\x35\x4c\x6c\xbe\x57\x00\xc7\xdb\xb8\x03\x5e\x22\xdd\x81\x05\xe5\xda\x0e\x78\x81\x95\xf9\x4f\x3f\xfc\xb8\xde\xef\x24\xed\x4f\xf0\xe9\x87\x1f\xc7\xc9\xb1\x44\xd8\xfb\xf1\xe9\x87\x1f\x67\x17\xe6\x8f\x4b\xeb\xc9\xcc\xf4\x4a\x6b\x58\x76\x43\x06\x0d\x64\xe8\x7f\x1b\xa4\x01\x3c\xb9\xf4\x95\x32\x4e\x4b\x0e\x1b\xd2\x48\x45\xb4\x51\x94\x1d\x5a\x43\x9c\x80\x26\x4c\x90\x57\x50\x25\x35\xac\x23\x20\x5e\x99\x92\x02\x8b\x89\xce\x8a\xbf\x36\xdf\x31\x0e\xdf\x9e\x98\x36\xda\x06\x85\x77\xda\x9c\x47\x9b\x2e\x29\x30\xc6\xd1\x8e\xc1\x76\xc7\x2a\x25\xcd\xb9\x5f\x5a\x5f\xe9\x9b\x84\xbc\xc6\x9b\xcb\x92\x32\x49\x24\x9b\xb2\x22\x5d\xc4\x65\x12\x18\xb3\xe2\x6f\x1a\x3e\xc7\xcf\x5f\xc0\x3c\xf7\x4a\x1a\x35\x68\x26\xc5\x8b\x2d\xa9\x66\x95\xbb\xe9\xc9\x0d\xa9\x99\x46\x07\xc9\x2c\xe0\x02\x65\x0c\x71\xb7\x54\x86\x2b\x2b\x7e\xa6\x5a\xff\xe4\xad\x3e\xc9\x9f\xc3\xda\xdb\x73\xdf\x82\xd0\xa3\x1d\x14\x47\x4d\x83\xe2\x84\xe9\x58\x43\xcb\x33\x69\xcf\x3d\x28\x05\x8d\x4b\x8d\x18\xe6\x2d\x13\x5b\x21\xcd\xba\x2c\x37\x54\x54\xe7\x57\x55\x5e\xad\x50\xcf\x83\x60\x95\xac\x61\x67\xd4\x00\x2f\x36\xea\xf5\x97\x79\x25\xb9\x54\x9c\x89\x23\x5e\x7d\xd7\x3d\x1d\x34\xe0\xa5\xa7\x37\xf5\x2b\xeb\xb5\x1b\x8e\xd6\xcd\x43\xbf\xdd\xe0\x3d\xcf\xa3\x33\x8e\xa2\xc1\x0c\xbd\x75\x56\x0d\x33\x1c\xb6\x1d\x18\x1a\x12\x3d\xfe\xc3\x12\x86\xbc\x9d\xcd\x67\x99\x7c\xdc\x2c\xce\x09\x1d\x4c\x2b\xd5\x3b\xd3\x3d\x73\x67\xf3\x44\x6a\xad\xe0\x08\xe7\x37\xa9\x6a\x7d\x39\x3b\x72\x76\xd6\xe5\xd1\x2c\x98\xc7\x61\xc8\x1b\x12\x13\x67\xa5\x7a\x11\xcf\x54\xf9\xcc\x70\xfb\xb0\x59\x30\x91\xee\x04\x76\x01\xa4\xf8\xaf\xdb\x3c\x9f\xc6\xa1\x64\x7f\xa6\x4a\x4a\x11\x2c\x2e\x95\x54\xcc\xc0\xac\x64\xfa\x42\x08\x18\xc7\x41\xc9\x9f\xf9\x00\x57\x55\x0c\x8a\xcf\x1a\xe2\xc7\x6d\x9e\xc7\xe1\xb5\xf9\x01\x7a\xad\x02\x59\x4a\x55\x83\xda\xd9\x7b\x72\x4f\xee\x93\x18\xa5\x62\xa5\x02\x7a\x9c\x43\x82\xd8\x48\x71\x6d\xce\x1c\xac\xa6\x1d\x8c\x04\x0f\x98\x14\xbf\x33\xfe\x6a\x90\x42\x3a\x84\xe6\x8e\x96\x3b\x66\x28\xfe\xee\xf1\xf8\x7b\xa0\x7d\x27\xa5\x11\xee\xba\xba\x21\x94\x73\xf9\xa6\xe7\x4b\x0b\xa1\x16\xde\x62\x4d\x94\x59\xec\xe5\x01\x64\x07\x46\x5d\x05\xad\x33\x2f\x8f\xc3\x8b\x1b\x25\x32\x56\x10\xd4\x61\xfc\xff\x1b\xd7\xe9\x56\x2a\xd3\x52\x51\xeb\x9d\x6c\x1a\x5f\x10\x7d\xdf\x20\x4d\x0b\x0a\xad\xe8\xa9\x95\x98\x49\xb3\x7f\x58\x03\x76\x69\xab\x81\x57\x5b\x09\x3c\x34\x01\x8e\x3e\x23\x14\x9f\xce\xf9\x05\x39\x5f\x02\xbe\x15\x2a\xec\x25\x3f\x1f\xb8\xd4\x9a\x51\x87\xd6\x02\x7c\x41\x73\x83\x0b\x65\x22\xe0\x9c\x48\x91\xd4\x05\xcf\x43\x2f\x0f\xda\x52\x66\xba\xe0\x60\x65\x22\x5d\x9a\x99\xa5\xdf\x33\x96\x48\x44\x93\x11\xc0\x61\x95\x4c\x37\x53\x50\x53\xb2\x72\x75\x1b\x7b\xe2\x98\x15\x25\x2b\x39\x93\x07\x45\xfb\xf6\xec\xf3\xda\x85\xd6\x51\xb7\x8e\x80\x3b\x94\x7c\x86\xf3\xd5\x73\xca\x84\xa0\x26\x58\x5a\xe6\x0f\xca\x63\x8a\xac\xb3\xf2\x42\xb3\xfb\xd9\x2d\xf5\x2f\xfa\xc4\xa8\x69\x2e\x92\x2b\xca\x45\x46\x47\x7e\xd8\x84\x74\x7d\xe8\x0e\xad\xeb\x92\x95\x0a\xb4\x1c\x54\x05\x36\x4f\xf9\x0b\x18\xbc\xe8\xc8\xb4\x61\x7e\xeb\x16\xdd\x5b\x20\xaf\xce\x4e\xeb\xe4\xb8\x36\x02\xde\x12\xc4\x61\xb1\xbe\x8d\x16\x19\x1a\x8c\x8d\x1b\xbf\xfb\x0b\xd5\x47\xe0\x7c\xe3\x6a\xb6\x8f\x47\xa1\x3b\xca\x79\x61\x02\xba\x77\xd8\x23\x35\xd1\xb2\x43\xcb\x11\xe4\x30\x71\xd8\x76\xb4\x52\x12\x4d\xe6\x57\xc8\xcb\x75\x18\xc4\x01\x17\xab\x90\xe2\xe0\x18\x9b\x52\xca\xa3\xa1\xa5\x46\xa0\xf3\x1d\x3b\xcd\x37\x0e\x5e\x3f\x7e\x2e\xf9\xa0\xe0\xb7\x81\x29\xd0\x13\x97\x04\x45\xb7\x2b\x04\x14\xf9\x97\x90\x2a\x72\xc6\xa2\xa3\x47\xd0\xf4\x15\xf0\x0b\xc4\xab\xf3\xc5\x5b\xba\x58\xb3\xdb\x21\x56\xad\xbd\x0f\xe4\xd3\xe6\xa0\x9a\x86\x71\xbc\xa0\x51\x29\x35\x1c\x8c\x01\x95\x61\xdb\x55\x74\xf4\xf4\xc6\x6a\xd3\xda\x82\x35\x35\xeb\x8a\xef\x99\xf8\x5a\x50\xf3\xb5\x23\x7e\x55\x60\xff\xec\x86\xc9\x08\x73\x7c\x29\x57\x34\x6c\x9c\xd4\xb5\x80\x71\x5e\xeb\xf3\xd4\xaf\x5c\x77\xec\xc7\xe9\x70\xa1\x32\xd0\x9c\x4e\xef\xb0\x3b\xd1\xd9\x0d\x71\x5d\x20\x61\x1d\x3d\x60\xe0\x1b\x22\xa0\x02\xad\xa9\x3a\x6f\x88\x96\xc4\xb4\xd4\x10\xd3\xc2\x99\xbc\x31\xce\x89\x90\x86\xc8\x57\x50\x0d\x97\x6f\x48\x26\x3d\x3d\x40\x76\x43\x3a\xaa\x0e\x4c\x68\x44\x3a\xa1\xef\xdc\x10\x2a\x6a\xc2\x0c\xc2\x20\x6d\x70\x6e\x8f\x37\x09\x02\x43\x23\x9d\x8e\x37\xc5\x0c\x38\x25\x61\x8a\x76\x80\x97\x89\x03\x81\x53\xcf\x59\xc5\x0c\x09\x87\x0e\x13\xa2\x60\xa2\xe2\x43\x0d\x71\x63\x9e\x5d\x94\x36\xc4\xaf\x6c\x43\xee\xee\xee\x5e\xac\x7f\xa9\x38\xc2\x59\xdb\xef\x99\x18\xad\x93\xd9\x4d\x1b\xb2\xf1\xc2\xbb\x39\xa4\x9b\x23\x40\x4f\xb1\x75\x36\x8a\x1a\x26\x2f\x9e\x46\x8e\x7a\x4b\xb5\x2b\xa0\x98\x0a\x37\xe4\x33\x3d\x82\xc3\x26\x7a\x91\xaf\xda\x00\xad\x89\x6c\x48\x2b\x8d\xe3\x7e\x99\x15\x0a\xd2\x6e\xb6\x45\x7c\xf9\xfc\xf1\xc5\x7e\xf1\xb1\x88\x33\x2d\x56\x77\xfb\xc5\xc3\x38\xae\xfa\x4e\xa3\xd8\x11\xe4\x60\x56\x17\x9a\x90\xaa\xa3\x1c\xba\x17\x3b\x70\xe8\xf0\xdc\xd0\x57\xc9\x6a\x84\xda\x25\x87\x4e\x93\x37\x66\x5a\x52\x68\x39\xb8\x12\xde\x02\xad\x41\x05\x6a\x44\xa0\x5f\x66\x45\x5f\x37\x68\x41\x1c\x6a\x68\xbe\xf1\x68\xfd\x53\xa8\x5d\x76\xe5\x35\xaa\x1a\xed\xca\x3d\x26\x6a\x70\xfd\x58\x7c\x62\x5a\x1c\xc4\x9e\x2a\x7d\x64\xfd\x95\x46\x24\xb2\xc6\x6c\xb4\x37\xc4\xd5\x46\xdc\x2e\x0e\xe2\x80\x87\xa5\xa7\xca\x6b\x1e\xed\x7d\x6f\xc6\x35\xcf\xcd\xb4\x7f\xec\x0d\xe9\xf9\xa0\xc9\xc7\xde\x90\x8e\x89\x41\x93\x07\x14\x4e\x60\x7e\x32\x0d\x3a\x50\x07\x10\xd5\x39\xbc\x57\x8d\xf6\xf7\xd0\x39\x10\xd5\x2b\x78\x05\x11\xb2\x79\xe0\x9c\xb8\x57\xad\xac\x08\x6f\x4e\x53\x00\x0c\x66\x09\xde\xbc\xb8\x16\x5f\x48\xa3\x72\x66\xa0\xd3\xd0\x7b\x6f\xaf\x3a\x8b\x0c\x8f\x1d\xc4\xd0\x95\x08\xf7\xab\x50\x56\x9c\x97\x95\x1c\x84\x01\x65\x35\x54\x62\xe8\x6a\xe8\x4d\x3b\xba\x72\x98\x10\x6e\xb1\xe0\x4c\x5f\xa1\x18\xfe\x21\xa9\x82\x7e\x07\xde\xd3\x76\xbf\x4a\xac\xa1\xec\xa9\xa2\xee\x0c\xcd\xfb\x77\x43\x1e\xa1\x86\x06\x03\x40\x50\xe4\x76\x92\x09\xcf\x98\x2d\x7d\x45\xb0\xa9\x30\xf3\x8f\x40\xe2\x32\x10\xb0\x9d\x8a\x49\xb8\x18\x84\xd7\x52\x7b\xdc\x53\x70\x30\x85\xe4\xf5\x2c\x30\x8d\xd6\x87\x63\x62\x8c\xcf\x0f\x2f\x76\x31\x09\x8f\x47\xd1\x95\xf2\x84\x59\x88\x58\xc3\x19\x4d\x17\xf2\x9e\xdd\x85\x4c\xfa\xb1\xb6\x9e\xf2\x26\x07\x52\xe2\x85\x0f\x69\x4c\x6b\xa6\x3c\x76\x8d\x8f\x77\x37\xae\xef\x23\x25\xab\x19\xa1\x9a\x20\x3a\xc0\xdf\xe9\xfe\xa3\x1a\xef\xc5\x4e\xd6\xac\x61\xa0\x09\xdc\x1d\xee\x48\xac\x2b\x08\x28\x1d\x20\x36\x70\xda\xd6\x4c\x6d\x95\xe1\xeb\x87\xc5\xe7\xc7\xa7\x7d\x7c\xa4\x46\xfc\x51\x33\x04\x92\x53\xcf\xb1\x78\x9b\x9e\x98\xf3\x8b\xc6\xff\x84\xb2\x9f\xe0\xd7\x5f\xe1\x49\x1b\x6a\x60\xf7\xb0\x7e\xa8\x7b\xdc\xfb\xa8\x95\x70\x60\xe2\x91\x7c\xf1\x50\x80\xa8\x1f\xc7\xb5\xd8\xfe\x31\x11\xdb\x07\xb1\x7d\x14\x4b\xa1\xcb\xe3\xd3\x7e\x8c\xea\x46\xbb\xd0\x96\x8a\xed\x9f\x1e\xa3\xd8\xde\x8b\xed\x97\xdb\x93\xdd\x10\x0d\x26\xd6\x17\xd2\xb0\xc3\xa0\x80\xf4\x9c\x56\x80\x0a\x30\xb9\x5b\x53\xf6\xd7\x6a\x78\xd3\xeb\xaf\xbd\xbc\x45\x91\x55\xd9\xf4\xb0\xc8\x5d\xaf\xdb\x50\x97\xd6\x48\xc1\xbd\x3f\xb4\xb5\x1a\xb3\x02\x8b\xa4\xc7\xba\x8e\x88\x3e\x3a\x26\xd0\xda\xa6\x1f\xcf\x8f\x3f\x6d\x1e\xbf\x7d\xb1\x39\x7e\x6c\x2b\xf7\xfc\x6c\xf2\x28\x81\x45\xe3\x79\xff\xd3\x66\xff\xad\x7b\x52\x95\x26\x91\x98\x16\x3c\xbd\x24\xa0\x37\x6e\x10\x5e\x0d\xdc\x5f\x4b\xb0\x39\xc2\x2e\xbc\xf0\x03\x9b\xfb\xdf\x7c\xbc\x8a\xaa\xf5\x50\x4e\xaa\xd6\xd7\x62\xe4\xb9\x1d\xc5\xab\x3a\x7c\xdb\x3c\x8e\x56\xca\xfc\xd3\x83\x43\xc4\x6e\xe4\x1f\x13\x22\x35\xbc\x4c\x78\x70\x4d\x0a\x84\x0e\xd3\x63\xc2\xaa\xf4\x68\xc3\xcc\x60\xae\x3a\x35\x31\xa3\x57\x13\xc1\x5b\x4b\x26\xe7\xd3\xf8\xbf\xdb\x2c\x6a\x8a\xb3\xf1\xff\x7c\xcc\x32\x9f\x6c\x36\x9e\xbe\x71\x19\x6f\xcc\x10\xf7\xb1\x5c\x79\xa9\x8d\xa2\x95\xab\xe5\x7e\x7a\xa4\x8c\x59\x1e\x87\xd8\x2b\x8a\x3a\xe5\x4c\x3b\xea\x3d\x77\x39\xb6\x2d\xa1\x91\x0a\x6d\xe5\x4b\x0a\xca\xa5\x0f\xea\x46\x56\xb7\x79\x66\xaf\x3c\x67\x25\xcf\x4e\xcb\x17\x16\x23\xab\xf8\xb4\x11\x87\xa1\xda\x94\x9c\x56\xc7\x8b\x0c\x49\x4b\x8e\x91\x55\xac\x5e\x46\x56\x5b\x5f\xaa\xc6\xac\x70\xd0\x5a\x36\x21\x4f\x75\xb6\x42\x57\xd2\xc5\x04\x8b\xab\x6c\x3c\xde\x5f\xf1\x9b\x99\xef\xcf\x62\x22\x50\xca\xfa\x1c\x12\x7e\xea\x38\xe7\x86\x6f\x6a\xc0\x92\x1e\x30\xee\x93\x23\x49\x79\xdc\xba\xbf\xf0\xa1\x89\xb4\x1c\x60\x87\x8a\x2d\x6e\x6c\xd5\xb6\x73\x36\xfb\x52\xbb\x10\x56\xd0\xbc\x23\x1c\xdc\x8c\xd1\x4a\xdd\xb2\x57\x3a\xc5\x65\x63\xb8\x6c\x32\xc7\xec\x42\xdf\xba\xeb\xed\x15\x13\x66\xa1\xe2\x62\xdd\xcf\xfe\x15\x71\xe9\xe9\xcb\x9c\x67\x51\x73\x9a\x6f\xb4\x31\xa0\xd2\x74\x73\x84\x34\xdb\x5c\xda\xce\xe7\xe1\x3f\x01\x00\x00\xff\xff\xd4\x00\x0b\x92\xe1\x1d\x00\x00")

func complyBlankTemplatesDefaultLatexBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankTemplatesDefaultLatex,
		"comply-blank/templates/default.latex",
	)
}

func complyBlankTemplatesDefaultLatex() (*asset, error) {
	bytes, err := complyBlankTemplatesDefaultLatexBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/templates/default.latex", size: 7649, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complyBlankTemplatesIndexAce = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x6d\x6f\x1b\xb9\x11\xfe\xee\x5f\x31\x50\x3e\x58\xc6\x45\x5c\x3b\x57\xb4\x87\xbb\x2e\x0a\xc7\xce\xa1\xc1\xf9\x62\xa3\x36\x0a\x14\x45\x51\x50\xe4\x48\x4b\x9b\x4b\x6e\xc8\x59\x39\x3a\xc5\xff\xbd\x20\xf7\x45\xab\xd5\xca\x32\x1a\xb9\x28\xce\x1f\x24\x8a\x2f\xf3\xcc\x0c\x1f\x0e\x67\xe8\x14\xa4\x15\xb4\x2c\x10\x32\xca\xf5\x51\xf8\x00\xcd\xcd\x3c\x45\x73\x04\x90\x21\x97\x47\x00\x00\x39\x12\x07\x91\x71\xe7\x91\xd2\x92\x66\x93\x1f\x62\x37\x29\xd2\x08\xab\x15\xbb\x71\xf6\x1e\x05\xb1\x4f\x3c\xc7\xa7\xa7\x38\xa6\x95\x79\x00\x87\x3a\x1d\x79\x5a\x6a\xf4\x19\x22\x8d\x20\x73\x38\x4b\x47\x19\x51\xe1\x7f\x4c\x12\x21\xcd\xbd\x67\x42\xdb\x52\xce\x34\x77\xc8\x84\xcd\x13\x7e\xcf\xbf\x24\x5a\x4d\x7d\x32\x2d\x75\xce\x93\x53\xf6\x47\xf6\x2e\x11\xbe\xfe\xcd\x72\x65\x98\xf0\x7e\x74\x50\x14\xff\xc8\x49\x64\x35\x96\xe7\x46\x7a\xb2\x06\xbb\x63\x9b\xb8\x5e\x38\x55\x10\x04\xcf\xa5\x23\xc2\x2f\x94\xdc\xf3\x05\xaf\x7a\x47\xe0\x9d\x78\x31\x7c\x6e\x73\x34\xc4\xee\x7d\xf2\x8e\xbd\x7b\xc7\x4e\x9b\x8e\x00\x77\x7f\x70\x34\xcd\x09\x5d\x72\xc6\x02\x50\x6c\xbf\x12\x4e\xe1\x90\x68\x29\x9c\x35\xc9\x29\x3b\x3b\x63\xa7\x9d\x9e\x0d\xc8\xc8\x2c\xc3\x73\x4c\x47\x0b\x85\x8f\x85\x75\x34\x02\x61\x0d\xa1\xa1\x74\xf4\xa8\x24\x65\xa9\xc4\x85\x12\x38\x89\x3f\xde\x82\x32\x8a\x14\xd7\x13\x2f\xb8\xc6\xf4\xac\x12\x93\x82\xf0\xbe\x6e\xad\x75\x8e\x1d\x10\x28\x5e\x46\x9f\x72\x29\x3f\x2c\xd0\xd0\x95\xf2\x84\x06\xdd\x78\x74\x79\xfd\xeb\x45\x05\x76\x65\xb9\x44\x39\x7a\x0b\xb3\xd2\x08\x52\xd6\x8c\x31\x4c\x3d\x81\x55\x2d\xa5\x23\xe7\x73\x89\x6e\x79\x8b\x1a\x05\x59\x77\xae\xf5\xf8\x98\x05\xc3\x8e\x4f\xd8\xcc\xba\x0f\x5c\x64\xe3\xb5\x10\xdd\x95\x00\x80\x9a\x29\x63\xd0\xfd\xf5\xee\xd7\x2b\x48\xa1\xf2\xca\x45\xf0\x0a\xd9\x5b\x72\xca\xcc\xc7\xdd\x29\x27\xed\xd2\xa7\xa6\xf9\x74\x72\x54\xb7\x1a\x10\xf0\x99\x7d\x1c\x07\x27\x76\xb1\x16\xdc\x81\x22\xcc\x3d\xa4\x6b\xcd\xe7\x48\x1f\x34\x86\xa6\x7f\xbf\xbc\xd0\xdc\xfb\x70\x64\xc7\xc7\x64\x8b\x89\xe1\x8b\xe3\x35\xde\xcc\x3a\x18\x47\x19\xe9\xe9\x4f\xa0\xfe\x1c\x45\x31\x8d\x66\x4e\xd9\x4f\xa0\xbe\xfb\x6e\xd3\xae\x06\x0d\xd2\x0a\xf4\x9f\xea\x5f\x9d\x51\x35\x83\x71\xe8\x66\xc4\xe7\x01\x10\xd2\x34\x85\xd1\xd5\xc7\xd1\xa6\x10\x80\x24\x01\xc3\x17\x6a\xce\xa3\x5d\xc4\xa7\x7e\x63\xb8\x95\x23\x82\xea\x61\x1b\x59\xe0\x0a\x57\xc6\x57\xf6\xf7\xe5\x01\xf4\xa6\x73\x29\xc7\xc7\xca\x4f\xb8\x20\xb5\xc0\x8e\xbd\xd1\xb5\x80\xda\xe3\x3e\x11\x0e\x73\xbb\xc0\x67\xa4\x1c\xed\x91\x98\x24\xe0\x31\xee\xdc\x0e\xeb\x94\x8c\x0e\xea\xef\xe8\x3e\x6d\x32\x25\x25\x9a\xff\xca\xa6\xc6\x2d\xc3\x22\x8e\x86\xda\x4d\x2b\x7c\x4f\xad\x5c\x56\x11\xa4\xb2\x8b\x65\xe8\x2c\x53\x7e\x52\x38\x95\x73\xb7\x0c\x4d\x9f\x73\xad\xeb\x35\x71\x7c\xd2\xae\x8a\x5d\xf5\x46\xa2\xeb\xa0\x65\x67\xec\xb9\x3b\xa6\xfa\x2b\x98\x2f\xa7\xd5\xb4\x1b\xab\x95\x58\xbe\x85\x1b\x67\x05\xca\xd2\xe1\x5b\xe0\x46\xc2\x79\x29\x15\xc1\x2d\x71\x2a\xfd\x86\x06\x33\x6b\xa9\x95\x64\xf8\x82\x05\xc6\x05\x65\xa7\xf6\x0b\xca\xd0\x98\x95\x5a\xc7\xc0\xd3\x01\x1c\x54\x15\xa0\xd4\xd1\x4c\xf5\x1b\x4e\xfe\xd0\xf3\xb6\x56\xac\x3e\x61\xcc\x2e\xd0\x85\x48\xd7\x9b\x01\xe0\xc9\x59\x33\xdf\xea\x06\xe0\x60\x8d\xd0\x4a\x3c\xa4\xa3\x75\x68\xfb\x31\x9e\xf9\xe3\x46\xda\xf1\xc9\x08\xae\x87\x25\x77\xb0\x0d\x77\x8e\x07\xc6\xfa\xc3\xa0\xaf\xe5\x05\xfc\x4f\xbb\xa4\x77\x34\x28\xc2\x06\xa9\x43\xe1\x37\xd2\x02\xfa\xcd\xb0\xe4\x2e\x76\x43\x8a\x43\xa1\xb7\xf2\x22\xfe\x2e\xe9\x1d\x0d\x3c\x71\x23\xb9\x93\x07\x52\xa0\x15\x17\xf0\x6f\x77\xc8\x4e\xba\x0a\xe0\x42\x49\x34\x02\xb7\xe6\x3c\x0f\xd4\x2c\x0b\x38\x1f\xea\x36\xfc\x9d\x97\xba\x3a\x3c\x6f\x1a\x16\xb2\xe6\xf8\x37\x78\xed\x41\x61\xf5\x95\x5e\x03\x4f\xb5\x15\x0f\x9f\x4b\x4b\x6b\x4d\xb2\xef\xe1\x2e\x53\x1e\xbc\x22\x0c\x09\x80\xb7\x5a\x49\x4e\xe8\x81\x6b\xdd\x5e\x60\x3e\x24\x7b\x9c\x50\x02\x59\xa0\x6c\x77\x60\xc8\x9a\xb3\xc9\x84\xd5\x65\x6e\xe2\xa9\x5e\x08\x34\x84\x0e\x65\x37\xea\x84\xd1\x30\x68\x0d\x4e\x28\x53\x4e\x76\x9c\x23\xd5\x62\xc3\x55\xeb\x50\x13\x56\x7c\xcf\x32\xee\x27\x21\x4f\x9a\x34\x82\x21\x64\x13\xce\x6a\xb8\x73\x5c\x3c\xa8\xce\x96\x36\x48\x5b\x4b\x9e\x85\x0b\x19\xb8\x32\x73\xb8\xe5\xa4\xfc\x4c\xad\x01\x7c\x6f\x62\x54\xaa\xb7\xad\xab\x15\x0b\x31\xcf\xb3\x66\x4d\x2b\xa5\x13\x3f\xbf\x4d\xaf\x3b\x4b\x5c\x7f\x93\x4e\x51\x42\xab\xcf\xff\x78\xb7\xda\x43\x7b\xe8\xfd\x3a\x8f\x89\x01\xdc\x29\xf1\x80\xf4\x12\xbf\x70\x20\xee\xe6\x48\xe9\xbf\xa7\x9a\x9b\x87\xba\x84\x59\xad\xd8\x95\x32\x0f\x9e\xb5\x8a\x5e\x17\x68\x9e\x9e\x46\x5b\x91\xa2\xf5\x6b\x6f\xe6\x81\xec\xb9\xd6\x12\x3d\xd5\xf6\xbc\xc8\x9c\x01\x85\xa2\x8c\x4b\xbe\xf4\x4f\x4f\x20\xf9\xd2\x1f\x68\xcf\x9f\x35\x69\x8b\x05\x75\x32\x70\xe0\xfd\x0e\xce\x86\xbf\xe1\xe7\x12\xfd\x21\xb6\x3b\xea\xb8\x77\xab\x3b\xb3\x0e\x7a\x9c\x0f\x6c\xc7\xb9\xd6\xfb\xcd\x38\x58\x18\xe8\x0c\xd2\xa3\xad\x06\xfd\xb3\xee\x48\xa0\x70\x76\xee\xd0\x7b\xd6\x36\xd6\xa9\x2b\x2c\xb8\x2e\x31\xdd\xd4\xf6\x42\x5b\x1f\xa2\x28\xe4\xfc\x4b\xba\xdb\x90\x37\xeb\x04\xe9\xdb\xae\xc6\x6e\xb6\xbb\xe1\xc8\x2a\x6f\xd8\x95\x7a\x7d\x0d\x96\x85\xfb\x1a\xb8\x81\xe6\x92\x06\x3b\x8b\x37\xa7\x75\x73\x6e\xd4\x6f\x55\xa5\x15\xb2\xe4\xd0\x29\x6c\x5e\x68\xc5\xc3\xfd\x8e\x66\xa1\x9c\x35\xb1\x6c\xac\xa5\x12\x9f\x6a\x64\xd5\xe7\x76\xaa\x4b\xed\x73\x51\xfd\x7b\x33\x3d\xa6\x0c\xc2\x0d\xdd\xef\x3b\x0f\x95\xf3\x32\xef\x77\xdf\x5c\xfe\xbc\x16\xbc\x51\x28\x04\xe6\x38\x6e\xe6\x08\x6c\x6d\x36\x6c\x54\x04\x7d\x64\x19\xc8\xb6\x55\x37\x34\x03\xb5\x06\x5b\x63\x5b\x54\x8f\xe4\x5e\xad\xd8\x75\x49\x45\x49\x3f\x2b\x8d\x26\xca\xdc\x3c\x03\x43\x44\xef\xaf\xd8\x30\x06\x4d\x73\x1f\xbf\x69\x12\xda\xd7\x65\xcb\x60\xaa\xfc\x15\xe6\x81\x21\x26\xd2\x60\x8a\x19\x5f\x28\xeb\x02\x57\x5a\xd7\x01\xe6\x85\xb6\x4b\x0c\x29\x99\x91\xf1\x91\xc6\x71\x41\xd6\xf9\xff\x57\x7e\x34\x86\xfe\x5e\xd8\xd1\x96\x18\xaf\xcc\x8f\xe1\x52\x26\x44\x13\x0c\x75\xc1\x14\xc1\x17\x28\xd4\x4c\x09\xf0\x84\x85\x07\xca\x38\x01\x77\x08\xc4\x1f\xd0\x80\x32\xe0\xd0\x17\xd6\x78\x0c\x79\xfa\x03\x2e\x21\x3e\xa6\xbd\x2a\x51\x3e\x5e\xf6\x7b\x6e\x45\x86\xb2\xd4\x08\xe3\xb0\x87\x30\xb3\x2e\xe7\x74\xf2\x02\xda\xb4\xf6\x7f\x0b\x71\x3e\x5e\xf6\xba\x57\x2b\x35\x03\x76\xe1\xac\xd9\x9a\x1f\x9f\x0f\xc3\xa2\x81\xd1\xd5\x0a\xb5\x1f\x80\xb8\x36\x20\x31\xe7\x46\xf6\x67\x1b\xb9\x9b\x42\x6d\xc9\xf8\xba\x0c\x1a\x2e\x46\xbf\xd6\xb4\x59\xd6\x57\x4d\x55\x00\x80\x6f\x6b\x9b\xe9\xb2\x7f\x09\xc5\x0b\x99\xe7\xcf\xf2\x66\xf8\x99\x66\x3f\x89\x9a\x52\xed\x17\x5c\xbe\x84\x5f\x6d\xf1\xf4\x97\x9d\x23\xf0\x7e\xb9\x9f\x5d\x4d\xe1\xf3\x02\x6e\xd5\x53\x7f\xc1\xe5\xbe\xf0\x53\xfb\x7d\x98\x8f\x00\xeb\x17\xb2\xd5\x8a\x5d\x62\x55\xdc\xab\x01\xaa\x05\x86\x0e\x55\x89\x15\x68\xf4\x79\x29\x04\x7a\x0f\xff\xe8\x45\x87\x5d\x34\xfd\x64\xf7\xf0\x73\xc0\x9a\xd6\x57\xad\x2a\xef\xfb\x1e\x00\xe0\x2d\x03\xfe\xd4\xc6\xde\x97\x44\xdb\x2d\x41\xbb\x8f\x4c\xec\x9a\x59\x4b\xe8\x58\xf5\xb5\xce\x4f\xfb\x2f\x80\xcd\xb1\x79\x36\xd5\x2c\xba\xef\x15\xd7\x9d\x04\xac\xbe\x61\x2f\xac\x99\x29\x89\x86\x14\xd7\xf0\xee\xf4\xec\x87\xa3\x81\x7f\x68\x24\x49\x38\x21\x21\x2f\x43\x19\x9f\xe9\x25\x2e\x50\xdb\x22\x6f\x0e\x6d\xff\x69\xf0\x3f\x01\x00\x00\xff\xff\xb3\x50\xbc\x8c\xe5\x1b\x00\x00")

func complyBlankTemplatesIndexAceBytes() ([]byte, error) {
	return bindataRead(
		_complyBlankTemplatesIndexAce,
		"comply-blank/templates/index.ace",
	)
}

func complyBlankTemplatesIndexAce() (*asset, error) {
	bytes, err := complyBlankTemplatesIndexAceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-blank/templates/index.ace", size: 7141, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x41\x8f\xdc\x36\x0f\xbd\xeb\x57\xf0\xc3\x5c\x12\x20\x98\x39\x7c\xb7\xdc\xd2\x2c\x8a\x16\x48\xd3\x45\x67\x6f\x45\x01\xcb\x12\x6d\x13\x23\x4b\x2e\x45\x79\xea\x06\xf9\xef\x05\x65\x7b\xbc\x28\x16\x9d\xd3\xc8\xa2\xc8\xf7\x1e\xf9\x78\x82\x6f\xdf\xce\x5f\xed\x88\xdf\xbf\xc3\xe7\x34\x4e\x81\x6c\x74\x08\xcf\x9c\x7a\xb6\xa3\x31\x2f\x03\x65\x60\x9c\x52\x26\x49\xbc\x80\x4b\x31\xa7\x40\xde\x0a\x66\xb0\x21\x80\x4f\xae\x8c\x18\x45\xa3\x82\x15\xf4\x20\x09\x64\xc0\xff\xcc\x7b\x36\xe6\x04\x57\xe1\xe2\xa4\x30\x1a\xf3\x2a\xe2\xc8\x67\x19\x21\x71\x6f\x23\xfd\x8d\x1e\x6c\x86\x2e\x85\x90\xee\xf9\xa3\x31\x4d\xd3\x98\x68\x99\xad\xd0\x8c\xf9\x02\xfa\xfb\xfa\x38\xc3\xc4\x69\x26\x8f\x60\x23\xa4\x19\x79\x26\xbc\x43\xea\x2a\xaa\x2d\xa1\x15\x4a\x11\x6c\xf4\xf5\xa3\x3b\xca\x63\x9c\x89\x53\x54\x04\x67\x33\xa5\x40\x8e\xf6\x02\x00\xcf\xdb\x19\x7a\x4d\x1b\xeb\xdb\x16\x07\x3b\x53\x62\x2d\x80\xe3\x14\xd2\x82\xaa\x4c\xf4\x2a\x95\xb0\x75\x92\x38\x9f\xcd\xc4\xc9\xa1\x2f\xbc\x27\x7b\x7e\x9c\x61\x62\xcc\x8e\xa9\x45\xc8\x13\x3a\xea\xc8\x41\x16\x9c\x32\xc8\x60\xa5\xaa\x20\xf6\x86\x11\x28\x02\x63\x9e\x52\xcc\xa8\x1a\xdf\x70\x01\x9c\x55\xa9\xb3\xc9\x62\xa3\xb7\xec\x77\xa4\xd7\xfd\xbc\xa5\x5c\x36\x9a\x51\x38\x85\x0c\xd9\x0a\xe5\x8e\xd0\x43\xbb\xfc\x5b\x80\x69\xef\x90\x28\x1b\x6d\xf3\x96\xf3\x65\x3f\xef\x79\x56\x3d\x8b\x4c\x45\xa0\x4b\x3c\x5a\xd9\x45\xfe\xe9\xe5\x97\x2f\xf0\x64\xf3\xd0\x26\xcb\xbe\x8a\xf1\xfc\xf4\x23\xd8\x9c\x51\xd1\x6a\xf7\xcc\x09\x7e\x28\x14\x3c\xc5\xde\x98\x4f\xf5\xa2\x52\x6d\x0b\x05\x81\x92\x29\xf6\xf0\x7b\x53\x71\x2d\xcd\x1f\xef\x06\x91\x29\x7f\xbc\x5c\xd6\x0f\xe7\x2c\x9c\x62\xef\xc7\xb3\x4b\xe3\xfb\x0f\x70\x1f\xc8\x0d\xe0\x6c\x84\x16\x81\x62\x16\x1b\x02\x7a\x98\xc9\x42\xd3\x32\xde\xf7\x6f\xb0\xe5\x83\x77\xa3\x75\xbf\x5e\xdf\x43\x62\x68\xfa\x04\x3d\x0a\xf4\x24\x43\x69\x35\xe1\x65\xcf\xbe\x55\xab\x60\x9f\x4b\x1b\x28\x0f\x15\xee\xcb\x80\xd0\xac\xc4\x2f\x0d\x78\x62\x74\xbb\x37\xc4\x52\x5c\x7d\xd1\x63\x44\xae\x7e\xd8\x68\xc3\x17\x8a\xb7\xac\x5d\x7c\x48\xe4\x0f\x89\x56\xf7\xd0\x8c\x1f\xaa\x5c\xd5\x59\x38\x61\xf4\x18\xeb\xc4\xa9\x36\x14\x5d\x28\x7e\x23\xb6\x96\x85\xcf\x4f\x5f\x81\xb1\x43\xc6\xe8\x30\x9f\x41\xb1\x61\x14\xe2\xb7\x21\xca\x80\x8c\x5d\x62\x84\xd1\x2e\xaa\x56\x99\x42\xb2\x7e\x75\xad\x8d\x70\xfd\x3f\xb4\xc5\xdd\x50\x54\x9a\xa4\xd1\x90\xc5\x0a\xb9\x95\x05\x0c\x29\x0b\xdc\x49\x86\xa4\x4d\x2f\x5c\x23\xc6\xe4\x75\x6a\xab\xa7\xaa\xb3\x8f\xd6\x5f\xc5\x4a\xc9\xc6\x3c\xc6\x1d\xd4\x12\x37\xed\x2e\x65\x28\x93\xaf\x0a\xdd\x07\x8c\x38\x23\xc3\xd6\x70\xc8\x4b\x74\x8d\x46\x50\x9c\xd3\x0d\xfd\x19\x7e\xae\x7f\xc0\xd6\x2b\x98\x58\x1d\x27\xe9\xf1\x40\xc7\xc6\x37\xfa\x65\x13\xa9\x8a\x3c\x2a\x5a\x57\x98\x31\x0a\x08\x55\x5e\xb9\x22\xaa\x30\x0f\x50\x57\x37\xa0\x2f\x01\xd9\x98\x4f\x71\x81\xe6\x95\x5b\x9b\xd5\x86\x7b\x5a\x0b\x8d\xe3\x14\x1b\xc8\xdb\x13\xb8\x53\x08\x60\x8b\xa4\x51\x75\xb2\x21\x2c\xe0\x18\x2b\x2f\x8a\xb0\xa4\xc2\x3a\x18\x1d\xf5\x85\x55\xe6\x8a\x42\xf9\xe7\x25\x0b\x8e\x6f\x70\xdf\xb1\x54\x01\xf0\x2f\x74\x45\x54\x01\xed\xec\xe3\x6e\xad\xda\x5a\x77\xeb\x6a\xf9\xb8\xd4\x4d\xe7\x0b\x6e\x15\x56\x86\x4f\xa8\x0b\x49\x97\x19\xfc\x86\x2e\x8d\x23\x46\x5f\xdb\x64\xcc\x21\xa8\x63\x9a\x04\x32\x8d\x14\x2c\xef\xdb\x7b\xdd\xb5\x8a\xd3\x0a\x04\xb4\x59\x20\xd5\xf5\x80\x0c\xde\x2e\xdb\x0e\x3e\xfd\xef\xd2\x52\xbc\xb4\x36\x0f\xe6\x64\x4e\xba\xca\x18\xff\x2c\x94\x49\x30\x7f\x34\x27\x00\xf5\x15\x58\xe7\x30\xe7\x7a\x3c\xf8\xef\xa2\xac\xab\x98\xe2\x66\xce\xf3\x32\x86\x1a\xb9\x4e\xe6\x39\x0f\x0a\x69\x5a\xed\xb7\x0f\xa3\xe6\x37\x27\x65\xa8\xd6\xad\x5b\x49\x60\xdf\xd6\xd5\x40\x47\x07\x8d\x22\x98\x4a\x08\x1a\xbe\x4e\xdc\xeb\x2e\xac\x03\xfa\x6a\xee\x34\x4c\x98\xfa\x1e\x79\x6d\xa4\xc2\x4b\xdd\x43\xfb\xbd\x87\xc7\xa3\x63\x78\x4e\xeb\x20\x6e\x88\xcc\xeb\xe1\xd4\xcb\x37\x58\x40\xc7\x69\xdc\xb6\xe8\xe5\x30\xaa\x39\xd8\x6f\x77\xaa\xf7\x3f\x01\x00\x00\xff\xff\x61\x8f\x5d\x05\xad\x07\x00\x00")

func complySoc2ReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ReadmeMd,
		"comply-soc2/README.md",
	)
}

func complySoc2ReadmeMd() (*asset, error) {
	bytes, err := complySoc2ReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/README.md", size: 1965, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2TodoMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x6e\xdb\x48\x0c\xbd\xfb\x2b\x08\xe4\x92\x02\x76\x7c\xdf\x5b\xd0\x64\xb1\x3d\x74\x53\x2c\x8a\x5e\x8a\x02\xa6\x67\x68\x89\xcd\x68\xa8\x25\x39\x4e\xd5\xa2\xff\xbe\x18\x49\x56\x15\x24\x0b\xf4\x3a\x7c\x1c\x3e\xf2\x3d\xf2\x0a\x7e\xfc\xb8\xf9\x1b\x3b\xfa\xf9\x13\xde\x4a\xd7\x27\xc6\x1c\x08\x3e\xa8\x34\x8a\xdd\x66\xf3\x17\x37\xed\x2e\xd1\x99\x12\x7c\x7c\xb8\x7b\x80\xa0\x84\x4e\x11\x8e\x03\x7c\x0e\x15\x3f\x7c\xb9\x6e\xdd\x7b\xfb\x63\xbf\x6f\xd8\xdb\x72\xbc\x09\xd2\xed\xcd\x55\x72\x13\xbb\xfd\x84\x79\xb3\xd9\x5c\x5d\xc1\xbb\xcc\xce\x98\xf8\x3b\x3a\x4b\x86\x0f\x2d\x1a\xc1\x75\x2b\x45\xed\xcd\x66\x07\x9f\xe1\x0b\xdc\xc6\x08\xbd\xca\x57\x0a\x0e\x2e\x60\x52\x34\x10\x04\xc9\xae\x92\x66\xcc\x27\x52\x3e\x0d\x70\x98\xbe\x86\x63\xe1\x14\x0f\xd0\x50\x26\x45\x27\x83\x33\x26\x8e\x20\xc5\xfb\xe2\x73\xca\xdb\x91\x35\x38\x87\x47\x72\xce\x4d\x6d\x23\x52\xae\x6c\x6c\x5b\xbf\x3f\x71\x53\x94\xe0\xcc\x78\xf9\xf7\x66\xe8\xd2\xe1\xf5\x8a\x36\xe4\x70\x00\xfa\x46\xa1\xd4\x7a\x4f\xec\xad\x14\x07\x52\x15\xb5\xb1\xd3\xdb\xe2\xad\x68\x2d\x34\x37\xf9\x44\xf4\xb8\x34\xf9\xa9\x12\xac\x7c\xcc\x31\x47\xd4\x68\xfb\x2d\xf4\x5a\x72\x4d\x40\x83\x4c\x81\xcc\x50\x87\x0b\xfb\x62\x2e\x1d\x7f\x27\xc8\xa8\x8a\xce\x67\xb2\xfd\x8b\x58\x2f\x89\x03\xd7\x08\x00\xc0\x14\xbd\x63\x73\xe5\x63\xf1\x65\x86\x06\xd8\x49\x6e\x16\xf4\x0a\x7c\x9f\xad\xce\xe0\x12\x01\x8c\x51\xc9\x0c\x30\xa5\x25\xfb\x65\x55\x95\x40\xb1\xe8\x6f\xd7\x5d\xf0\x2b\xf8\x2c\xcf\x24\xdc\x24\x12\x38\x75\x7d\xaa\x7a\xae\x70\xb7\x66\xdc\x64\xb0\xd0\x52\x2c\x89\xec\x75\x79\x5c\xa2\x1c\x80\x73\xe4\x30\xfa\x61\xcd\x1f\x0c\x9d\xed\xc4\x14\x47\x9d\xee\xa8\x4f\x32\x74\x94\xfd\x55\xa1\xa6\xf0\x2f\xdd\xe7\xba\x7a\x80\x6b\x23\x82\x7f\xee\x6f\xef\xde\xdf\xdf\x74\x11\x4e\xa2\x40\xdf\xb0\xeb\x13\x81\x05\xe5\xde\xff\xe7\x8b\xd9\xac\x93\x39\x47\x87\xb7\xa8\x14\x21\x49\x18\x97\x62\xf3\x62\x7e\x8b\x1c\x2e\xe0\x84\xdd\x8c\xf8\xa8\xc8\x79\x7c\x00\xc9\x50\x8c\x40\x4e\x2b\x7f\xdb\x60\x4e\x5d\xcd\x89\x54\x67\x86\xa3\x12\x97\xf5\xde\x29\x25\x3a\x63\x76\xc0\xe0\x7c\x66\x1f\xc6\x69\x3c\xf4\x75\x83\x56\xae\x25\x27\xcd\x98\x2e\xbd\xbc\x97\xcc\x2e\x0a\xce\x1d\xd5\x39\x4f\x42\x3d\x89\x3e\x9e\x92\x3c\x2d\x1b\xfc\xb5\x98\x03\xe6\x08\x4a\xbb\xbe\x1c\x13\x5b\xbb\x32\xee\x76\x65\xb0\x1c\x57\x7e\x78\xee\xfc\x69\x8b\x22\x3f\x17\x66\x0b\x98\x73\xc1\x54\x2f\xca\x54\xee\x5d\xd7\x8b\x3a\x28\xfd\x5b\xc8\x1c\x12\x9b\xc3\xf5\xc4\xac\x6e\x66\x4a\x70\xa4\xe5\x36\xc4\x4b\xd6\x9f\x25\x9d\x6a\xac\x5a\xe3\x92\x3a\x27\xad\xed\xe6\x8e\xa1\x5d\xf8\x6e\x57\x64\xb7\x23\xf9\x5f\x5d\xbd\xcc\xa2\x33\x47\xca\xe3\xf1\x4a\x89\xc2\x7c\x33\x7b\xa5\x33\x4b\xb1\x34\xec\xe6\xfb\xb1\x1a\xc1\x42\xe1\xbf\x00\x00\x00\xff\xff\x3f\x2b\x38\xdd\x95\x05\x00\x00")

func complySoc2TodoMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2TodoMd,
		"comply-soc2/TODO.md",
	)
}

func complySoc2TodoMd() (*asset, error) {
	bytes, err := complySoc2TodoMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/TODO.md", size: 1429, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc8\xc1\x09\x42\x41\x0c\x04\xd0\xfb\xaf\x62\xc0\xbb\xa5\xd8\x43\xd8\x1d\x35\xe0\x4e\x96\x18\x22\x58\xbd\xe0\xe5\xdf\x1e\xef\x82\x9b\x65\x5a\x79\xf3\x7d\x1c\xa7\xb1\x33\xda\x27\x61\x42\x34\xb3\x9d\x1f\xc4\x1d\xf5\x24\x22\x1f\x26\xff\x5a\x79\x08\xa6\xf9\xcf\x11\x6b\xbf\xdc\x34\x08\xaa\x3d\x43\x8b\xaa\xeb\x2f\x00\x00\xff\xff\x77\xd3\x99\x65\x60\x00\x00\x00")

func complySoc2NarrativesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesReadmeMd,
		"comply-soc2/narratives/README.md",
	)
}

func complySoc2NarrativesReadmeMd() (*asset, error) {
	bytes, err := complySoc2NarrativesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/README.md", size: 96, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesControlMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\xc3\x30\x10\x85\x77\xff\x8a\x27\x31\x07\x91\xb4\x95\x50\x56\xab\x12\x20\xe8\x40\xbb\x30\x9a\xe4\xa0\x47\xe3\x3b\x64\x3b\xa9\xf2\xef\x91\x23\x14\x99\x89\xc9\x4f\x9f\xdf\xb3\xdf\x9d\x38\x4f\x2d\xac\x4a\x0a\x3a\x60\x2f\x13\x07\x15\x4f\x92\x70\x70\x21\xb8\xc4\x13\x19\xd7\x05\x95\xd9\xb7\xb0\xfb\x83\x89\x2e\x71\xfc\x60\x8a\xad\x01\x4e\x47\x9b\x0f\xa0\x82\xb5\xcd\x6d\x5d\xe8\xa6\xd0\x9b\x55\x6f\x0b\xcf\xb6\xf0\xec\x0a\xbe\xfb\xc3\x37\xc6\xbb\x2f\x0d\xaf\x34\x71\x64\x95\xe5\xdb\x0a\xbd\x4b\xd4\xe2\x69\x14\xd4\x68\xee\xea\xfb\x25\xd0\xa9\xcf\xcd\x5b\x3c\x0a\x27\x76\x03\x7a\xed\xc6\x4c\x4c\x55\x55\xc6\xdc\xfc\x33\xa6\x79\xa0\x40\xb8\x12\x64\x41\x84\xeb\x79\x86\x8e\x01\xdd\x6f\x8c\x8a\xd8\xba\x06\xa4\x33\xad\x8e\x0b\xcd\x11\x03\xc7\x44\x3d\x58\x96\xab\xb7\x97\x67\xbc\x0f\xda\x5d\x72\x81\x13\xf9\xef\x21\x3f\x6d\xd5\xb3\x7c\xe2\xa8\x2a\xe6\x27\x00\x00\xff\xff\x49\x83\xc0\x0b\x83\x01\x00\x00")

func complySoc2NarrativesControlMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesControlMd,
		"comply-soc2/narratives/control.md",
	)
}

func complySoc2NarrativesControlMd() (*asset, error) {
	bytes, err := complySoc2NarrativesControlMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/control.md", size: 387, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesOrganizationalMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x55\xdd\x6e\x1b\x47\x0f\xbd\xdf\xa7\x20\xf0\x01\x5f\xdb\xc0\x16\xe2\x24\x45\x5a\xdf\xa5\x8a\x83\xba\x40\xa2\xc0\x36\xda\x6b\x6a\x86\xbb\x4b\x6b\x76\x66\x4b\xce\x4a\x51\x82\xbc\x7b\xc1\x19\x59\x5a\x3b\xfd\xb9\xd2\x68\x87\x3f\x87\x87\x87\x9c\x88\x03\x5d\xc2\x4a\x3a\x8c\xfc\x19\x33\xa7\x88\x01\x3e\xa0\x08\x66\xde\x52\x83\x4e\x52\xdc\x0f\x97\xb0\xfa\xd0\x28\x66\xd6\x96\x49\x2f\x1b\x80\xbb\xdb\xa5\xfd\x00\x9c\xc3\x72\x79\xb1\x78\x31\x3b\xbf\x9c\x9d\x5f\xcd\xce\x3f\x1e\xcf\x2f\x17\x17\xb3\xf3\x8b\xd9\xf9\xe5\xec\xfc\xaa\x19\xf0\x3e\xc9\x0d\x6d\x59\x39\xc5\x92\xf6\x1c\x3c\x66\xba\x84\xdf\xa6\x08\x17\xf0\xe2\xf9\xc5\x4f\xc5\xc1\xa5\x61\xa0\x98\x2f\xe1\x3a\x72\x66\x0c\xe0\x93\x9b\xec\x4b\x73\x7e\x7e\xde\x34\xff\xfb\xe7\x02\x9b\xbb\x9e\xa0\x4d\x21\xa4\x1d\xc7\x0e\x46\x49\x5b\xf6\xa4\x80\xe0\x49\x9d\xf0\x68\x1e\x90\x5a\xc8\x3d\x81\x4b\x32\x26\xc1\x4c\x80\x30\x60\xc4\x8e\x2c\x07\x68\x96\xc9\xe5\x49\xc8\xec\xbe\x7c\x59\x7c\xc0\x81\xbe\x7e\x5d\xd4\xd8\x1c\xb3\xd9\x94\x08\xac\x8f\xa2\xb2\x42\x4e\x40\x9a\x71\x1d\x58\x7b\x58\xa7\xdc\x97\x3c\x81\x3a\x0c\x70\x3f\x09\xab\x67\x57\x6c\x31\xfa\x59\x7a\x37\x85\x3c\x09\x06\x88\x49\x06\x85\xdc\x63\x06\x25\xd9\x12\xa0\x96\x08\x6d\x9a\xa2\x2f\xd5\x42\x9b\xe4\x04\xea\x3b\x35\xae\xc6\xc0\x18\x1d\x59\xb5\x9d\xe0\xb0\x30\x86\xae\x62\xe6\xbc\x87\xbb\xfd\x48\x4d\x73\xb4\x37\x8c\x08\x6f\x29\xe0\x0e\x85\x60\x79\xbe\x3c\x60\xb0\xc8\x3d\xa1\xff\x73\x42\xc9\x24\xe4\x81\x23\xdc\x62\x84\x77\x82\xd1\xb1\xba\x74\x06\x4b\x0c\xdc\x26\x89\x8c\x8b\x13\x02\xd8\xa1\x9e\x6a\xae\x7e\x17\x3f\xbf\x7e\x5e\x40\x5c\xc7\x4c\x9d\x18\x0e\xab\xf7\x2a\xf7\xec\xb4\xd2\xf8\x96\x85\x5c\x4e\xa2\xf5\xe6\x13\xb9\xc9\xfa\xa7\x8f\x28\x07\xd4\x91\x85\x8c\x55\xb3\xf2\x34\xa4\xa8\xb9\x30\xa6\x19\xa3\x47\xf1\xc5\x81\x4a\xe0\x62\xc3\xc7\x8c\x2e\x45\x65\x2d\xcd\xda\x71\xee\x8d\x9c\x96\x54\xab\x60\x2a\xcf\x1c\xe1\xcd\x40\xc2\x0e\xe3\xac\x19\x14\xb7\x2c\x29\x9a\x14\x74\xd1\x34\xcb\x9e\xa9\x05\x1c\x52\xec\xac\x15\x3a\xcf\x5d\xd8\x34\xb1\x72\x2e\xca\xc9\x09\xfa\x14\x49\xf3\xde\x62\x1b\x16\xc1\xd2\x6f\xad\x18\x0c\x61\x8d\x54\xe5\x26\x7a\x06\xfe\x81\x89\x33\xa0\x61\x0c\x69\x4f\xa4\x67\x86\x3e\x9b\x6f\xf9\xee\x26\xcd\x69\x28\xd6\x16\x21\xe5\x9e\xc4\x50\x6c\xa8\x4f\xc1\x93\x68\x21\xfb\x97\x84\xe2\xe1\x3a\x7a\x1a\x29\x7a\x8a\xee\x30\x0d\xf5\x7b\x6a\xe7\x9c\x8f\x63\xe2\x98\x2b\x65\x69\x4b\xa2\x44\x55\x68\xb5\xda\x63\x3f\x60\xd5\xb6\xec\x48\xe0\xfb\xe5\xd5\xea\x87\xc5\xdf\x8c\xde\xed\xc3\xb0\x3c\x51\x99\xc9\x32\x29\x95\xc4\xaf\x61\x14\x1e\x50\xf6\xe0\xf9\x38\xfc\x0d\xc0\x33\xb8\xc5\x40\x5a\x4e\xef\x51\x36\x94\x39\x76\x87\x7f\x71\x6a\xd1\xe2\x3e\x7c\xb9\x21\x25\x14\xd7\xc3\xff\xe1\x2d\x6d\x29\xa4\xb1\xec\x03\xbb\xba\x8e\x6d\x92\xa1\x6a\xf8\x8e\x5c\x1f\x53\x48\xdd\xbe\x5c\xfd\x3a\x0d\x18\xcd\x37\x4d\xe2\x0e\x99\xde\x71\xc4\x42\xce\x15\xba\xfe\x88\xc8\x30\x07\xf2\xb0\xde\x03\xc2\xef\xec\x08\x3e\x0a\x29\x7b\x8a\xf9\x0c\x76\x7d\xb2\x86\xe6\x49\x22\x08\x8d\x49\x72\x19\xf5\x42\xd8\xd5\x6a\x01\x6f\xea\x14\x52\xa6\x47\xf4\xc0\xb2\x47\xc9\x16\x79\x40\x8e\x19\x39\x92\xaf\x4a\x66\xcd\xc2\xeb\x29\xd7\x84\x4f\x50\x16\x9a\xdf\x9f\xf6\xd1\x6a\x7d\x4f\xae\x4c\x47\xd3\xfc\x91\x64\x63\x01\xe7\x11\x6c\xe9\x3c\x2a\x65\xcb\x38\x73\x02\xa5\x6c\x59\x0c\xad\x90\x8e\xf5\xf3\xc9\xfa\x69\xb1\x6c\xc3\x10\x02\xae\x1f\xf6\x42\x91\xee\xbf\x88\xa3\xe0\xbd\x61\xdd\x18\x92\x39\xd8\x93\x20\x94\x68\x53\x28\xab\xba\x07\xf9\xc6\x1a\x72\x2f\x69\xea\x9e\xcc\xe9\xe3\xad\x8c\x99\x3a\xa6\xaa\xda\x6c\x83\xe5\xd4\xe0\xba\x30\x79\x8e\x9d\x49\xea\x19\xdc\x70\x97\x24\x4d\x0a\x3d\x4b\x7d\x01\x8a\xa1\xf5\xfe\x19\x5c\x1d\x06\x0c\x46\x92\xa2\x19\xdb\x9a\x42\x5b\xa6\x5d\xb9\x7f\x13\xb8\x8b\xe6\x65\xed\xa4\xa8\xb3\xfa\xd3\xa9\xae\xa2\xc6\x6e\x0a\x28\x65\xf6\xa7\xc8\x0e\x1f\x9e\x95\x93\x99\x51\x4e\x47\xaa\x4e\x85\x18\x59\xef\x04\x27\xff\x1f\x94\xa1\xdb\xc4\xb4\x0b\xe4\xbb\xc3\x68\x8e\x49\x95\xd7\x1c\x6c\xb9\x95\x17\xa2\x2d\x51\x06\xdc\x03\x0f\x23\x09\x87\xd9\x12\x3b\xe1\x98\xef\xea\x29\x7a\x12\xdb\x1b\x0a\x5b\x14\x36\x9a\x8c\x9d\x2d\x67\xa3\xf5\xd4\x9e\x1a\xd9\x9a\xf4\x0d\xbf\xcb\x14\xfd\xe4\x6c\x50\x41\x0e\x24\xb4\x65\xa0\xec\x99\xc6\xc9\x73\xae\x4c\xfa\x9e\x0a\xff\x39\xcd\xee\xcb\x56\x4b\xc1\xd6\x41\x74\x3c\x86\x4a\xe6\x75\xdc\x92\x66\xee\xb0\x44\xd5\x49\x47\x76\x05\x5b\x16\x8c\x7a\x58\xa0\x66\xf8\xb1\x76\xad\x34\x48\x78\x60\x53\xc8\x1a\xdd\xa6\x13\x7b\x1e\xc1\xf5\xe4\x36\x0a\xf6\xba\x86\x70\x5a\xa6\x4d\xd9\x27\x9f\x78\xe0\xcf\x5c\x77\x38\x4c\x5a\xde\x76\x9e\x2d\x8e\x7c\x5c\x1c\x36\x00\x95\x00\x4f\x99\x4a\xf6\xbf\x02\x00\x00\xff\xff\xa6\x3f\x8a\x5b\x56\x09\x00\x00")

func complySoc2NarrativesOrganizationalMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesOrganizationalMd,
		"comply-soc2/narratives/organizational.md",
	)
}

func complySoc2NarrativesOrganizationalMd() (*asset, error) {
	bytes, err := complySoc2NarrativesOrganizationalMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/organizational.md", size: 2390, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesProductsMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcd\xb1\x4e\x03\x31\x10\x84\xe1\xde\x4f\x31\x12\xf5\x49\x84\x0a\xb9\xa5\x01\x8a\x28\xe2\x78\x81\x8d\x3d\x0a\x4b\xe2\xdd\x68\xed\x3b\x74\x3c\x3d\x4a\x81\xd2\x8e\x46\xff\x67\xd2\x98\x71\x08\xaf\x4b\x19\x1d\x62\x15\x33\x63\xd5\xc2\x8e\xbd\x44\xc8\xd0\x95\x49\x4a\xb8\x6d\x2d\xe3\x30\xef\x53\x93\x6f\x8f\x0f\xae\xda\xd5\xad\xe7\x04\x4c\xa8\x32\x98\xf1\xbe\x18\x76\x78\x7a\xdc\x3d\x27\x00\x28\xde\x1a\x6d\x64\xbc\x99\x0e\x95\x0b\xaa\x97\xe5\xb6\xa4\x69\x9a\x52\x7a\xb8\xb3\x77\x29\xbd\x32\x88\x1f\xa2\xb2\x97\xd0\x23\x31\xbe\x88\x33\x37\x5c\xff\xcf\x4d\xe2\xcc\xc1\x8a\xe3\x06\x5f\x02\x1e\x27\x31\xfd\x95\xa1\x6e\xb7\xea\x27\xdb\xf5\x22\x83\x78\xf1\xa6\x76\xc2\xec\x6e\xe9\x2f\x00\x00\xff\xff\x2c\x6f\xb1\xc2\xe8\x00\x00\x00")

func complySoc2NarrativesProductsMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesProductsMd,
		"comply-soc2/narratives/products.md",
	)
}

func complySoc2NarrativesProductsMd() (*asset, error) {
	bytes, err := complySoc2NarrativesProductsMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/products.md", size: 232, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesSecurityMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x8a\x5f\x62\x4e\x45\x3b\xb4\x28\x1b\x8a\x90\x00\x41\x07\xd2\x85\xf1\xb8\x98\xc6\x34\x67\x23\x9f\xd3\x2a\x6f\x8f\x92\xa1\xea\xc6\xe4\x4f\xbf\xe5\xcf\xb6\xc4\x4c\x35\x5a\x4a\xa3\xb1\x4f\x78\xb4\xd4\xb3\x53\xf2\xd1\x08\xfb\x68\x16\x9d\xcf\x14\x62\x32\x95\x29\xd7\x68\x9f\xf6\xa1\x44\xe7\xf2\xcd\x54\xea\x00\x1c\xda\x66\x2e\x40\x85\xa6\xd9\xae\xb6\x37\xbc\xbb\xf2\x6e\xb5\xbe\xe1\x4d\xc8\xf1\x47\xed\x83\xce\x5c\x58\x65\xd1\x54\xe8\xa2\x53\x8d\xd7\x51\xb0\xc6\xe6\x7e\xfd\xb0\x0c\x24\xcd\x99\xc4\x6b\xbc\x08\x3b\xc7\x01\x9d\xa6\x71\x4e\x42\x55\x55\x21\xdc\xfd\x7b\x78\x78\x26\x23\x5c\x08\xb2\x44\x84\x4b\x3f\x41\x47\x83\xda\x11\xd7\x47\xe0\x3d\x21\xa9\xb8\xe9\x80\x13\x4d\x05\x03\x17\xa7\x0e\x2c\x4b\xeb\xf3\xfd\x0d\x5f\x83\xa6\xd3\xbc\xf2\x40\xf9\x77\x98\x55\x8d\x66\x96\x23\x5a\x55\x09\x7f\x01\x00\x00\xff\xff\x71\xb6\xff\x0e\x47\x01\x00\x00")

func complySoc2NarrativesSecurityMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesSecurityMd,
		"comply-soc2/narratives/security.md",
	)
}

func complySoc2NarrativesSecurityMd() (*asset, error) {
	bytes, err := complySoc2NarrativesSecurityMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/security.md", size: 327, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2NarrativesSystemMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\x31\x4e\xc3\x40\x10\x85\xe1\x7e\x4e\xf1\x24\x6a\x4b\x84\x0a\x6d\x17\xd1\x00\x82\x14\x98\x86\x72\x59\x0f\xf1\x90\xdd\x19\x34\x3b\x4e\xe4\xdb\x23\xe7\x02\x69\xff\x27\xbd\x4f\x73\xe3\x84\x71\xed\xc1\x0d\x7b\x2f\xb3\x04\x97\x58\x9c\x71\xc8\xee\x39\xe4\xcc\x94\x8b\x9b\xae\x2d\x61\xdc\x1f\xa8\xe5\x5f\xf3\x0f\x3e\x4b\x17\xd3\x9e\x08\x18\x30\xe5\xe0\x84\xd7\x45\xb1\xc3\xc3\xfd\xee\x91\x00\xa0\x58\x6b\xac\x91\xf0\xa2\x12\x92\x2b\x26\x2b\xcb\x56\x68\x18\x06\xa2\xbb\x1b\x28\x3d\xb3\x33\x2e\x0c\xbd\x26\xc6\x65\x5e\x61\x8b\xc3\xfc\x88\x9e\x43\xfa\x8f\x70\x47\xcc\x8c\x62\x1a\x6e\x15\x27\x5e\x3b\xaa\xf4\xe0\x09\xa2\xd7\xe9\xeb\xfd\x0d\xdf\xd5\xca\x69\x03\x3f\xb9\xfd\xd5\xed\xea\xc9\x9a\xe8\x11\xa3\x99\xd2\x7f\x00\x00\x00\xff\xff\xf2\x34\x0d\x1a\x01\x01\x00\x00")

func complySoc2NarrativesSystemMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2NarrativesSystemMd,
		"comply-soc2/narratives/system.md",
	)
}

func complySoc2NarrativesSystemMd() (*asset, error) {
	bytes, err := complySoc2NarrativesSystemMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/narratives/system.md", size: 257, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xc6\x41\x0a\x80\x20\x10\x05\xd0\xbd\xa7\xf8\xd0\xbe\xb3\x74\x05\xb3\x5f\x0a\xe6\x8f\x99\x41\xe8\xf6\xad\xda\xbd\x05\x9b\x7a\x2b\x8d\x9e\xd2\x2f\x5c\x9a\xb4\x81\xa8\xc4\xce\x9a\x67\x93\x41\x27\x78\x3f\x5d\x2f\xe9\xc8\xe3\x40\xd1\x08\xcb\x25\x64\xbe\xa6\x2f\x00\x00\xff\xff\x45\x5c\x41\xeb\x47\x00\x00\x00")

func complySoc2PoliciesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesReadmeMd,
		"comply-soc2/policies/README.md",
	)
}

func complySoc2PoliciesReadmeMd() (*asset, error) {
	bytes, err := complySoc2PoliciesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/README.md", size: 71, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesAccessMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x31\x6a\xc4\x30\x10\x45\x7b\x9d\xe2\x43\x6a\x85\xd8\x81\x10\xd4\x19\x55\x49\x63\x13\xfb\x02\x13\x49\xbb\xcc\x62\xcd\x80\x24\x2f\xf8\xf6\x8b\x5d\xb9\xfa\x8f\x0f\x0f\x9e\x50\x4e\x0e\x43\x08\xa9\x56\x8c\xf2\xaf\x54\x22\xcb\x1d\x24\x11\x4b\x2a\x99\x85\x1a\xab\x60\xd2\x95\xc3\x6e\x28\x14\x95\x3d\x3b\x0c\xe3\x32\x99\x4a\x8d\xeb\x8d\x53\x75\x06\x58\x66\x7f\x0c\x60\xe1\xfd\xd7\x7b\x77\xe1\xfe\xc2\x9f\x26\xd3\x43\xcb\x5f\x7a\x72\x65\x95\x53\xb5\x88\xd4\x92\xc3\xef\x26\xe8\xd0\x7f\x74\xdf\xa7\x10\x34\xe7\x24\xcd\xe1\x47\xb8\x31\xad\x88\x1a\xb6\xe3\x31\xd6\x5a\x63\xde\xe0\x35\x1f\xad\xb3\xaa\xbc\x02\x00\x00\xff\xff\xcd\x46\x92\x04\xc8\x00\x00\x00")

func complySoc2PoliciesAccessMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesAccessMd,
		"comply-soc2/policies/access.md",
	)
}

func complySoc2PoliciesAccessMd() (*asset, error) {
	bytes, err := complySoc2PoliciesAccessMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/access.md", size: 200, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesApplicationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xb1\x8a\xc3\x30\x10\x05\xfb\xfd\x8a\x07\x57\xeb\x38\xbb\x38\x82\x3a\xa3\x2a\xa9\x4c\x94\x1f\x58\x64\x25\x6c\xb0\x76\x8d\x25\x07\xfc\xf7\xc1\xae\x06\x86\x19\xe5\x92\x3d\x86\x65\x99\x25\x71\x13\x53\xc4\x9c\xb6\x55\xda\x8e\xd1\x66\x49\x3b\x71\x5a\x4d\xf7\xe2\x31\xc4\x91\x2a\x37\xa9\x4f\xc9\xd5\x13\xf0\x88\xe1\x00\xe0\x10\xc2\xff\x6f\x4f\x85\xdf\xb6\xde\xf3\x47\xaa\x98\x9e\x89\xc3\xc4\x2d\x7b\xdc\x36\x45\x87\xfe\xaf\xbb\x9c\x43\xb2\x52\xb2\x36\x8f\xab\x4a\x13\x9e\x31\x59\xda\x0e\x43\xce\x39\xa2\x1f\x04\x2b\xa2\x2f\x44\x33\xfd\x06\x00\x00\xff\xff\x42\x28\xec\xa1\xa2\x00\x00\x00")

func complySoc2PoliciesApplicationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesApplicationMd,
		"comply-soc2/policies/application.md",
	)
}

func complySoc2PoliciesApplicationMd() (*asset, error) {
	bytes, err := complySoc2PoliciesApplicationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/application.md", size: 162, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesAvailabilityMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8b\xc1\xaa\xc2\x30\x10\x45\xf7\xf9\x8a\x0b\x6f\x9d\xf2\xe2\x4a\xb3\x2b\x59\xe9\xaa\x58\x7f\x60\x4c\xa3\x8c\x24\x33\xd0\xa4\x85\xfe\xbd\xb4\xb8\xba\x97\xc3\x39\x42\x25\x79\xf4\x2b\x71\xa6\x27\x67\x6e\x1b\x06\xcd\x1c\x37\x43\x71\x56\xd9\x8a\x47\x3f\x98\x4a\x8d\xeb\x8b\x53\xf5\x06\x78\x8c\x61\x1f\xc0\xa2\x77\x9d\xfb\xdd\x10\x2e\x9d\x33\x85\x3e\x3a\xdf\xd3\xca\x95\x55\x0e\xdb\x62\xa2\x96\x3c\x6e\x8b\xc0\xe1\xf4\xef\xce\x47\x10\xb5\x94\x24\xcd\xe3\x2a\xdc\x98\x32\x26\x8d\xcb\x4e\x8c\xb5\xd6\x98\x3f\x04\x2d\x2c\x6f\x8c\xaa\xf2\x0d\x00\x00\xff\xff\xcb\x6e\xaa\x43\xa4\x00\x00\x00")

func complySoc2PoliciesAvailabilityMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesAvailabilityMd,
		"comply-soc2/policies/availability.md",
	)
}

func complySoc2PoliciesAvailabilityMd() (*asset, error) {
	bytes, err := complySoc2PoliciesAvailabilityMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/availability.md", size: 164, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesChangeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xb1\x8a\xc3\x30\x10\x05\x7b\x7d\xc5\x83\xab\x75\x9c\xaf\x32\x6a\x55\xdd\x55\x26\xca\x0f\x2c\xf2\xc6\xd9\xe0\xdd\x05\x4b\x0e\xf8\xef\x83\x5d\x0d\x0c\x33\x46\xca\x09\xe5\x68\x9d\x15\xf9\x49\xb6\x30\x26\x5f\xa5\x1e\x81\xea\xe6\x76\x68\x42\xc9\x53\x68\xd4\xa5\x3d\x84\x5b\x0a\xc0\xbd\xe4\x13\x40\x44\xce\xe3\xf7\x10\x94\x5e\xbe\xdd\xf8\x2d\x4d\xdc\xae\x24\x62\xa6\xce\x09\xff\xbb\x61\xc0\xef\xcf\x30\x5e\x43\x75\x55\xb6\x9e\xf0\x67\xd2\x85\x56\xcc\x5e\xf7\xd3\x84\x18\x63\x08\x5f\xc8\xae\x62\x0b\x8a\xbb\x7d\x02\x00\x00\xff\xff\xe4\xf0\xba\xfb\x9b\x00\x00\x00")

func complySoc2PoliciesChangeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesChangeMd,
		"comply-soc2/policies/change.md",
	)
}

func complySoc2PoliciesChangeMd() (*asset, error) {
	bytes, err := complySoc2PoliciesChangeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/change.md", size: 155, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesClassificationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\x31\xaa\xc3\x30\x10\x05\xfb\x3d\xc5\x83\x5f\xeb\x13\xa7\x8a\xd5\xca\x4d\x52\x99\x38\x17\x58\x64\x39\x6c\x90\x76\xc1\x92\x03\xbe\x7d\xb0\xab\x81\x61\x46\xb9\x24\x8f\x81\x1b\x23\x64\xae\x55\x16\x89\xdc\xc4\x14\xa3\x65\x89\x3b\x71\x5c\x4d\xf7\xe2\x31\x84\x91\x2a\x37\xa9\x8b\xa4\xea\x09\x78\x4d\xe1\x00\xe0\x10\x42\xff\xdf\x53\xe1\x8f\xad\xcf\xf4\x95\x2a\xa6\x67\xe2\x30\x73\x4b\x1e\x8f\x4d\xd1\xe1\x7a\xe9\x6e\xe7\x10\xad\x94\xa4\xcd\xe3\xae\xd2\x84\x33\x66\x8b\xdb\x61\xc8\x39\x47\xf4\x87\x60\x45\xf4\x8d\xc9\x4c\x7f\x01\x00\x00\xff\xff\x86\x01\x62\xfa\xa1\x00\x00\x00")

func complySoc2PoliciesClassificationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesClassificationMd,
		"comply-soc2/policies/classification.md",
	)
}

func complySoc2PoliciesClassificationMd() (*asset, error) {
	bytes, err := complySoc2PoliciesClassificationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/classification.md", size: 161, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesConductMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xc1\x0a\xc2\x30\x10\x05\xef\xfb\x15\x0f\x3c\x47\x8c\x27\xc9\x75\x4f\x7a\xb1\x58\x7f\x20\x24\xa9\xac\x34\xbb\xd0\xa4\x42\xff\x5e\xda\xd3\xc0\x30\xa3\xb1\x96\x00\xb6\x5c\x60\x13\xd8\x34\xaf\xa9\x63\xb0\x59\xd2\x46\x31\x2d\xa6\x5b\x0d\xe0\x27\x0f\xd4\x62\x97\x36\x49\x69\x81\x80\xf7\xc8\x3b\x00\x07\x66\x7f\xf6\x54\xe3\xd7\x96\x57\xf9\x49\x13\xd3\x23\x71\xc8\xb1\x97\x80\xc7\xaa\xf0\xb8\x5e\xfc\xed\x18\x92\xd5\x5a\xb4\x07\xdc\x55\xba\xc4\x19\xd9\xd2\xba\x1b\x72\xce\x11\x9d\xc0\x56\x45\x3f\x18\xcd\xf4\x1f\x00\x00\xff\xff\xf9\x26\x61\xbf\x9e\x00\x00\x00")

func complySoc2PoliciesConductMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesConductMd,
		"comply-soc2/policies/conduct.md",
	)
}

func complySoc2PoliciesConductMd() (*asset, error) {
	bytes, err := complySoc2PoliciesConductMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/conduct.md", size: 158, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesConfidentialityMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcd\x31\xaa\xc3\x30\x10\x04\xd0\x7e\x4f\x31\xf0\x6b\x7d\x22\x57\x41\xad\xaa\xa4\x32\x71\x2e\x20\x64\x39\x6c\xf0\xee\x82\x25\x07\x7c\xfb\x20\x37\xa9\x66\x18\x1e\x8c\x26\x29\x01\xd1\x74\xe1\xb9\x68\xe3\xb4\x72\x3b\x30\xda\xca\xf9\xa0\x94\x37\xd3\x43\x02\xe2\x48\x35\x35\xae\x0b\x97\x1a\x08\x78\x4e\xb1\x07\xe0\x10\xfd\xbf\xff\xd5\x81\x24\xbd\x6d\x7b\x94\x0f\x57\x36\x3d\xb1\xc3\x9c\x5a\x09\xb8\xef\x0a\x8f\xe1\xe2\xaf\xa7\xcf\x26\x52\xb4\x05\xdc\x94\xfb\x2f\x66\xcb\x7b\x5f\xc8\x39\x47\xf4\x87\x68\xc2\xfa\xc2\x64\xa6\xdf\x00\x00\x00\xff\xff\x2f\xdf\x39\xf6\xa6\x00\x00\x00")

func complySoc2PoliciesConfidentialityMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesConfidentialityMd,
		"comply-soc2/policies/confidentiality.md",
	)
}

func complySoc2PoliciesConfidentialityMd() (*asset, error) {
	bytes, err := complySoc2PoliciesConfidentialityMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/confidentiality.md", size: 166, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesContinuityMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xc1\xca\xc2\x30\x10\x06\xef\xfb\x14\x1f\xfc\xe7\xfc\x58\x4f\x9a\x63\x73\xd2\x53\xb1\xbe\x40\x48\xa3\xac\x34\xbb\xd0\x4d\x84\xbc\xbd\xb4\xa7\x81\x61\x46\x62\xc9\x1e\x63\x33\x96\x6c\x86\xa0\x52\x59\x1a\xd7\x8e\x49\x57\x4e\x9d\x62\xda\x54\x7a\xf1\x18\xc3\x44\x16\x2b\xdb\x8b\xb3\x79\x02\x9e\x73\xd8\x01\x38\x84\x70\xfd\x1f\xa8\xc4\x8f\x6e\x8f\xfc\x65\x63\x95\x23\x71\x58\x62\xcd\x1e\xf7\x26\x18\x70\x3e\x0d\x97\x63\x48\x5a\x4a\x96\xea\x71\x13\xae\x1c\x57\x2c\x9a\xda\x6e\xc8\x39\x47\xf4\x87\xa0\x85\xe5\x8d\x59\x55\x7e\x01\x00\x00\xff\xff\x7a\xe8\x40\xaa\xa1\x00\x00\x00")

func complySoc2PoliciesContinuityMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesContinuityMd,
		"comply-soc2/policies/continuity.md",
	)
}

func complySoc2PoliciesContinuityMd() (*asset, error) {
	bytes, err := complySoc2PoliciesContinuityMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/continuity.md", size: 161, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesCyberMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8d\x31\x8a\xc3\x30\x10\x45\xfb\x39\xc5\x87\xad\xb5\xac\xb7\xda\x55\x17\x54\x25\x95\xb1\x73\x01\x45\x9e\x84\x49\xac\x19\xf0\xc8\x01\xdf\x3e\xd8\xd5\x87\xcf\x7b\x3c\xcd\x95\x23\xd2\x76\xe3\x05\x83\xf8\x0b\x27\x77\x76\xaf\xac\x0d\xbd\xcd\x52\x36\xca\x65\x31\xdd\x6a\x44\x1a\x7a\xf2\xdc\xc4\xef\xc2\x1e\x09\xb8\x8e\x69\x1f\x20\x20\xa5\xff\xef\x8e\x6a\x7e\xda\x32\xf0\x5b\x5c\x4c\x0f\x24\x60\xca\x8d\x23\x2e\xab\xa2\xc3\xef\x4f\xf7\x77\x08\xc5\xea\x9e\x88\x38\xab\x34\xc9\x33\x26\x2b\xeb\xfe\x50\x08\x81\xe8\x0b\xc9\xaa\xe8\x03\xa3\x99\x7e\x02\x00\x00\xff\xff\x69\x84\x0b\x8f\xa3\x00\x00\x00")

func complySoc2PoliciesCyberMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesCyberMd,
		"comply-soc2/policies/cyber.md",
	)
}

func complySoc2PoliciesCyberMd() (*asset, error) {
	bytes, err := complySoc2PoliciesCyberMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/cyber.md", size: 163, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesDatacenterMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xb1\x8a\xc3\x30\x10\x05\xfb\xfd\x8a\x07\x57\xeb\x38\x1f\x21\x04\xb5\x72\x93\x54\x26\xce\x0f\x2c\xf2\x26\x6c\xb0\x76\xc1\x92\x03\xfe\xfb\x60\x57\x03\xc3\x8c\x71\x91\x88\x9e\x1b\x67\xb1\x26\x0b\x06\x9f\x35\x6f\xc4\x79\x71\xdb\x4a\x44\x3f\x50\xe5\xa6\xf5\xa9\x52\x23\x01\x8f\x31\xed\x00\x02\x52\x3a\xff\x9e\xa8\xf0\xdb\x97\xbb\x7c\xb4\xaa\xdb\x91\x04\x4c\xdc\x24\xe2\xb6\x1a\x3a\xfc\xff\x75\x97\x63\xc8\x5e\x8a\x58\x8b\xb8\x9a\x36\xe5\x19\x93\xe7\x75\x37\x14\x42\x20\xfa\x41\xf2\xa2\xf6\xc2\xe8\x6e\xdf\x00\x00\x00\xff\xff\x19\x8b\x0c\x7e\x97\x00\x00\x00")

func complySoc2PoliciesDatacenterMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesDatacenterMd,
		"comply-soc2/policies/datacenter.md",
	)
}

func complySoc2PoliciesDatacenterMd() (*asset, error) {
	bytes, err := complySoc2PoliciesDatacenterMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/datacenter.md", size: 151, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesDevelopmentMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8d\x31\x8a\xc3\x30\x10\x45\x7b\x9d\xe2\xc3\xd6\x5a\xd6\x5b\x19\xb5\x72\xb3\x8b\x0b\x13\xe5\x02\x42\x1e\x87\x09\xd2\x4c\xb0\x64\x07\xdf\x3e\xd8\xd5\x87\xcf\x7b\x3c\x89\x85\x1c\x82\x2e\xed\x1d\x57\xc2\x40\x3b\x65\x7d\x15\x92\x86\x91\x17\x4a\x47\xca\x84\x49\x33\xa7\xc3\xc4\xb4\xaa\x1c\xc5\x21\x0c\xa3\x9f\x4c\x8d\x8d\xeb\xc2\x54\x9d\x01\xee\xc1\x9f\x03\x58\x78\xdf\x7f\x77\xa6\xc4\xa7\xae\x37\xda\xb9\xb2\xca\x85\x58\xcc\xb1\x91\xc3\xff\x26\xe8\xf0\xfb\xd3\xf5\x97\x90\xb4\x9c\x39\x87\x3f\xe1\xc6\x31\x63\xd6\xb4\x9d\x8f\xb1\xd6\x1a\xf3\x05\xaf\x85\xe5\x81\xa0\x2a\x9f\x00\x00\x00\xff\xff\x38\xd7\x26\x45\xae\x00\x00\x00")

func complySoc2PoliciesDevelopmentMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesDevelopmentMd,
		"comply-soc2/policies/development.md",
	)
}

func complySoc2PoliciesDevelopmentMd() (*asset, error) {
	bytes, err := complySoc2PoliciesDevelopmentMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/development.md", size: 174, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesDisasterMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\x31\x8a\xc3\x30\x10\x85\xe1\x5e\xa7\x78\xb0\xb5\x96\xb5\xb7\x09\xea\x82\xdd\x24\x95\xb1\x73\x81\x41\x9e\x84\x09\xd6\x0c\x48\xb2\xc1\xb7\x0f\x76\x93\xea\x3d\x7e\x3e\xa5\xc4\x01\xbd\x14\x2a\x95\x33\x46\x8e\xb6\x71\xde\x31\xd8\x22\x71\x77\x14\xb3\xe9\x9e\x02\xfa\x71\x70\x85\xaa\x94\xa7\x70\x09\x0e\x78\x4c\xdd\x31\x80\xc7\xb5\xf9\x6d\xbf\xf7\xdf\x25\x7a\x5b\x1e\x79\x93\x22\xa6\x27\xf6\x98\xa9\x72\xc0\x7d\x55\x34\x68\xff\x9a\xcb\xe9\xa3\xa5\xc4\x5a\x03\x6e\x2a\x55\x68\xc1\x6c\x71\x3d\x8a\xf3\xde\x3b\xf7\x83\xce\x92\xe8\x0b\x93\x99\x7e\x02\x00\x00\xff\xff\x9a\x7d\xe7\x10\xa9\x00\x00\x00")

func complySoc2PoliciesDisasterMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesDisasterMd,
		"comply-soc2/policies/disaster.md",
	)
}

func complySoc2PoliciesDisasterMd() (*asset, error) {
	bytes, err := complySoc2PoliciesDisasterMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/disaster.md", size: 169, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesEncryptionMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xc1\xca\xc2\x30\x10\x06\xef\xfb\x14\x1f\xfc\xe7\xfc\x58\x4f\x36\xd7\xd0\x83\x9e\x8a\xf5\x05\x42\x1a\x65\xa5\xbb\x2b\x4d\x2a\xe4\xed\xa5\x3d\x0d\x0c\x33\x1a\x25\x7b\x0c\x9a\xd6\xf6\xa9\x6c\x8a\xd1\x16\x4e\x8d\x62\x5a\x4d\x9b\x78\x0c\x23\x95\x58\xb9\x3c\x39\x17\x4f\xc0\x63\x0a\x3b\x00\x87\x10\xfa\xff\x9e\x24\xbe\x6d\xbd\xe7\x2f\x17\x36\x3d\x12\x87\x39\xd6\xec\x71\xdb\x14\x1d\xce\xa7\xee\x72\x0c\xc9\x44\xb2\x56\x8f\xab\x72\xe5\xb8\x60\xb6\xb4\xed\x86\x9c\x73\x44\x7f\x08\x26\xac\x2f\x4c\x66\xfa\x0b\x00\x00\xff\xff\xd5\x3c\x94\xf4\x97\x00\x00\x00")

func complySoc2PoliciesEncryptionMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesEncryptionMd,
		"comply-soc2/policies/encryption.md",
	)
}

func complySoc2PoliciesEncryptionMd() (*asset, error) {
	bytes, err := complySoc2PoliciesEncryptionMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/encryption.md", size: 151, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesIncidentMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\x3d\xaa\xc3\x30\x10\xc4\xf1\x5e\xa7\x18\x78\xb5\x1e\x71\x3e\x48\x50\xab\xca\xa9\x8c\x95\x0b\x08\x79\x13\x36\x58\xbb\xc1\x92\x03\xbe\x7d\xb0\x2b\x57\xf3\x67\xe0\x27\x31\x93\x43\xa0\x34\x4f\x5c\x17\xb4\x92\x78\x20\xa9\xe8\xa9\x7c\x54\x0a\xa1\xd3\x91\xd3\x62\x62\x9a\x54\x96\xec\x10\xda\xbe\x33\x25\x56\x2e\x4f\xa6\xe2\x0c\xf0\x08\x7e\x1d\xc0\xc2\xfb\xeb\xff\x69\xd7\xe7\x5d\x5f\x4c\x8e\x6f\x9d\x7a\xfa\x72\x61\x95\x8d\x5a\x0c\xb1\x92\xc3\x7d\x16\x34\x38\x1e\x9a\xdb\x06\x92\xe6\x4c\x52\x1d\x5a\xe1\xca\x71\xc4\xa0\x69\x5e\x1f\x63\xad\x35\xe6\x0f\x5e\x33\xcb\x0b\x41\x55\x7e\x01\x00\x00\xff\xff\x59\x43\xb7\xed\xc1\x00\x00\x00")

func complySoc2PoliciesIncidentMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesIncidentMd,
		"comply-soc2/policies/incident.md",
	)
}

func complySoc2PoliciesIncidentMd() (*asset, error) {
	bytes, err := complySoc2PoliciesIncidentMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/incident.md", size: 193, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesInformationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8d\x31\x8a\xc3\x30\x10\x45\x7b\x9d\xe2\xc3\xd6\x5a\xd6\x5b\xc5\x6a\x55\x39\x95\x89\x72\x81\x41\x96\xc3\x04\xcf\x0c\x48\x72\xc0\xb7\x0f\x76\xf5\xe1\xf3\x1e\x4f\x49\x4a\xc0\xa4\xab\x55\xa1\xce\xa6\x48\x25\xef\x95\xfb\x81\xd9\x36\xce\x87\xa3\x5c\x4d\x0f\x09\x98\xd2\xec\x1a\x75\x6e\x2b\x97\x16\x1c\xf0\x4c\xf1\x1c\xc0\x23\xc6\xf1\x77\x74\x42\x6f\xab\x8f\xf2\xe1\xc6\xa6\x17\xe2\xb1\x50\x2f\x01\xf7\x5d\x31\xe0\xff\x6f\xb8\x5d\x42\x36\x91\xa2\xfd\x0c\x73\x67\xda\xb0\x58\xde\xcf\xc7\x79\xef\x9d\xfb\x41\x34\x61\x7d\x21\x99\xe9\x37\x00\x00\xff\xff\xa8\x3c\xa3\x24\xa2\x00\x00\x00")

func complySoc2PoliciesInformationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesInformationMd,
		"comply-soc2/policies/information.md",
	)
}

func complySoc2PoliciesInformationMd() (*asset, error) {
	bytes, err := complySoc2PoliciesInformationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/information.md", size: 162, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesLogMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8d\xc1\xaa\x83\x30\x10\x45\xf7\xf3\x15\x17\xde\x3a\x8f\xea\xa6\x25\xdb\xac\x5a\x14\xa4\xf6\x07\x86\x98\xca\x14\x33\x03\x26\x16\xfc\xfb\xa2\xab\x0b\x97\x73\x38\xca\x39\x79\x74\x36\xa3\x67\xe5\x39\xe5\xa4\x15\x83\x2d\x12\x77\xe2\xb8\x9a\xee\xd9\xa3\xeb\x07\x2a\x5c\xa5\xbc\x25\x15\x4f\xc0\x6b\x0c\xc7\x00\x0e\x21\x5c\xff\x5b\xca\xfc\xb1\xf5\x99\xbe\x52\xc4\xf4\x44\x1c\x26\xae\xc9\xe3\xb1\x29\x1a\xb4\x97\xe6\x76\x0a\xd1\xf2\x91\xf0\xb8\xab\x54\xe1\x05\x93\xc5\xed\x78\xc8\x39\x47\xf4\x87\x60\x59\x74\xc6\x68\xa6\xbf\x00\x00\x00\xff\xff\x3a\x93\x11\xe3\x9c\x00\x00\x00")

func complySoc2PoliciesLogMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesLogMd,
		"comply-soc2/policies/log.md",
	)
}

func complySoc2PoliciesLogMd() (*asset, error) {
	bytes, err := complySoc2PoliciesLogMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/log.md", size: 156, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesMediaMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xc1\x4a\xc6\x30\x10\x06\xef\x79\x8a\x0f\x3c\x47\xac\x07\x95\x5c\x73\x52\x28\x94\xd6\x17\x58\x93\xb5\xec\x4f\xb2\x0b\x4d\x5a\xe8\xdb\xff\xb4\xa7\x81\x61\x46\xa9\x72\xc0\xcc\xd5\x0e\xfa\x2b\x8c\x91\xb3\x10\x48\x33\x62\xb1\x3d\x63\xe9\xb6\xd1\xca\x98\xac\x48\x3a\x1d\xa5\xcd\xf4\xac\x01\x63\x9c\x5c\xa3\x2e\xed\x5f\xb8\x05\x07\xfc\x2e\xf1\x02\xe0\x11\xe3\xc7\xeb\xa7\xab\xf4\xb0\x6d\xe6\x43\x9a\x98\xde\x89\x47\xa6\xce\x01\x3f\xbb\x62\xc0\xfb\xdb\xf0\x75\x0f\xc9\x6a\x65\xed\x01\xdf\x2a\x5d\xa8\x20\x5b\xda\x2f\xe3\xbc\xf7\xce\xbd\x20\x5a\x15\x5d\xb1\x98\xe9\x33\x00\x00\xff\xff\xac\xf1\x27\xb5\xaf\x00\x00\x00")

func complySoc2PoliciesMediaMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesMediaMd,
		"comply-soc2/policies/media.md",
	)
}

func complySoc2PoliciesMediaMd() (*asset, error) {
	bytes, err := complySoc2PoliciesMediaMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/media.md", size: 175, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesOfficeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xc1\xca\xc2\x30\x10\x06\xef\xfb\x14\x1f\xfc\xe7\xfc\x58\x11\x91\x5c\x73\xd2\x4b\x8b\xf1\x05\x42\xba\x95\x95\x66\x17\x9a\x54\xe8\xdb\x4b\x7b\x1a\x18\x66\x34\x15\xf6\xe8\xa7\x49\x32\x23\x72\x5e\x17\x69\x1b\x06\x9b\x25\x6f\x94\xf2\x62\xba\x15\x8f\x3e\x0e\x54\x53\x93\x3a\x09\x57\x4f\xc0\x2b\x86\x1d\x80\x43\x08\xd7\xff\x0b\x95\xf4\xb1\xe5\xc9\x5f\xa9\x62\x7a\x24\x0e\x63\x6a\xec\xf1\x58\x15\x1d\xce\xa7\xee\x76\x0c\xd9\x4a\x61\x6d\x1e\x77\x95\x26\x69\xc6\x68\x79\xdd\x0d\x39\xe7\x88\xfe\x10\xac\x88\xbe\x11\xcd\xf4\x17\x00\x00\xff\xff\x86\xb5\x0a\xc1\x9d\x00\x00\x00")

func complySoc2PoliciesOfficeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesOfficeMd,
		"comply-soc2/policies/office.md",
	)
}

func complySoc2PoliciesOfficeMd() (*asset, error) {
	bytes, err := complySoc2PoliciesOfficeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/office.md", size: 157, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesPasswordMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\x31\x0b\xc2\x30\x10\x46\xf7\xfb\x15\x1f\x38\x47\xac\x93\xcd\x9a\x49\xa7\x60\x05\xe7\x23\x8d\x72\xd2\xdc\x41\x93\x2a\xfd\xf7\xd2\x4e\x0f\x1e\xef\x29\x97\xec\x11\xb9\xd6\x9f\xcd\x23\xa2\x4d\x92\x56\xe2\x34\x9b\xae\xc5\x23\x3e\x23\x55\x6e\x52\x5f\x92\xab\x27\xe0\x31\x84\x0d\x80\x43\x08\xfd\xb1\xa7\xc2\x1f\x9b\xef\xf9\x2b\x55\x4c\xf7\xc4\x61\xe4\x96\x3d\x6e\x8b\xa2\xc3\xf9\xd4\x5d\xf6\x21\x59\x29\x59\x9b\xc7\x55\xa5\x09\x4f\x18\x2d\x2d\x9b\x21\xe7\x1c\xd1\x01\xc1\x8a\xe8\x1b\x83\x99\xfe\x03\x00\x00\xff\xff\xae\x6d\xf6\xfb\x96\x00\x00\x00")

func complySoc2PoliciesPasswordMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesPasswordMd,
		"comply-soc2/policies/password.md",
	)
}

func complySoc2PoliciesPasswordMd() (*asset, error) {
	bytes, err := complySoc2PoliciesPasswordMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/password.md", size: 150, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesPolicyMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8e\xc1\x0a\xc2\x30\x10\x44\xef\xfb\x15\x03\x9e\x23\xd6\x93\xcd\x35\x27\x3d\x15\xdb\x1f\x58\xd2\x28\x2b\xcd\x2e\x34\xa9\xd0\xbf\x97\x14\x4f\xc3\x0c\xf3\xe0\x29\xe7\xe4\x31\xd8\x22\x71\xc7\xb4\xb2\xa8\xe8\xfb\xdf\x89\xe3\x6a\xba\x67\x8f\x61\x1a\xa8\x70\x95\xf2\x92\x54\x3c\x01\xd3\x18\x5a\x00\x0e\x21\xf4\xe7\x9e\x32\x7f\x6c\x7d\xa6\xaf\x14\x31\x3d\x2e\x0e\x33\xd7\xe4\xf1\xd8\x14\x1d\xae\x97\xee\x76\x00\xd1\x72\x4e\x5a\x3d\xee\x2a\x55\x78\xc1\x6c\x71\x6b\x0b\x39\xe7\x88\x4e\x08\x96\x9b\xc2\x68\xa6\xbf\x00\x00\x00\xff\xff\xf6\x52\xec\x21\x9d\x00\x00\x00")

func complySoc2PoliciesPolicyMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesPolicyMd,
		"comply-soc2/policies/policy.md",
	)
}

func complySoc2PoliciesPolicyMd() (*asset, error) {
	bytes, err := complySoc2PoliciesPolicyMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/policy.md", size: 157, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesPrivacyMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xd0\xcd\x6a\xeb\x30\x10\xc5\xf1\xbd\x9e\xe2\xc0\x5d\x2b\x5c\xf9\x2b\x41\xdb\xac\x5a\x08\x88\xa6\x2f\x30\x28\x6a\x98\x12\xcd\x80\xed\x04\xfc\xf6\xc5\x01\x33\x5e\xe9\xc7\x9f\x83\x40\x12\xaa\x25\x22\x8d\xfc\xa2\xbc\xe0\x42\x42\xf7\x52\x8b\xcc\x48\xfa\xe0\xbc\x38\xca\xa3\xca\x52\x23\xd2\x25\xb9\x89\x66\x9e\x7e\xb8\x4c\xd1\x01\xdf\xd7\xf3\x7a\x00\x1e\x29\x1c\xc2\xc6\xc6\xd8\xee\xd9\x6c\xec\xac\x76\xfb\xda\x6e\xec\x6d\xd0\xdb\x60\xb0\x3a\xec\x6b\x6b\xec\x8c\xbd\x71\x30\x1e\x37\x1e\xed\xb2\xd3\x21\xb8\x4a\xbf\x3a\x7e\x95\x17\x4f\xac\xf2\x7e\x9c\xc7\x8d\xe6\x12\xf1\xf9\x14\x04\x34\xff\xc3\xe9\xbd\xcf\x5a\xd7\xcf\x89\xf8\x10\x9e\x99\x1e\xb8\x69\x7e\xae\xc5\x79\xef\x9d\xfb\x87\xb3\x56\x96\x3b\xae\xaa\xf2\x17\x00\x00\xff\xff\x4b\x76\x27\x2c\x5a\x01\x00\x00")

func complySoc2PoliciesPrivacyMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesPrivacyMd,
		"comply-soc2/policies/privacy.md",
	)
}

func complySoc2PoliciesPrivacyMd() (*asset, error) {
	bytes, err := complySoc2PoliciesPrivacyMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/privacy.md", size: 346, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesProcessingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x8a\xc3\x30\x10\x04\xd0\x5e\x5f\x31\x70\xb5\x8e\x93\x2f\x81\xa0\xd6\x95\x52\x89\x38\x3f\x20\x64\xc5\x6c\xb0\x76\x41\x92\x03\xfe\xfb\x60\x57\xaa\xf6\xb1\x30\xc3\x70\xc8\xc9\xc2\x17\x89\xa9\x56\xe2\x05\x8e\x5b\x5a\x0a\xb5\x1d\x5e\x56\x8a\xbb\x0a\xb1\x08\xef\xd9\xc2\x3b\xaf\x6a\x68\x54\x5f\x94\xaa\x55\xc0\x73\x1a\x8f\x03\x68\x78\x67\x7e\x4d\xe7\xa1\xf3\x7f\xe7\x4b\xe7\xab\xca\xe1\x2d\xe5\x91\x3e\x54\x49\xf8\xac\xd4\x98\x43\x4b\x16\xf7\x8d\x61\x30\xfc\x99\xdb\x19\x88\x92\x73\xe2\x66\xe1\x98\x1a\x85\x15\xb3\xc4\xed\xf8\x28\xad\xb5\x52\x3f\x18\x25\x1f\xe3\x27\x11\xfe\x06\x00\x00\xff\xff\x52\xb2\xb4\x8a\xd2\x00\x00\x00")

func complySoc2PoliciesProcessingMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesProcessingMd,
		"comply-soc2/policies/processing.md",
	)
}

func complySoc2PoliciesProcessingMd() (*asset, error) {
	bytes, err := complySoc2PoliciesProcessingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/processing.md", size: 210, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesRemoteMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcb\x31\x8a\xc3\x30\x10\x85\xe1\x5e\xa7\x78\xb0\xb5\x96\xb5\x8b\xdd\x45\x9d\x11\x29\x92\xca\xd8\xb9\x80\x90\x27\x61\x82\x67\x06\x2c\x39\xe0\xdb\x07\xbb\x72\xf5\x7e\x1e\x7c\x9a\x84\x02\x06\x12\xab\x84\x2e\x67\x2a\x05\xbd\xcd\x9c\x37\x97\xf2\x62\xba\x49\xc0\x70\xe9\x7a\x57\x52\xe5\xf2\x60\x2a\xc1\x01\xf7\x31\xee\x03\x78\xc4\xf8\xfb\xdd\x9c\xba\x3d\xf5\x9f\x93\xf4\xb2\x65\xa0\x37\x17\x36\x3d\xa8\xc7\x94\x2a\x05\xdc\x56\x45\x83\xf6\xa7\xf9\x3f\x40\x36\x11\xd2\x1a\x70\x55\xae\x9c\x66\x4c\x96\xd7\xfd\x71\xde\x7b\xe7\xbe\x10\x4d\x58\x9f\x18\xcd\xf4\x13\x00\x00\xff\xff\x4e\x47\x83\x97\xb4\x00\x00\x00")

func complySoc2PoliciesRemoteMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesRemoteMd,
		"comply-soc2/policies/remote.md",
	)
}

func complySoc2PoliciesRemoteMd() (*asset, error) {
	bytes, err := complySoc2PoliciesRemoteMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/remote.md", size: 180, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesRetentionMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcb\xb1\x8a\xc3\x30\x10\x04\xd0\x5e\x5f\x31\x70\xb5\xcc\xd9\xdc\x1d\x87\x5a\xa5\x49\x2a\x63\xe7\x07\x16\x59\x09\x1b\xac\x5d\xb0\xd6\x01\xff\x7d\xb0\x09\xa9\xe6\x31\xcc\x08\x95\x1c\x70\x22\x23\x0c\xd9\xb2\x18\xab\xa0\xd7\x99\xd3\xe6\x28\x2d\x2a\x5b\x09\x18\x7a\x57\xc9\xb8\xde\x38\xd7\xe0\x80\xeb\x18\xf7\x00\x3c\x62\x6c\x9b\xee\xe3\xbf\xe6\xf7\xed\xfe\xa7\xe9\x5c\xa1\x87\x2e\x43\x7e\x72\x65\x95\xe3\xe9\x31\x91\xe5\x80\xcb\x2a\x68\xd1\x7d\xb7\xff\xc7\x3e\x69\x29\x59\x2c\xe0\x2c\x6c\x4c\x33\x26\x4d\xeb\xde\x38\xef\xbd\x73\x5f\x88\x5a\x58\xee\x18\x55\xe5\x15\x00\x00\xff\xff\xf1\xef\x33\xc8\xb2\x00\x00\x00")

func complySoc2PoliciesRetentionMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesRetentionMd,
		"comply-soc2/policies/retention.md",
	)
}

func complySoc2PoliciesRetentionMd() (*asset, error) {
	bytes, err := complySoc2PoliciesRetentionMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/retention.md", size: 178, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesRiskMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x73\x8a\x0f\xae\x23\xd6\x95\x66\x57\xb2\xaa\xab\xd2\x7a\x81\x90\x46\x19\x6d\x66\xa0\x93\x0a\xbd\xbd\xb4\xab\x0f\x9f\xf7\x78\x12\x4b\xf6\x18\xd8\xbe\x68\xcd\xb2\x59\xc9\x52\xd1\xeb\xcc\x69\xa3\x98\x16\x95\xad\x78\x0c\x5d\xdb\x93\xc5\xca\xf6\xe2\x6c\x9e\x80\xe7\x18\xf6\x01\x1c\x42\xb8\x9f\x1b\x2a\xf1\xa3\xcb\x90\x7f\x6c\xac\x72\x20\x0e\x53\xac\xd9\xe3\xb1\x0a\x1a\x5c\x2f\xcd\xed\x10\x92\x96\xbd\xe1\xd1\x09\x57\x8e\x33\x26\x4d\xeb\xfe\x90\x73\x8e\xe8\x84\xa0\x85\xe5\x8d\x51\x55\xfe\x01\x00\x00\xff\xff\x7a\xe5\x35\x49\x9e\x00\x00\x00")

func complySoc2PoliciesRiskMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesRiskMd,
		"comply-soc2/policies/risk.md",
	)
}

func complySoc2PoliciesRiskMd() (*asset, error) {
	bytes, err := complySoc2PoliciesRiskMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/risk.md", size: 158, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesVendorMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8d\xc1\xaa\x83\x30\x10\x45\xf7\xf9\x8a\x0b\x6f\x9d\x47\x75\xd5\x66\x9b\x55\x0b\x82\xd4\xe2\x7e\x88\x53\x99\x62\x66\xc0\xc4\x82\x7f\x5f\x74\x75\xe1\x72\x0e\x47\x29\x73\xc0\xc8\x3a\xd9\x8a\x8e\x94\x66\xce\xac\x15\xbd\x2d\x92\x76\x47\x69\x35\xdd\x73\xc0\xd8\xf5\xae\x50\x95\xf2\x16\x2e\xc1\x01\xaf\x21\x1e\x03\x78\xc4\x78\xfb\x6f\x5d\xa6\x8f\xad\x4f\xfe\x4a\x11\xd3\x13\xf1\x98\xa8\x72\xc0\x63\x53\x34\x68\x2f\xcd\xf5\x14\x92\xe5\x23\x11\x70\x57\xa9\x42\x0b\x26\x4b\xdb\xf1\x38\xef\xbd\x73\x7f\x88\x96\x45\x67\x0c\x66\xfa\x0b\x00\x00\xff\xff\x8a\x18\x1b\xc5\x9f\x00\x00\x00")

func complySoc2PoliciesVendorMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesVendorMd,
		"comply-soc2/policies/vendor.md",
	)
}

func complySoc2PoliciesVendorMd() (*asset, error) {
	bytes, err := complySoc2PoliciesVendorMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/vendor.md", size: 159, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2PoliciesWorkstationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x8b\xc1\xca\xc2\x30\x10\x06\xef\xfb\x14\x1f\xfc\xe7\xfc\x58\x0f\x52\x72\xcd\x49\x4f\xc5\x0a\x3d\x2f\x69\x94\xd5\x66\x17\x92\x54\xe8\xdb\x4b\x7b\x1a\x18\x66\x94\x73\xf2\x98\xac\x7c\x6a\xe3\x26\xa6\x18\x6c\x91\xb8\x11\xc7\x62\xba\x65\x8f\x69\xa0\xca\x4d\xea\x53\x52\xf5\x04\x3c\xc6\xb0\x03\x70\x08\xe1\xf2\xdf\x53\xe6\xb7\x95\x7b\xfa\x4a\x15\xd3\x23\x71\x98\xb9\x25\x8f\xdb\xaa\xe8\x70\x3e\x75\xfd\x31\x44\xcb\x39\x69\xf3\xb8\xaa\x34\xe1\x05\xb3\xc5\x75\x37\xe4\x9c\x23\xfa\x43\xb0\x2c\xfa\xc2\x68\xa6\xbf\x00\x00\x00\xff\xff\x16\x51\x77\xc3\x98\x00\x00\x00")

func complySoc2PoliciesWorkstationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2PoliciesWorkstationMd,
		"comply-soc2/policies/workstation.md",
	)
}

func complySoc2PoliciesWorkstationMd() (*asset, error) {
	bytes, err := complySoc2PoliciesWorkstationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/policies/workstation.md", size: 152, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc6\xc1\x09\x02\x41\x0c\x05\xd0\xfb\x54\xf1\xc1\xbb\xb5\xd8\xc2\x18\xbf\x18\x06\x32\x21\x3f\x2e\x6c\xf7\x7b\xdc\xdb\x7b\xe0\x55\xdb\xf8\xf9\x17\x35\xc6\x6d\x64\x51\x56\xfe\x26\x94\x34\xff\xba\x41\xcd\x14\xfa\x37\x1b\xb3\x88\x9e\x8b\x01\x0f\x14\x95\x3b\x44\xf4\xc6\xe2\x09\x1e\x8c\xd6\x73\x5c\x01\x00\x00\xff\xff\x7b\xb0\x4d\xeb\x5c\x00\x00\x00")

func complySoc2ProceduresReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresReadmeMd,
		"comply-soc2/procedures/README.md",
	)
}

func complySoc2ProceduresReadmeMd() (*asset, error) {
	bytes, err := complySoc2ProceduresReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/README.md", size: 92, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresOffboardingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4c\xb1\x52\x50\xca\x4f\x4b\x4b\xca\x4f\x2c\x4a\x51\xe2\xca\x4b\xcc\x4d\xb5\x52\x50\xf2\x87\x0a\x28\x84\x16\xa7\x16\x29\x71\xe9\xea\xea\x72\x71\x29\x2b\x38\xe7\xe7\x66\xe6\xa5\x2b\x04\xe7\xe7\xe7\x01\x02\x00\x00\xff\xff\x79\xa2\x7a\x63\x37\x00\x00\x00")

func complySoc2ProceduresOffboardingMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresOffboardingMd,
		"comply-soc2/procedures/offboarding.md",
	)
}

func complySoc2ProceduresOffboardingMd() (*asset, error) {
	bytes, err := complySoc2ProceduresOffboardingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/offboarding.md", size: 55, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresOnboardingMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4c\xb1\x52\x50\xca\xcf\x4b\xca\x4f\x2c\x4a\x51\xe2\xca\x4b\xcc\x4d\xb5\x52\x50\xf2\x87\xf0\x15\xfc\x52\xcb\x15\x42\x8b\x53\x8b\x94\xb8\x74\x75\x75\xb9\xb8\x94\x15\x9c\xf3\x73\x33\xf3\xd2\x15\x82\xf3\xf3\xf3\x00\x01\x00\x00\xff\xff\x25\x8d\x3b\x1b\x39\x00\x00\x00")

func complySoc2ProceduresOnboardingMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresOnboardingMd,
		"comply-soc2/procedures/onboarding.md",
	)
}

func complySoc2ProceduresOnboardingMd() (*asset, error) {
	bytes, err := complySoc2ProceduresOnboardingMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/onboarding.md", size: 57, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresPatchMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4c\xb1\x52\x50\x2a\x48\x2c\x49\xce\x50\xe2\xca\x4b\xcc\x4d\xb5\x52\x50\x72\x2c\x28\xc8\xa9\x54\xf0\x0f\x56\x00\x0b\xa7\x16\x2b\x71\x25\x17\xe5\xe7\x59\x29\x28\x19\x28\x18\x28\x18\x2a\x68\x81\xa0\x12\x97\xae\xae\x2e\x17\x97\xb2\x82\x73\x7e\x6e\x66\x5e\xba\x42\x70\x7e\x7e\x1e\x20\x00\x00\xff\xff\xc9\x3a\x76\x1b\x4b\x00\x00\x00")

func complySoc2ProceduresPatchMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresPatchMd,
		"comply-soc2/procedures/patch.md",
	)
}

func complySoc2ProceduresPatchMd() (*asset, error) {
	bytes, err := complySoc2ProceduresPatchMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/patch.md", size: 75, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2ProceduresWorkstationMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xca\x4c\xb1\x52\x50\x2a\xcf\x2f\xca\x2e\x2e\x49\x2c\xc9\xcc\xcf\x53\xe2\xca\x4b\xcc\x4d\xb5\x52\x50\x72\xce\xcf\xc9\x49\x4d\x2e\x51\x08\x47\xc8\x29\xb8\xa4\x96\x24\x66\xe6\x14\x2b\x71\x25\x17\xe5\xe7\x59\x29\x28\x19\x28\x18\x28\x68\x41\xa0\x12\x97\xae\xae\x2e\x17\x97\xb2\x82\x73\x7e\x6e\x66\x5e\xba\x42\x70\x7e\x7e\x1e\x20\x00\x00\xff\xff\x20\xf0\xa9\x34\x5c\x00\x00\x00")

func complySoc2ProceduresWorkstationMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2ProceduresWorkstationMd,
		"comply-soc2/procedures/workstation.md",
	)
}

func complySoc2ProceduresWorkstationMd() (*asset, error) {
	bytes, err := complySoc2ProceduresWorkstationMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/procedures/workstation.md", size: 92, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2StandardsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x41\x4e\xc3\x40\x0c\x45\xf7\x39\xc5\x97\xd8\x42\x67\xcf\xae\x67\xe0\x02\x75\x67\x9c\x8c\xcb\xcc\x38\xb2\x1d\xaa\xdc\x1e\x85\x02\xea\xee\x49\x7e\x96\x9f\x5f\xf0\x11\x34\x0a\x59\xf1\x69\x3a\xb7\x86\xcb\x4e\xbd\x5d\x30\x4b\x63\x87\x0c\x44\x15\x47\x11\xe3\x1c\x6a\x3b\xc8\x18\xe4\xbe\x75\x2e\x08\x45\xd6\x31\xab\xf5\x03\x6b\xc4\xea\xef\x29\x2d\x12\x75\xbb\x9e\xb2\xf6\xa4\x2b\x8f\xac\x23\x4c\x5b\xf2\x5c\xb9\x93\xa7\x30\xe6\xd4\xc9\x83\x2d\x7d\xde\xa9\xc9\xbc\x27\xff\x4d\x98\xa6\x73\xb9\x6d\x1e\x88\xca\x08\xb2\x85\x03\x7f\x33\xcc\x6a\x8f\x98\xd5\xf4\xc6\x39\x70\xdd\x41\xa5\xc8\x58\xa0\x06\xe3\xae\x5f\x07\x37\x19\xfc\x26\xc1\xdd\x71\x97\xa8\x32\xc0\x94\xeb\xcf\x3f\xaf\x87\xf8\x58\x49\xff\x3e\x3d\x5d\x90\xc6\xe0\x11\x62\xdc\xf6\xd3\x77\x00\x00\x00\xff\xff\x10\x04\x60\x45\x1a\x01\x00\x00")

func complySoc2StandardsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2StandardsReadmeMd,
		"comply-soc2/standards/README.md",
	)
}

func complySoc2StandardsReadmeMd() (*asset, error) {
	bytes, err := complySoc2StandardsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/standards/README.md", size: 282, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2StandardsTsc2017Yml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5b\xcd\x72\xdc\x38\x92\xbe\xeb\x29\x70\xb4\x23\x68\x6f\xb4\x24\xdb\x3d\xbd\x27\x75\xb5\x3b\x56\x11\xeb\x9d\x0a\x5b\x33\x77\x08\xc8\xaa\xc2\x1a\x04\xd8\xf8\x29\xb9\xe6\x34\xaf\x31\xaf\x37\x4f\x32\x91\x09\x80\x04\x59\x64\xa9\x4a\xf6\xcc\xc9\x92\x4c\x02\x99\x5f\xfe\xff\xd0\xf0\x16\x7e\x61\x0f\x5f\x56\x57\xab\xd5\x4f\x6f\x7f\xfa\xe5\x8a\xb1\x0d\x6f\x95\x3e\xfc\xc2\x56\xab\x9f\xae\x18\x4b\x0f\xdc\x9b\x00\x5b\xa7\xc2\x81\x71\x23\xd9\xc7\xb0\x53\xc2\x5f\x31\x26\xc1\x0b\xa7\xba\xa0\xac\xf9\x85\x3d\xec\x80\x81\x09\xf8\x90\x84\xd6\x1a\x1f\x1c\x0f\xe0\x19\x67\xc2\xb6\xad\x0a\x2d\x98\xc0\x82\x65\x6a\x74\x16\xe0\x59\x5c\xb3\x3d\xd7\x11\x3c\x51\x71\xbd\x44\xc5\xaf\x96\x3b\xc9\xee\x8d\x84\x0e\x8c\x04\x23\x60\x8e\x86\x47\x7a\xca\x6e\x98\x54\x0e\x44\xb0\xce\x8f\xe9\x51\xd5\xfb\x6c\xe3\x6c\xcb\x5a\x6e\xf8\x16\x88\x3e\x22\xe9\x1b\x38\xa1\x3c\x78\x66\xf7\xe0\xbc\xda\xee\x02\x1e\x17\x76\xc0\x24\xec\x41\xdb\xae\x7f\xb4\x03\xb7\xb1\xae\xe5\x78\x94\xdd\x10\x6b\xce\x70\xcd\x84\x35\xc1\x59\x4d\xec\xdc\x2c\xb1\xf3\x67\xb7\xe5\x46\xfd\x8d\x23\xe9\x5c\xb3\x2f\xc1\x45\x11\xa2\x3b\x62\xea\xd3\x40\x1e\xf8\xc0\x1f\xb5\xf2\x3b\xf0\x0d\x7b\x52\x61\x57\xb8\x2d\x84\x36\xcc\x97\x63\x7c\xc3\x1c\x74\xd6\x05\x65\xb6\x4c\x2b\x83\x7f\x40\x9a\x79\xd7\x39\xdb\x39\xc5\x03\x30\x1e\xc3\xce\x3a\x15\x14\xca\xc9\x48\xe6\xc0\x77\xd6\x78\xf5\xa8\x74\xfa\xa3\x32\xc4\x77\x17\x9d\x8f\x8a\x60\xb0\x8f\xff\x0f\x22\xa8\x7d\x16\xd6\xed\x12\x77\xff\xa3\x9c\x32\xdb\x86\x3d\x38\xae\x0c\x92\x80\xe7\x7f\x86\x80\x2a\x62\xcd\x4b\x95\x87\x87\xe0\xb8\x08\x4d\x91\x44\x93\xc9\x0e\x5c\x19\x7c\xb4\xa3\x0b\x50\xc6\x6a\xaf\x64\xe4\x9a\x58\xe0\x5a\x6d\x0d\x1d\x41\x98\x4d\x58\x78\xb7\xac\xf5\xe5\x14\x76\x27\x84\x8d\x26\x70\x02\xe6\x70\x82\xfa\x9d\xd5\xd2\x8f\xee\xe7\xe5\x55\x0d\x6c\x63\x1d\xe2\xa9\xdc\x91\xaa\x5c\x06\xfd\xdb\xab\xd5\xea\x7a\x6a\xae\xd7\x3d\xe1\x7f\xf1\xa4\x8e\xf7\x86\x94\x13\x69\x64\x5f\x0e\x3e\x40\x7b\xca\x68\xed\x23\x82\xe8\x99\x75\x6c\x0b\x06\x32\xfe\x46\xb2\x88\xa6\xe0\x40\xc3\x9e\x9b\xd0\xb0\x3f\x22\x47\x0c\x98\xaa\x4e\x0f\x96\xf9\xd8\xa1\xb2\x11\xcd\x9b\x68\x04\xfe\x1d\xc5\x3e\x6f\x16\xd7\x53\x2b\x3f\x22\x7e\x65\xdb\x36\x1a\x25\x46\xe4\x37\xe4\x89\xf0\xac\x13\x8c\x94\xeb\xf4\x81\x94\x27\x1d\x42\x80\xf6\x04\x37\x4c\x19\xa1\xa3\x24\x02\x7b\x54\xe7\x4d\x00\x65\x36\xe5\xa0\x61\x06\x04\x78\xcf\xdd\xe1\x25\xbc\xdf\xbc\x8c\xf7\x8f\xdf\x9e\xe5\x7d\xc4\x30\x29\x3b\xe4\x97\x58\xc7\x1d\xf1\xe3\x60\xcb\x1d\x71\xde\xf2\x10\xc0\x79\xc6\x37\x1b\x44\xc0\x6c\xcf\x64\xe0\x66\xaa\x79\x37\x83\x4f\x1b\x4c\x6b\x99\x48\xdf\x81\x50\x1b\xa4\xa5\xc2\x9e\x88\xf5\x71\xb3\x51\x42\xa1\xa5\x0a\xcd\x29\x48\x04\xcb\xc0\x90\xf1\x20\x71\x4a\xe2\x19\x9b\x02\x0d\xf9\x33\xef\xc1\x7b\xb2\x6e\xbb\x61\x4e\xf9\xaf\xa4\xad\x3c\x31\x64\xc7\xd6\x7e\x33\xd5\xbb\x81\xf4\xcf\xca\x7f\xc5\xe7\xcf\x62\xa1\xd0\x81\x78\xd2\x8d\xc1\x12\x7d\x5c\xec\x14\xec\xa1\x50\xa3\xc2\x88\x47\x2e\x9c\xf5\x9e\x1e\xcc\xe7\x10\x03\x86\xeb\xc3\xdf\xfa\x93\x38\x7a\xbd\x47\xee\x55\x52\x3d\x09\x01\x5c\x9b\x5c\xe8\xce\x3e\xd1\xcb\xe9\x41\xbf\xb3\x51\x4b\xf6\x08\x39\x80\x49\xe2\xef\x66\x89\xbf\xdf\x1d\x8f\xf2\x32\x2e\x05\x1a\x82\x44\x15\x21\x4f\x64\xc9\x79\x73\x4d\x74\x6d\xe8\x38\x74\xae\x84\x3f\x92\x77\x0a\x89\x89\x14\x6e\x97\xa8\xbc\x6f\x3b\x2e\xe8\x8d\xd5\x8e\x9b\xed\xb9\x42\x18\x14\x01\x3c\x13\xe9\x4d\x16\x76\x3c\x30\x41\x20\x79\xb5\x35\xa4\x36\x26\xe8\x03\x53\xe9\x12\x24\xd3\x93\x71\x2d\x28\xfa\xed\x54\xd1\x6f\x7b\x3a\x3f\x59\xa3\x82\xc5\x10\x77\x4a\xd1\x41\x83\x08\xbe\x8f\x56\x39\x02\xe7\xac\xc1\x33\x6b\xb6\x36\x87\xc6\xff\xb2\x8e\x79\xe8\x38\xba\x5d\x06\x98\x0d\x91\x86\x13\x9c\xdc\x0b\x70\x14\xe1\x9e\x76\x10\x76\x40\x31\x84\xa2\x9d\x35\x60\x50\xc5\x8e\xa9\x67\xdc\x01\xeb\x1c\xf8\x92\xaa\x54\x66\x4d\x9c\x5d\x2f\x71\xf6\x19\x5a\x90\x8a\x3f\x13\xa5\x33\x89\x19\xfa\x89\x9f\x9d\x90\x22\x21\x19\xb5\xc8\x61\x8d\xb3\xa0\x5a\xd0\x07\xd4\x5b\x83\xdc\xa0\xc6\x58\x0f\x95\x8b\xca\x3e\xb8\x84\x4c\xfe\x15\x61\x12\xd6\xb9\xa4\x44\x8c\x8b\xa9\x1b\xf7\x60\x94\x75\xd3\x5c\x2e\xcc\x26\x84\x0d\x19\xd9\x90\x07\x5d\xad\x56\xef\xa6\xa2\x7e\x77\xec\xd3\x92\xf1\x7c\x52\x41\x6d\x9f\x83\x27\x4b\x9e\x68\x28\xc2\x1f\x44\x83\xa7\xa5\xe0\x92\x55\xd4\x04\xa7\x1e\x63\x80\x62\x3c\x6d\x7f\xc7\xe0\xd3\x9e\xb3\x2b\xd2\x14\x21\xa0\x4b\xa9\x86\xc6\x5b\x3d\x71\x76\xbd\xc4\xd9\x03\x88\x9d\xb1\xda\x6e\x0f\x6c\x95\x68\x3b\x65\x6e\x5c\x7b\x3b\xcf\x58\xca\x17\xf4\x1c\x83\x98\x99\xb2\x30\xdc\x33\x89\x96\xa7\xbc\xc4\xbb\xa9\x2f\x1b\x08\xff\xd8\xe7\xc1\x92\xad\xad\x46\xed\x3a\x5d\x8f\x74\xda\x1e\x16\x04\xe0\x6c\xdc\xee\x58\x97\x4f\x49\x12\xe9\xf3\x6c\xf6\x84\xbf\x2a\xcf\xe0\x5b\x07\x22\x80\x24\xc6\x95\x61\x9d\xb3\x02\x24\xa6\xd9\xe9\x8d\x2e\x86\xe1\x0c\x65\x48\x16\xa4\x23\xab\xd5\xfb\xa9\x6a\xbd\xef\xf9\xf8\x5f\xbb\xa5\xea\xe7\x4e\x60\x36\x71\xca\xd5\xb5\x9d\x26\x94\x3c\xd3\xf9\x1d\x4e\xef\x30\x0f\x22\x52\xa0\xf4\x76\x13\x9e\xb8\x03\x34\x8a\x8d\xe3\x7d\x1d\x90\xb3\x7e\x27\x76\x2a\x40\xaa\x0c\x92\x54\x3a\x67\x43\xe2\xa9\x4e\xe5\xd0\x8b\x06\x52\xa6\xfc\xff\x28\xa7\x36\x15\x4a\xfd\x5d\xb0\x27\x52\x82\x65\x2d\x40\xa8\x02\xda\x3f\xff\xfe\x0f\x3f\x96\xe2\xfb\xa9\xfa\xbd\xaf\xb3\x1d\xb7\xc0\xfa\xda\xa1\x31\x63\xb5\xe8\x7d\x24\xf3\x4e\x7e\x5a\x38\x90\x29\x08\x25\x15\xdc\x3a\x6e\x42\xf5\xff\x09\x94\xa6\x0e\xb1\x0e\xb6\xca\xa7\x3c\x07\x71\x48\x15\x0f\x86\x5b\x03\x4f\x83\xaf\x4a\x85\x5f\xfe\x25\x7a\x7c\xfc\x89\x7c\x52\x86\x59\x79\xc6\x25\x86\x61\x3c\x0a\x24\x7b\x3c\x54\x77\xbc\x65\xbf\x53\x62\x8f\xcf\x5f\xfa\x6e\x43\x6f\xcc\xf2\xe7\x80\x39\x68\xed\x1e\x24\x3a\x7e\x93\x1e\x1c\xce\x34\x96\x69\x6b\xb6\xf8\xb7\xc2\x94\x24\xc0\x6f\x96\x00\xff\x6c\x35\xbc\xf9\x95\x7b\x90\xcf\x6b\xdc\x00\x54\xc3\x5a\x2b\x29\xcc\x36\x58\x1c\x24\x92\x7c\x21\x24\x58\x26\x79\xe0\x4d\xa5\x7f\x25\xd4\xe4\x70\x67\x29\x64\x9d\xd4\xb6\x47\xa2\xc9\x1a\xe6\xac\x4e\x85\xeb\x38\x09\xa7\x8b\xab\x70\x2d\x01\x03\x7a\x0a\x3d\x29\xd8\x37\x6c\xab\xf6\x29\x48\xa4\x9c\xa5\x2f\x4c\x52\xac\x34\xe8\x18\x29\x52\x6a\xe0\x3e\xb0\xce\xa9\xbd\xd2\xb0\x05\x3a\xc4\xc3\x16\xd3\xe2\xe2\x70\x65\x4c\x97\x9e\xa7\xdf\xb7\x4b\x70\xaf\x77\x07\x7f\x9e\x79\x3b\xf0\xc1\x29\xf4\xab\x5d\x79\x67\x80\x77\xc3\x45\xa9\x45\x28\x7b\x38\x05\xe4\x2b\x0c\x97\xf0\x8d\xa3\xbb\x68\x48\x30\x4c\x00\xea\x78\x75\x4a\xc3\x1e\xb9\xf8\xfa\x26\x76\x8c\x02\x3d\xf3\xc1\x3a\xbe\x85\x5a\x58\x1e\x8c\x57\x14\xf2\xb4\x4d\xa9\xb6\x7f\x4d\xf1\xa5\x57\x34\x4c\x62\xbc\x35\x06\xf4\x99\x28\xbd\x5b\x42\xe9\x37\x24\xf2\x37\xe5\x3b\xeb\x4f\x96\x36\x52\x79\xf4\xdf\xca\x44\xa8\x9c\x20\x02\x52\x20\xcb\xc8\x50\xda\x94\x3c\x5c\x0f\x66\x42\xc7\x1a\x7d\x60\x7c\x13\x72\x06\x95\xab\x79\x64\xc0\x01\x97\x49\xb9\x05\xbd\x49\xc8\x91\x66\x64\xad\x4e\x0e\x30\x99\x78\x3e\x6d\xc7\x3d\x7b\x04\x30\x4c\x2a\x32\xee\x5d\x89\x0e\xb5\x69\x3a\xf8\x23\x2a\x34\xfa\xf3\x50\x7a\xbf\x84\x52\xa9\xfd\xd8\xc3\xce\x01\x0f\xdf\x19\x2b\x5a\xe0\x3e\xc5\xae\xc1\xcd\xf3\x2d\x96\xff\x48\x20\x5d\x90\x3d\xbe\x8d\x4e\x60\xc0\x88\x01\xad\x8a\x0a\x9a\x6c\x83\x8f\x36\x1a\xc9\x9d\xca\x94\x7f\x38\x29\xdf\x55\xf4\xc1\xca\x54\xef\x3c\x38\x6e\x7c\xab\xbc\x3f\x9d\x42\x0d\x36\x81\x90\x85\xea\x25\x74\x48\x29\x67\x28\xed\x9f\xd6\xee\xb9\x4e\x69\xf0\xa8\x29\x51\xe9\xeb\x29\x4f\x9f\xcd\x4a\x50\xf9\xd0\xd4\x56\xe6\x99\x0a\x4c\x46\x47\xb5\xe4\x02\x09\xc5\x27\xf2\x73\x4d\xe1\xe7\x25\xa8\x3e\x71\x4d\xba\xf6\x1b\x64\x3d\x3e\x4f\xca\x39\xad\xc9\xd2\xa4\xd8\xcc\x72\xe5\x28\x52\x1a\x8c\xd5\x4e\xec\x6c\xea\x28\x29\x7c\x5a\x46\x51\xbc\x5d\x34\x15\x4c\x94\x42\x63\x1a\x63\xa3\x1f\x94\xff\x1c\xbe\x3e\x4c\xd3\x9c\x0f\x3d\x5f\x7f\x8d\x1a\x13\xc4\x6c\x6e\xcb\xdc\xe5\x5b\xc6\x55\xf3\x28\x98\x53\x2f\x4a\x96\x03\x88\xb7\xb6\xaf\xc4\x46\x49\x99\x2d\xe5\xe1\x81\xbd\xfa\xe9\xf5\x50\x13\x5a\x84\x6b\xa3\xb6\xd1\x95\x02\x0b\xd3\x37\x07\x3e\xea\x50\x7a\x6e\x53\x84\x30\x53\xd8\x57\x3c\xa8\xa2\x25\xaf\xae\x5f\x33\x1f\x3d\xc6\x96\xa1\x61\x14\x2c\xbe\xa0\xb3\xc7\xda\x53\xc8\x9f\xbc\x4d\x70\x5d\x2f\xc1\x75\x67\x6c\xcb\xf5\x29\xa0\x06\x40\x32\xf7\xbd\x55\x56\x55\x61\xa9\x7f\x6c\x57\xa2\x21\x75\xb1\xd1\x83\x55\x4f\x61\xc0\xe0\x74\x61\x9f\xfd\xa2\xc4\x95\x91\xd4\x64\xd9\x53\x43\x6a\x50\x09\x4e\xf5\xac\xe1\x21\x62\xc2\x2f\x95\xe7\x94\x5b\x25\x38\xc0\x39\x7b\xd4\x4f\xaa\xf4\xa5\x72\xb8\x33\x82\xfe\xef\x8a\x0e\x24\x21\xf7\x45\xc8\x75\x96\x2e\x08\xd4\x25\x30\xfa\x88\x52\xe2\x4e\x52\x53\x02\xf8\x66\x09\xe0\x2f\xe5\xe1\x7b\x23\x48\x4b\xd8\xc7\xbe\xe2\x3e\xab\xe6\x9d\x49\x84\x17\x28\x4c\xed\x07\xeb\xd8\x8e\xef\x21\xab\x19\xa4\xbe\x09\xdb\x70\xa5\xa3\x83\x32\x5c\xc8\xb7\xcc\x83\xc3\x5e\xf5\x77\xaa\x4c\xb4\x7f\x8d\xa0\x37\x4c\x6d\x98\xb7\x0d\x16\xc9\x94\x95\xf5\x6d\x83\xca\x15\x70\x29\x1d\x05\x80\x28\x76\xe5\xda\x84\xd1\xed\xf9\x18\x7d\x4e\x49\x19\xb0\xb5\xe6\xcf\x38\xee\xce\x1a\x59\xdb\xa0\x02\xc9\x8e\xe9\xc7\x44\x18\xbe\x81\x88\xa4\x2b\x9c\xfa\x04\x86\xc0\xc9\x37\xba\x72\x63\xe7\xec\xd6\xf1\x16\x4f\x8c\x46\x82\xf3\x81\x38\x47\xc7\xc7\x95\xc1\x7c\x31\xf5\x2c\x72\x12\x53\xb5\x23\x66\xae\x9d\xa9\xfe\x3f\x4c\xd3\x93\xb3\x70\xf8\x98\x68\x3f\xed\xa6\xfb\x1e\xd5\xb4\x0b\x54\x39\xf0\xba\x1e\xb5\x7d\x0e\x42\x01\xf8\x24\x80\x57\xab\xd5\xcf\x53\xaf\xfb\x73\x4f\x79\x6a\xa0\x95\xca\xfe\xcc\x54\x3f\x65\xd6\x15\xb1\xa4\x3e\x82\x92\x18\xdf\xf4\xbe\x93\x1e\xb5\x22\xb6\x09\xd0\x00\x9e\x70\x45\x50\xf7\x70\xcc\x60\xe5\x7d\xa7\xc5\xe9\xb4\x78\xe8\x63\x71\xef\xc7\x67\xac\xe1\x6a\xb5\xfa\xd3\x94\xf1\x3f\x0d\x19\x87\xf2\x2e\x12\x9b\x17\x74\x6c\x6a\x41\xf5\x7d\xbb\x51\x97\xc3\xe1\x59\x55\x67\xa6\x92\x1a\x3a\xd1\xdc\xbd\x75\x8a\x7a\xa1\x24\xbc\xa1\x63\xfa\x18\xbd\x32\x68\x81\xb2\xa7\x2d\x31\x71\xbd\xc4\xc4\x5f\xc1\x48\xeb\x32\x03\x7d\x53\xeb\x94\x14\x4b\xfb\x93\x82\x22\xbd\x31\xb4\x94\xbd\x15\xa8\xea\x32\xb5\xd9\xf7\x74\x76\x7a\xb2\xa7\xac\xe3\x2e\x18\x70\xfe\xea\x6e\x32\x08\xbe\x1b\x26\x62\x2b\xde\x71\x81\x97\xa1\x0b\x30\xa7\x9b\x9f\x2d\x57\x64\x9d\x54\x3f\xa6\x20\x95\xa3\x44\xef\x46\x45\x74\x0e\x2d\x2a\xe7\x5e\x54\xbe\x95\x1b\xf2\xe4\x09\x9d\xe3\x71\x68\x7b\x35\xaf\x45\x75\xc2\x4e\xf5\x4a\x82\x61\x38\x54\x42\x9b\x3a\xee\x72\x3a\x57\x28\xba\xda\x07\x4a\x2e\xa5\xca\x93\xd9\xfe\xf5\x60\xd9\x0e\x74\x37\xab\x91\x77\x93\xc1\x75\x85\xda\xaf\x5c\x7c\x8d\x5d\x1e\x80\x92\x6d\x9f\x9a\x20\x5e\x60\x8d\x83\x85\x35\x39\xca\xc3\xc8\x0a\x2b\x11\x54\x99\x92\x67\x60\xf6\xca\x59\x9a\x88\x8e\xcb\xa6\xda\x10\xa9\x04\x2a\x95\xe2\x24\x3b\xce\x2e\xea\x30\xb1\xe6\x25\x6b\xbd\x9b\x4c\xc1\x2b\x6c\x0a\x20\xec\x01\x7c\x38\xad\x50\xe4\x64\x86\xab\x3b\xcd\x47\x6d\xb8\xdc\x56\xac\x9a\x41\xfd\xa3\x4b\x4e\x64\xba\xf1\x50\x29\x3a\xfa\xb9\xdc\x89\x19\xcd\x51\xef\x47\x03\xa8\xf3\x87\x13\xbd\x28\x92\x0b\x2d\x47\x4f\xea\x95\xd3\x49\x76\x1a\x6b\xa5\x84\xa8\x3e\x45\x85\xc3\xd5\xd1\xde\xc4\x19\xbc\x9c\x57\x74\x77\x96\x56\x21\x36\xff\x1e\xc2\xdf\x5e\xad\xef\x27\x62\x58\xdf\x0f\xb4\xaf\x07\xcf\x30\xec\xa0\x9c\x35\x7b\x99\x1b\x67\x53\xaf\xcd\x1f\xe5\x08\xcf\x4d\xb7\x87\x89\x29\xa5\xd3\xb3\x6c\x0d\x2e\xac\x1e\x4a\x48\x60\x46\xe5\x86\xc4\x26\x59\x54\xb1\x24\x59\x22\x1d\xd6\x19\xb9\x09\xe5\xf6\x4a\x40\x1a\x8f\xb2\xdc\x76\x69\xa6\x1d\xf3\xec\x13\xf3\x8b\xbe\x7e\xd3\x13\x96\xd7\x17\x61\x79\x27\x44\x74\x5c\x9c\x72\x48\x55\x1c\xef\x3b\xdc\x93\x28\x4d\xf9\x4a\xb6\x3a\x65\xba\x88\x0e\x69\x40\xa1\xaf\x4f\xe9\x31\x74\xe3\x1a\x02\x50\xd0\x49\xc5\x69\x22\xa1\x49\xc9\x4f\x29\xc4\x0a\x87\x4d\xcf\x5e\xf1\x3d\xc5\xcc\x9f\xaf\x4a\x11\x8f\x9b\x8b\xf0\xf8\x73\x29\x96\xce\xec\xb0\x9c\x83\x48\x15\xde\xfe\x2d\x1c\xde\x5e\xc6\x61\x0c\x28\xa0\xef\x63\x8f\x62\xeb\x57\x60\x7c\xcf\x95\xa6\x28\x4a\x0d\x07\xad\x90\x6d\x4b\x37\xf4\x82\xd6\x87\x26\xcb\x38\xff\x8c\xd1\x37\x0d\x00\xb1\x0c\x12\xc2\x3a\x49\x1b\x54\x69\x05\xa0\xd6\xfe\x33\x01\x78\x77\x11\x00\x29\x1c\x7f\x3f\x00\x3e\x58\x2a\x94\xb3\xba\x07\x68\x7d\x3f\x19\xca\x9e\x80\x3a\xaa\x09\xef\x97\xc2\x91\x54\xe8\x62\x54\xa6\x3e\xb5\xc6\x44\xed\xb9\x38\xb0\xff\xb3\x67\xc5\x31\xcc\x25\x94\x04\xcf\x8c\x0d\xe8\x9d\x72\xbf\x9f\xf9\x48\xb7\x61\x51\x6f\x63\x0a\xad\x5d\x3e\xb9\x73\x98\x1a\x0b\x38\x83\xd0\xb1\x0b\xa5\xd7\xdf\xd2\xed\xf9\x36\xe5\x59\xec\x24\x2f\x83\xb7\xca\x69\xcb\x63\x4a\x66\x46\xcb\x98\x98\x57\xc5\xc7\x84\x8e\x23\x82\x47\x5e\x2b\xbf\x96\x7b\x42\xc5\xef\x52\xdb\x7b\x1c\x00\xcf\x18\x14\xcc\xf0\x79\xb5\x9e\x6c\x70\xad\xaf\x8f\x64\xb4\xc2\x3a\x33\x8f\xb2\x57\x3b\xab\xe6\x37\x1e\xe7\x76\x7f\x04\x3d\xed\x2b\x03\x1d\x47\x31\x61\xb5\x86\x3c\x44\x8f\x1e\xb0\x84\xce\xab\x79\x0d\xf5\xad\xb4\xf5\xfd\xec\x50\xe6\x3c\x61\x89\xff\x82\xec\x44\x2f\x72\xfb\x49\x20\x0f\x7f\x44\x30\x09\xdf\x0d\xe3\xe6\xd0\xe0\x51\xc0\xc5\x2e\xd3\xf9\x96\x7d\xfc\xd6\xa1\xa1\x85\xf4\xb8\x09\x65\x55\xee\xc7\x12\xaa\x7c\xce\x0b\x40\xa6\x0a\x6d\x4c\xb2\x75\x79\xfe\x71\x34\xe7\x48\x94\x97\x66\xfe\x5b\xf6\x25\x22\xed\x99\xd4\xfa\x54\x1a\x31\x14\xda\x95\x09\x60\x24\x1e\x12\x1d\xa6\x51\xa5\xd3\xf3\xe2\xe4\x69\x64\x22\xd5\xd3\xf3\xeb\x42\xe8\xc6\xfe\x23\x98\x96\x4e\x00\xc8\xab\xf5\x64\x39\x6c\x3d\xac\xf6\xac\xcb\xdb\x75\x0e\xba\xea\x49\x39\x1a\x01\x2f\x5c\x96\x89\x07\x99\x46\x7d\x3e\xf4\x7b\x9d\x97\x59\xdf\x64\x15\xac\x22\xb4\xd7\xc5\x6c\x7e\x53\xca\x7e\xa7\x8d\xc0\x3a\x3f\x44\xb5\x40\xc4\x61\xa2\xc5\xa3\xde\xf5\xc8\x3e\xf1\xef\x06\x50\x0d\xad\x4b\x6d\xb9\xfe\x15\xee\xd9\x13\x68\x8d\xff\x4e\xed\x87\x0a\xd3\xbe\x6f\x98\xd2\x4e\xf4\xce\x47\x12\x46\x92\xc0\xa7\xdf\xe7\x5d\x16\x85\xa6\x9c\x23\xf7\xd7\x50\x2d\x9e\x27\xef\x63\x45\xf9\x51\xaa\x7b\xb5\x9e\x2c\x55\xad\x6f\xeb\x68\xdd\x81\x2b\x4b\x90\x73\xea\x72\xc2\xfb\x69\xd5\xaa\x3c\x2b\x3a\xe1\xaa\x0b\x63\xd9\x20\x7d\xdd\x5f\xcb\x8e\xfe\x12\x4e\xae\x97\x38\x99\x53\xf5\x73\x96\x9f\xd3\x26\xb3\x9f\xa7\xfd\xfb\xf4\xfd\x76\x92\x09\x3f\x43\xed\x19\xc5\x21\x35\x24\x41\x8f\xab\xc4\x25\xd4\x5f\xa0\x29\x93\x9d\xac\xf5\xbb\xf1\x4c\xf1\x4b\x72\xdb\xcf\x4f\xd7\x69\x49\x64\x24\xea\xb2\x09\x82\x7f\x48\xc9\xc4\x38\x10\x4c\xa6\xc3\x65\x16\x4f\x9b\xdb\x94\xf6\xc9\x79\x3e\xa9\x0f\x08\x7b\x05\x4f\xa9\x35\x4f\x33\xb7\x6c\x8b\xcd\x90\x4a\xf5\x73\x69\xeb\x18\xb5\x1a\x9d\x35\x4a\x30\x61\x3b\x95\x40\xa4\x31\xcc\x04\xc0\x09\x85\x2f\x0a\x1b\xf7\x9b\x6a\x7f\x44\x82\x51\x20\x9b\x69\xd8\x76\xc5\xc8\x41\x0e\x9f\x3d\x18\x95\x27\xa7\x0e\xb8\xcf\x8c\x92\xd7\x4a\xff\x45\x4e\xab\x44\xc7\x97\xa6\x43\x93\x45\xb5\x45\x71\xb7\x60\xe4\x33\xbd\xd0\xbc\x29\x88\xf5\x14\x3e\x9d\xf6\x47\x78\xd7\xe1\xcf\xf3\x92\xeb\x37\x50\xea\x3f\x66\x81\xd1\xc6\xce\x71\x72\x33\xf2\xe7\x04\xc6\x91\xa3\x51\x4e\x96\xa5\x46\x82\x28\x7d\xcc\x10\x20\xef\x1a\x7c\x0f\x5e\x49\x98\x23\x47\x5f\xf6\x23\x73\x50\xfe\x71\xe2\x7d\xa1\x40\x27\x8b\x6f\xeb\xf7\x75\x4b\xaa\x0f\x57\x0f\x84\xd2\x9a\xbb\x70\x40\xa7\x93\x93\x8f\x67\x16\x41\x34\xb9\x9b\x65\x0f\x5f\x01\x5f\xf9\xca\x69\x8e\x59\x7a\x32\x05\x9d\xdc\x41\x5e\xca\xed\xfa\xd0\x38\xe4\x48\x2f\x46\xe6\x7a\x01\x99\xbb\x21\xf3\x1c\xc0\x38\xb9\xa3\xed\xa0\x5f\xc3\x2d\xd1\x83\xf7\xc5\xe6\x50\x6a\x8e\x0a\x4d\x07\x58\x65\x52\x36\x31\xdc\x37\x70\xf5\xa3\x1d\xf9\x64\x25\xad\x62\xf7\x2f\xf5\xee\xc1\x7f\x84\xe1\xb4\x3c\x50\x2c\xb0\xb3\x0e\x7f\x1e\xad\x40\xd4\x38\xbc\x1a\xea\xc1\x47\x87\x05\x0b\xf8\xd7\x3f\x1c\x9c\xdb\x25\x5d\xa8\xbe\xd4\xba\xd8\x4a\x4a\x6e\x57\x6a\xdc\xe1\x3b\xaa\xbc\xda\x53\x0f\x81\x6c\x1e\x58\x8f\xcc\x66\x67\xd3\xd0\x7a\xd8\x44\xfb\x61\x5c\xbf\x9d\x1d\x5c\x8d\x96\xc0\xff\xf9\xf7\x7f\x24\xa1\xaa\xf4\x75\x1d\xd6\xf6\x1d\x38\x65\xa5\x12\x79\xdd\xff\x0d\x26\xd0\xe8\x9d\xa9\xfa\x21\x69\xd3\x0c\x7c\x6e\x4f\x7c\x33\x7c\xb1\x83\x90\xbf\x3b\x47\x1f\x5f\x8c\xf9\xe5\x58\xa3\x8b\x7a\x1e\x67\x63\x69\x9f\x25\xd4\xdf\x3a\xa5\xdf\xf6\xd9\x9d\x71\x11\x62\xca\x2b\x7c\xf4\x79\x63\x79\x51\xb9\x17\xf4\x38\x57\xb7\xa6\xea\x0f\x95\x65\xd4\x6c\x2e\x98\x12\x55\xba\x39\xac\x02\xe6\x5d\xa3\x12\x49\x8f\xba\x59\x50\xed\x6d\xcf\x4e\xf9\xa7\x63\xdf\x4b\x4d\xe9\xfd\x82\x5c\xeb\x66\x17\xf2\xfd\x7d\x72\x1e\xf5\xc4\xea\x63\x8b\x8f\xc8\x5b\xe2\x65\xcf\x01\xf1\xa2\x9d\x98\x69\xa2\x89\x95\xf7\x36\x6a\x3e\x0c\x47\x49\x3b\x5e\xce\xff\x87\x25\x57\x92\x3e\x42\xcc\xdf\x74\x5d\x58\x5a\xf5\xec\x8e\x53\x89\xa4\xb4\xa6\x7c\xe0\x98\xcf\xa6\xea\x6a\x4e\x7f\x77\xa0\x65\xe9\x28\x94\xe8\x59\x12\x90\xfa\x5c\x34\xfc\xf9\x92\xb5\xdf\x60\x3b\x7a\xbe\x4f\xb1\x5f\x86\xdb\x64\x75\x6d\xfd\xa1\xc6\x8d\x66\x13\x2f\x40\x2d\xd7\xce\xd3\xf1\xdf\x10\x9e\x62\xf7\x26\xd8\x37\x92\x7e\xae\xc2\x17\x85\xb5\x34\x8e\xfa\x91\x61\x66\xb2\x28\xb2\xfe\xf9\xf9\xf2\x2f\x06\x60\x9f\xc1\x5b\xfd\xec\x92\x4b\xb5\xca\x52\xfa\xdf\xb9\x16\x12\x40\x6b\xd9\x4d\x59\x41\xa2\x9f\x1d\x1e\xba\xef\x3b\xe4\x43\x22\x5d\xba\x93\xae\xbf\x35\x2d\x75\x52\x7f\x25\xed\x9f\xb4\x9d\x46\x2c\xfd\xd0\x9d\x8a\x98\x0d\xcc\x74\xf3\x2a\x73\xca\x5f\x5d\x51\xf0\xa0\x0f\x43\xfb\x51\x78\x15\x62\x5e\x16\xc8\x56\x7d\xd2\x5d\xbb\xf7\xe1\xf3\xd0\xb2\x90\x55\xbd\x5b\x15\xa2\xa3\x4f\xa3\xd0\xc7\xb6\x5c\xd2\x2c\x05\x23\x99\x99\xe9\x68\xff\x2b\x00\x00\xff\xff\x3d\xcd\xda\x58\xb1\x3f\x00\x00")

func complySoc2StandardsTsc2017YmlBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2StandardsTsc2017Yml,
		"comply-soc2/standards/TSC-2017.yml",
	)
}

func complySoc2StandardsTsc2017Yml() (*asset, error) {
	bytes, err := complySoc2StandardsTsc2017YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/standards/TSC-2017.yml", size: 16305, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2TemplatesDefaultLatex = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x59\xdd\x6e\xec\xb6\x11\xbe\xd7\x53\x10\x88\x8c\x1e\x03\xbb\x86\x7d\x8a\x16\x45\x80\x0d\x82\x9e\xfc\xb4\xc9\x1e\x24\x70\xdc\x22\x80\xe5\x0b\x4a\x1a\xad\x88\xa5\x48\x85\xa4\xec\xdd\x12\xba\xe9\xf3\xf4\xa9\xfa\x24\xc5\xf0\x47\xa2\xb4\xeb\x5e\xb4\xe7\xe2\x2c\x35\x33\x9c\x19\x0e\x87\x9c\x6f\xe8\xa2\x96\xd5\xd0\x81\x30\x15\xa7\x5a\x3f\xe7\xac\xf9\xd0\x48\x61\x34\xfb\x07\xdc\xe6\x79\x1c\xe6\x9b\x1c\x44\xcd\x9a\x1c\xf9\x9c\x8a\xc3\x6d\x9e\x97\xb4\x04\xbe\xc5\x8f\x05\xb7\xa7\x3d\xa8\x30\x7d\x1a\xfb\xd1\x24\xd6\x48\xf5\xc1\xd9\x93\xbd\x61\x52\xdc\xe6\x79\xf2\x95\xe7\x1a\x7a\xaf\xb2\x91\x2a\x7f\xb1\xf9\xc2\xc5\x7c\xcc\xd0\x4c\x09\xb4\x03\x45\x95\x61\x15\x87\xdb\x3c\x2b\x06\x0d\x3d\xad\x8e\xf4\x00\x76\xc1\x1b\xc9\x0d\x11\x00\xb5\x26\x46\x92\x12\x08\x97\xb4\x86\x9a\x34\x4c\x69\x93\x05\x87\xb2\xb8\xec\x86\x76\x8c\x9f\x97\xea\x9e\x9d\xbb\x33\xd7\x7b\xa9\x43\x74\x16\xb4\x4b\xd7\x67\x11\xf4\x1b\xb8\x86\xa5\xab\xbc\x93\x35\x28\x31\x2e\x3c\xe1\x4c\x80\x36\x0a\x4c\xd5\xae\x56\xa6\xc1\xe8\x9e\x56\x30\x66\x05\x0e\xbd\x8c\xcd\x93\x09\xf9\xac\x2a\x9d\x48\x3b\xad\xcf\x5d\xb9\xa1\x9d\xee\xa8\x69\xc7\x05\x93\x35\x27\x30\x70\xda\xb0\x86\x0f\xd4\xc0\x69\xc9\x6d\xd8\x89\x9b\xd3\x47\x17\xc8\x5e\xc9\x57\x56\x83\x26\x85\x81\x93\xd1\x43\xa9\x2b\xc5\x7a\x93\x15\xac\x11\x43\x47\xee\x8b\xa0\x8a\x3c\x14\x0d\x2b\xa2\x3e\xf7\xb5\xbb\x27\x37\x84\x35\xa4\xaf\x1b\x03\xa7\x8c\x90\x45\x88\x43\xfc\x41\x54\x21\xae\x20\xaa\xdc\xc7\xeb\xe9\x21\x2c\xe8\xc5\x06\xc6\xb8\x9a\x3d\x98\xe6\x4f\x2f\x96\x89\x7e\xf0\x5c\xd4\x06\x83\x92\xb7\xf9\x52\xd0\x22\x51\x9f\xbb\x24\x44\x68\xc1\xfb\x15\x5c\x95\x8a\x9c\x80\xd3\xe0\x62\x58\x4e\x46\xc8\x52\x11\xc6\x50\xf7\xe0\x3d\x41\x1d\x17\x12\xee\xe4\x44\x89\x86\xe1\xff\x35\x34\x74\xe0\xc6\xa5\x04\x50\x33\x28\xd0\x76\xcf\x0e\x7e\xb4\x7b\x82\x5f\x37\xbf\x54\x94\xc3\xee\x33\x35\x55\xbb\x97\x6f\xa0\x2a\xaa\x61\xcc\x96\xf9\xc7\x40\xfb\x75\x09\x78\x9b\xb3\x2b\xc9\x34\x06\xfa\x4e\xd0\x0e\xf2\xf1\x79\x49\x8c\x49\xfa\xb2\x12\xc6\x8f\x90\x36\x98\xb5\xab\xf0\x09\x78\xab\x64\xd7\x51\x51\xdb\x02\xa9\xa3\xfd\xf7\x3f\xff\xb5\xcc\xd7\x8e\x32\x81\x4a\xdc\x04\x42\x30\x35\x23\xc9\x1f\x9e\xf8\x35\x1f\x9d\x15\xe5\xf2\xe0\x44\x81\x7c\x69\x4a\x53\xa1\x57\xa6\x22\xc9\x9b\x8a\x5f\xb3\xa9\x15\xe5\xd2\x54\x14\x58\x99\xea\xa4\x90\xeb\x55\x05\xd2\xf3\x67\xda\xf7\x4c\x1c\x76\x06\x4e\x5b\x2a\x34\x4b\xe5\x27\xcb\x1b\xbf\xf6\x35\x39\x5f\x51\x56\x0e\x4d\xc9\x3e\xc9\xad\xfd\xa2\xa6\xbd\x88\xb6\x27\x7d\xf8\x86\x1d\x98\xd1\x9b\x3d\x35\x4c\x6c\xbe\x57\x00\xc7\xdb\xb8\x03\x5e\x22\xdd\x81\x05\xe5\xda\x0e\x78\x81\x95\xf9\x4f\x3f\xfc\xb8\xde\xef\x24\xed\x4f\xf0\xe9\x87\x1f\xc7\xc9\xb1\x44\xd8\xfb\xf1\xe9\x87\x1f\x67\x17\xe6\x8f\x4b\xeb\xc9\xcc\xf4\x4a\x6b\x58\x76\x43\x06\x0d\x64\xe8\x7f\x1b\xa4\x01\x3c\xb9\xf4\x95\x32\x4e\x4b\x0e\x1b\xd2\x48\x45\xb4\x51\x94\x1d\x5a\x43\x9c\x80\x26\x4c\x90\x57\x50\x25\x35\xac\x23\x20\x5e\x99\x92\x02\x8b\x89\xce\x8a\xbf\x36\xdf\x31\x0e\xdf\x9e\x98\x36\xda\x06\x85\x77\xda\x9c\x47\x9b\x2e\x29\x30\xc6\xd1\x8e\xc1\x76\xc7\x2a\x25\xcd\xb9\x5f\x5a\x5f\xe9\x9b\x84\xbc\xc6\x9b\xcb\x92\x32\x49\x24\x9b\xb2\x22\x5d\xc4\x65\x12\x18\xb3\xe2\x6f\x1a\x3e\xc7\xcf\x5f\xc0\x3c\xf7\x4a\x1a\x35\x68\x26\xc5\x8b\x2d\xa9\x66\x95\xbb\xe9\xc9\x0d\xa9\x99\x46\x07\xc9\x2c\xe0\x02\x65\x0c\x71\xb7\x54\x86\x2b\x2b\x7e\xa6\x5a\xff\xe4\xad\x3e\xc9\x9f\xc3\xda\xdb\x73\xdf\x82\xd0\xa3\x1d\x14\x47\x4d\x83\xe2\x84\xe9\x58\x43\xcb\x33\x69\xcf\x3d\x28\x05\x8d\x4b\x8d\x18\xe6\x2d\x13\x5b\x21\xcd\xba\x2c\x37\x54\x54\xe7\x57\x55\x5e\xad\x50\xcf\x83\x60\x95\xac\x61\x67\xd4\x00\x2f\x36\xea\xf5\x97\x79\x25\xb9\x54\x9c\x89\x23\x5e\x7d\xd7\x3d\x1d\x34\xe0\xa5\xa7\x37\xf5\x2b\xeb\xb5\x1b\x8e\xd6\xcd\x43\xbf\xdd\xe0\x3d\xcf\xa3\x33\x8e\xa2\xc1\x0c\xbd\x75\x56\x0d\x33\x1c\xb6\x1d\x18\x1a\x12\x3d\xfe\xc3\x12\x86\xbc\x9d\xcd\x67\x99\x7c\xdc\x2c\xce\x09\x1d\x4c\x2b\xd5\x3b\xd3\x3d\x73\x67\xf3\x44\x6a\xad\xe0\x08\xe7\x37\xa9\x6a\x7d\x39\x3b\x72\x76\xd6\xe5\xd1\x2c\x98\xc7\x61\xc8\x1b\x12\x13\x67\xa5\x7a\x11\xcf\x54\xf9\xcc\x70\xfb\xb0\x59\x30\x91\xee\x04\x76\x01\xa4\xf8\xaf\xdb\x3c\x9f\xc6\xa1\x64\x7f\xa6\x4a\x4a\x11\x2c\x2e\x95\x54\xcc\xc0\xac\x64\xfa\x42\x08\x18\xc7\x41\xc9\x9f\xf9\x00\x57\x55\x0c\x8a\xcf\x1a\xe2\xc7\x6d\x9e\xc7\xe1\xb5\xf9\x01\x7a\xad\x02\x59\x4a\x55\x83\xda\xd9\x7b\x72\x4f\xee\x93\x18\xa5\x62\xa5\x02\x7a\x9c\x43\x82\xd8\x48\x71\x6d\xce\x1c\xac\xa6\x1d\x8c\x04\x0f\x98\x14\xbf\x33\xfe\x6a\x90\x42\x3a\x84\xe6\x8e\x96\x3b\x66\x28\xfe\xee\xf1\xf8\x7b\xa0\x7d\x27\xa5\x11\xee\xba\xba\x21\x94\x73\xf9\xa6\xe7\x4b\x0b\xa1\x16\xde\x62\x4d\x94\x59\xec\xe5\x01\x64\x07\x46\x5d\x05\xad\x33\x2f\x8f\xc3\x8b\x1b\x25\x32\x56\x10\xd4\x61\xfc\xff\x1b\xd7\xe9\x56\x2a\xd3\x52\x51\xeb\x9d\x6c\x1a\x5f\x10\x7d\xdf\x20\x4d\x0b\x0a\xad\xe8\xa9\x95\x98\x49\xb3\x7f\x58\x03\x76\x69\xab\x81\x57\x5b\x09\x3c\x34\x01\x8e\x3e\x23\x14\x9f\xce\xf9\x05\x39\x5f\x02\xbe\x15\x2a\xec\x25\x3f\x1f\xb8\xd4\x9a\x51\x87\xd6\x02\x7c\x41\x73\x83\x0b\x65\x22\xe0\x9c\x48\x91\xd4\x05\xcf\x43\x2f\x0f\xda\x52\x66\xba\xe0\x60\x65\x22\x5d\x9a\x99\xa5\xdf\x33\x96\x48\x44\x93\x11\xc0\x61\x95\x4c\x37\x53\x50\x53\xb2\x72\x75\x1b\x7b\xe2\x98\x15\x25\x2b\x39\x93\x07\x45\xfb\xf6\xec\xf3\xda\x85\xd6\x51\xb7\x8e\x80\x3b\x94\x7c\x86\xf3\xd5\x73\xca\x84\xa0\x26\x58\x5a\xe6\x0f\xca\x63\x8a\xac\xb3\xf2\x42\xb3\xfb\xd9\x2d\xf5\x2f\xfa\xc4\xa8\x69\x2e\x92\x2b\xca\x45\x46\x47\x7e\xd8\x84\x74\x7d\xe8\x0e\xad\xeb\x92\x95\x0a\xb4\x1c\x54\x05\x36\x4f\xf9\x0b\x18\xbc\xe8\xc8\xb4\x61\x7e\xeb\x16\xdd\x5b\x20\xaf\xce\x4e\xeb\xe4\xb8\x36\x02\xde\x12\xc4\x61\xb1\xbe\x8d\x16\x19\x1a\x8c\x8d\x1b\xbf\xfb\x0b\xd5\x47\xe0\x7c\xe3\x6a\xb6\x8f\x47\xa1\x3b\xca\x79\x61\x02\xba\x77\xd8\x23\x35\xd1\xb2\x43\xcb\x11\xe4\x30\x71\xd8\x76\xb4\x52\x12\x4d\xe6\x57\xc8\xcb\x75\x18\xc4\x01\x17\xab\x90\xe2\xe0\x18\x9b\x52\xca\xa3\xa1\xa5\x46\xa0\xf3\x1d\x3b\xcd\x37\x0e\x5e\x3f\x7e\x2e\xf9\xa0\xe0\xb7\x81\x29\xd0\x13\x97\x04\x45\xb7\x2b\x04\x14\xf9\x97\x90\x2a\x72\xc6\xa2\xa3\x47\xd0\xf4\x15\xf0\x0b\xc4\xab\xf3\xc5\x5b\xba\x58\xb3\xdb\x21\x56\xad\xbd\x0f\xe4\xd3\xe6\xa0\x9a\x86\x71\xbc\xa0\x51\x29\x35\x1c\x8c\x01\x95\x61\xdb\x55\x74\xf4\xf4\xc6\x6a\xd3\xda\x82\x35\x35\xeb\x8a\xef\x99\xf8\x5a\x50\xf3\xb5\x23\x7e\x55\x60\xff\xec\x86\xc9\x08\x73\x7c\x29\x57\x34\x6c\x9c\xd4\xb5\x80\x71\x5e\xeb\xf3\xd4\xaf\x5c\x77\xec\xc7\xe9\x70\xa1\x32\xd0\x9c\x4e\xef\xb0\x3b\xd1\xd9\x0d\x71\x5d\x20\x61\x1d\x3d\x60\xe0\x1b\x22\xa0\x02\xad\xa9\x3a\x6f\x88\x96\xc4\xb4\xd4\x10\xd3\xc2\x99\xbc\x31\xce\x89\x90\x86\xc8\x57\x50\x0d\x97\x6f\x48\x26\x3d\x3d\x40\x76\x43\x3a\xaa\x0e\x4c\x68\x44\x3a\xa1\xef\xdc\x10\x2a\x6a\xc2\x0c\xc2\x20\x6d\x70\x6e\x8f\x37\x09\x02\x43\x23\x9d\x8e\x37\xc5\x0c\x38\x25\x61\x8a\x76\x80\x97\x89\x03\x81\x53\xcf\x59\xc5\x0c\x09\x87\x0e\x13\xa2\x60\xa2\xe2\x43\x0d\x71\x63\x9e\x5d\x94\x36\xc4\xaf\x6c\x43\xee\xee\xee\x5e\xac\x7f\xa9\x38\xc2\x59\xdb\xef\x99\x18\xad\x93\xd9\x4d\x1b\xb2\xf1\xc2\xbb\x39\xa4\x9b\x23\x40\x4f\xb1\x75\x36\x8a\x1a\x26\x2f\x9e\x46\x8e\x7a\x4b\xb5\x2b\xa0\x98\x0a\x37\xe4\x33\x3d\x82\xc3\x26\x7a\x91\xaf\xda\x00\xad\x89\x6c\x48\x2b\x8d\xe3\x7e\x99\x15\x0a\xd2\x6e\xb6\x45\x7c\xf9\xfc\xf1\xc5\x7e\xf1\xb1\x88\x33\x2d\x56\x77\xfb\xc5\xc3\x38\xae\xfa\x4e\xa3\xd8\x11\xe4\x60\x56\x17\x9a\x90\xaa\xa3\x1c\xba\x17\x3b\x70\xe8\xf0\xdc\xd0\x57\xc9\x6a\x84\xda\x25\x87\x4e\x93\x37\x66\x5a\x52\x68\x39\xb8\x12\xde\x02\xad\x41\x05\x6a\x44\xa0\x5f\x66\x45\x5f\x37\x68\x41\x1c\x6a\x68\xbe\xf1\x68\xfd\x53\xa8\x5d\x76\xe5\x35\xaa\x1a\xed\xca\x3d\x26\x6a\x70\xfd\x58\x7c\x62\x5a\x1c\xc4\x9e\x2a\x7d\x64\xfd\x95\x46\x24\xb2\xc6\x6c\xb4\x37\xc4\xd5\x46\xdc\x2e\x0e\xe2\x80\x87\xa5\xa7\xca\x6b\x1e\xed\x7d\x6f\xc6\x35\xcf\xcd\xb4\x7f\xec\x0d\xe9\xf9\xa0\xc9\xc7\xde\x90\x8e\x89\x41\x93\x07\x14\x4e\x60\x7e\x32\x0d\x3a\x50\x07\x10\xd5\x39\xbc\x57\x8d\xf6\xf7\xd0\x39\x10\xd5\x2b\x78\x05\x11\xb2\x79\xe0\x9c\xb8\x57\xad\xac\x08\x6f\x4e\x53\x00\x0c\x66\x09\xde\xbc\xb8\x16\x5f\x48\xa3\x72\x66\xa0\xd3\xd0\x7b\x6f\xaf\x3a\x8b\x0c\x8f\x1d\xc4\xd0\x95\x08\xf7\xab\x50\x56\x9c\x97\x95\x1c\x84\x01\x65\x35\x54\x62\xe8\x6a\xe8\x4d\x3b\xba\x72\x98\x10\x6e\xb1\xe0\x4c\x5f\xa1\x18\xfe\x21\xa9\x82\x7e\x07\xde\xd3\x76\xbf\x4a\xac\xa1\xec\xa9\xa2\xee\x0c\xcd\xfb\x77\x43\x1e\xa1\x86\x06\x03\x40\x50\xe4\x76\x92\x09\xcf\x98\x2d\x7d\x45\xb0\xa9\x30\xf3\x8f\x40\xe2\x32\x10\xb0\x9d\x8a\x49\xb8\x18\x84\xd7\x52\x7b\xdc\x53\x70\x30\x85\xe4\xf5\x2c\x30\x8d\xd6\x87\x63\x62\x8c\xcf\x0f\x2f\x76\x31\x09\x8f\x47\xd1\x95\xf2\x84\x59\x88\x58\xc3\x19\x4d\x17\xf2\x9e\xdd\x85\x4c\xfa\xb1\xb6\x9e\xf2\x26\x07\x52\xe2\x85\x0f\x69\x4c\x6b\xa6\x3c\x76\x8d\x8f\x77\x37\xae\xef\x23\x25\xab\x19\xa1\x9a\x20\x3a\xc0\xdf\xe9\xfe\xa3\x1a\xef\xc5\x4e\xd6\xac\x61\xa0\x09\xdc\x1d\xee\x48\xac\x2b\x08\x28\x1d\x20\x36\x70\xda\xd6\x4c\x6d\x95\xe1\xeb\x87\xc5\xe7\xc7\xa7\x7d\x7c\xa4\x46\xfc\x51\x33\x04\x92\x53\xcf\xb1\x78\x9b\x9e\x98\xf3\x8b\xc6\xff\x84\xb2\x9f\xe0\xd7\x5f\xe1\x49\x1b\x6a\x60\xf7\xb0\x7e\xa8\x7b\xdc\xfb\xa8\x95\x70\x60\xe2\x91\x7c\xf1\x50\x80\xa8\x1f\xc7\xb5\xd8\xfe\x31\x11\xdb\x07\xb1\x7d\x14\x4b\xa1\xcb\xe3\xd3\x7e\x8c\xea\x46\xbb\xd0\x96\x8a\xed\x9f\x1e\xa3\xd8\xde\x8b\xed\x97\xdb\x93\xdd\x10\x0d\x26\xd6\x17\xd2\xb0\xc3\xa0\x80\xf4\x9c\x56\x80\x0a\x30\xb9\x5b\x53\xf6\xd7\x6a\x78\xd3\xeb\xaf\xbd\xbc\x45\x91\x55\xd9\xf4\xb0\xc8\x5d\xaf\xdb\x50\x97\xd6\x48\xc1\xbd\x3f\xb4\xb5\x1a\xb3\x02\x8b\xa4\xc7\xba\x8e\x88\x3e\x3a\x26\xd0\xda\xa6\x1f\xcf\x8f\x3f\x6d\x1e\xbf\x7d\xb1\x39\x7e\x6c\x2b\xf7\xfc\x6c\xf2\x28\x81\x45\xe3\x79\xff\xd3\x66\xff\xad\x7b\x52\x95\x26\x91\x98\x16\x3c\xbd\x24\xa0\x37\x6e\x10\x5e\x0d\xdc\x5f\x4b\xb0\x39\xc2\x2e\xbc\xf0\x03\x9b\xfb\xdf\x7c\xbc\x8a\xaa\xf5\x50\x4e\xaa\xd6\xd7\x62\xe4\xb9\x1d\xc5\xab\x3a\x7c\xdb\x3c\x8e\x56\xca\xfc\xd3\x83\x43\xc4\x6e\xe4\x1f\x13\x22\x35\xbc\x4c\x78\x70\x4d\x0a\x84\x0e\xd3\x63\xc2\xaa\xf4\x68\xc3\xcc\x60\xae\x3a\x35\x31\xa3\x57\x13\xc1\x5b\x4b\x26\xe7\xd3\xf8\xbf\xdb\x2c\x6a\x8a\xb3\xf1\xff\x7c\xcc\x32\x9f\x6c\x36\x9e\xbe\x71\x19\x6f\xcc\x10\xf7\xb1\x5c\x79\xa9\x8d\xa2\x95\xab\xe5\x7e\x7a\xa4\x8c\x59\x1e\x87\xd8\x2b\x8a\x3a\xe5\x4c\x3b\xea\x3d\x77\x39\xb6\x2d\xa1\x91\x0a\x6d\xe5\x4b\x0a\xca\xa5\x0f\xea\x46\x56\xb7\x79\x66\xaf\x3c\x67\x25\xcf\x4e\xcb\x17\x16\x23\xab\xf8\xb4\x11\x87\xa1\xda\x94\x9c\x56\xc7\x8b\x0c\x49\x4b\x8e\x91\x55\xac\x5e\x46\x56\x5b\x5f\xaa\xc6\xac\x70\xd0\x5a\x36\x21\x4f\x75\xb6\x42\x57\xd2\xc5\x04\x8b\xab\x6c\x3c\xde\x5f\xf1\x9b\x99\xef\xcf\x62\x22\x50\xca\xfa\x1c\x12\x7e\xea\x38\xe7\x86\x6f\x6a\xc0\x92\x1e\x30\xee\x93\x23\x49\x79\xdc\xba\xbf\xf0\xa1\x89\xb4\x1c\x60\x87\x8a\x2d\x6e\x6c\xd5\xb6\x73\x36\xfb\x52\xbb\x10\x56\xd0\xbc\x23\x1c\xdc\x8c\xd1\x4a\xdd\xb2\x57\x3a\xc5\x65\x63\xb8\x6c\x32\xc7\xec\x42\xdf\xba\xeb\xed\x15\x13\x66\xa1\xe2\x62\xdd\xcf\xfe\x15\x71\xe9\xe9\xcb\x9c\x67\x51\x73\x9a\x6f\xb4\x31\xa0\xd2\x74\x73\x84\x34\xdb\x5c\xda\xce\xe7\xe1\x3f\x01\x00\x00\xff\xff\xd4\x00\x0b\x92\xe1\x1d\x00\x00")

func complySoc2TemplatesDefaultLatexBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2TemplatesDefaultLatex,
		"comply-soc2/templates/default.latex",
	)
}

func complySoc2TemplatesDefaultLatex() (*asset, error) {
	bytes, err := complySoc2TemplatesDefaultLatexBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/templates/default.latex", size: 7649, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _complySoc2TemplatesIndexAce = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x59\x6d\x6f\x1b\xb9\x11\xfe\xee\x5f\x31\x50\x3e\x58\xc6\x45\x5c\x3b\x57\xb4\x87\xbb\x2e\x0a\xc7\xce\xa1\xc1\xf9\x62\xa3\x36\x0a\x14\x45\x51\x50\xe4\x48\x4b\x9b\x4b\x6e\xc8\x59\x39\x3a\xc5\xff\xbd\x20\xf7\x45\xab\xd5\xca\x32\x1a\xb9\x28\xce\x1f\x24\x8a\x2f\xf3\xcc\x0c\x1f\x0e\x67\xe8\x14\xa4\x15\xb4\x2c\x10\x32\xca\xf5\x51\xf8\x00\xcd\xcd\x3c\x45\x73\x04\x90\x21\x97\x47\x00\x00\x39\x12\x07\x91\x71\xe7\x91\xd2\x92\x66\x93\x1f\x62\x37\x29\xd2\x08\xab\x15\xbb\x71\xf6\x1e\x05\xb1\x4f\x3c\xc7\xa7\xa7\x38\xa6\x95\x79\x00\x87\x3a\x1d\x79\x5a\x6a\xf4\x19\x22\x8d\x20\x73\x38\x4b\x47\x19\x51\xe1\x7f\x4c\x12\x21\xcd\xbd\x67\x42\xdb\x52\xce\x34\x77\xc8\x84\xcd\x13\x7e\xcf\xbf\x24\x5a\x4d\x7d\x32\x2d\x75\xce\x93\x53\xf6\x47\xf6\x2e\x11\xbe\xfe\xcd\x72\x65\x98\xf0\x7e\x74\x50\x14\xff\xc8\x49\x64\x35\x96\xe7\x46\x7a\xb2\x06\xbb\x63\x9b\xb8\x5e\x38\x55\x10\x04\xcf\xa5\x23\xc2\x2f\x94\xdc\xf3\x05\xaf\x7a\x47\xe0\x9d\x78\x31\x7c\x6e\x73\x34\xc4\xee\x7d\xf2\x8e\xbd\x7b\xc7\x4e\x9b\x8e\x00\x77\x7f\x70\x34\xcd\x09\x5d\x72\xc6\x02\x50\x6c\xbf\x12\x4e\xe1\x90\x68\x29\x9c\x35\xc9\x29\x3b\x3b\x63\xa7\x9d\x9e\x0d\xc8\xc8\x2c\xc3\x73\x4c\x47\x0b\x85\x8f\x85\x75\x34\x02\x61\x0d\xa1\xa1\x74\xf4\xa8\x24\x65\xa9\xc4\x85\x12\x38\x89\x3f\xde\x82\x32\x8a\x14\xd7\x13\x2f\xb8\xc6\xf4\xac\x12\x93\x82\xf0\xbe\x6e\xad\x75\x8e\x1d\x10\x28\x5e\x46\x9f\x72\x29\x3f\x2c\xd0\xd0\x95\xf2\x84\x06\xdd\x78\x74\x79\xfd\xeb\x45\x05\x76\x65\xb9\x44\x39\x7a\x0b\xb3\xd2\x08\x52\xd6\x8c\x31\x4c\x3d\x81\x55\x2d\xa5\x23\xe7\x73\x89\x6e\x79\x8b\x1a\x05\x59\x77\xae\xf5\xf8\x98\x05\xc3\x8e\x4f\xd8\xcc\xba\x0f\x5c\x64\xe3\xb5\x10\xdd\x95\x00\x80\x9a\x29\x63\xd0\xfd\xf5\xee\xd7\x2b\x48\xa1\xf2\xca\x45\xf0\x0a\xd9\x5b\x72\xca\xcc\xc7\xdd\x29\x27\xed\xd2\xa7\xa6\xf9\x74\x72\x54\xb7\x1a\x10\xf0\x99\x7d\x1c\x07\x27\x76\xb1\x16\xdc\x81\x22\xcc\x3d\xa4\x6b\xcd\xe7\x48\x1f\x34\x86\xa6\x7f\xbf\xbc\xd0\xdc\xfb\x70\x64\xc7\xc7\x64\x8b\x89\xe1\x8b\xe3\x35\xde\xcc\x3a\x18\x47\x19\xe9\xe9\x4f\xa0\xfe\x1c\x45\x31\x8d\x66\x4e\xd9\x4f\xa0\xbe\xfb\x6e\xd3\xae\x06\x0d\xd2\x0a\xf4\x9f\xea\x5f\x9d\x51\x35\x83\x71\xe8\x66\xc4\xe7\x01\x10\xd2\x34\x85\xd1\xd5\xc7\xd1\xa6\x10\x80\x24\x01\xc3\x17\x6a\xce\xa3\x5d\xc4\xa7\x7e\x63\xb8\x95\x23\x82\xea\x61\x1b\x59\xe0\x0a\x57\xc6\x57\xf6\xf7\xe5\x01\xf4\xa6\x73\x29\xc7\xc7\xca\x4f\xb8\x20\xb5\xc0\x8e\xbd\xd1\xb5\x80\xda\xe3\x3e\x11\x0e\x73\xbb\xc0\x67\xa4\x1c\xed\x91\x98\x24\xe0\x31\xee\xdc\x0e\xeb\x94\x8c\x0e\xea\xef\xe8\x3e\x6d\x32\x25\x25\x9a\xff\xca\xa6\xc6\x2d\xc3\x22\x8e\x86\xda\x4d\x2b\x7c\x4f\xad\x5c\x56\x11\xa4\xb2\x8b\x65\xe8\x2c\x53\x7e\x52\x38\x95\x73\xb7\x0c\x4d\x9f\x73\xad\xeb\x35\x71\x7c\xd2\xae\x8a\x5d\xf5\x46\xa2\xeb\xa0\x65\x67\xec\xb9\x3b\xa6\xfa\x2b\x98\x2f\xa7\xd5\xb4\x1b\xab\x95\x58\xbe\x85\x1b\x67\x05\xca\xd2\xe1\x5b\xe0\x46\xc2\x79\x29\x15\xc1\x2d\x71\x2a\xfd\x86\x06\x33\x6b\xa9\x95\x64\xf8\x82\x05\xc6\x05\x65\xa7\xf6\x0b\xca\xd0\x98\x95\x5a\xc7\xc0\xd3\x01\x1c\x54\x15\xa0\xd4\xd1\x4c\xf5\x1b\x4e\xfe\xd0\xf3\xb6\x56\xac\x3e\x61\xcc\x2e\xd0\x85\x48\xd7\x9b\x01\xe0\xc9\x59\x33\xdf\xea\x06\xe0\x60\x8d\xd0\x4a\x3c\xa4\xa3\x75\x68\xfb\x31\x9e\xf9\xe3\x46\xda\xf1\xc9\x08\xae\x87\x25\x77\xb0\x0d\x77\x8e\x07\xc6\xfa\xc3\xa0\xaf\xe5\x05\xfc\x4f\xbb\xa4\x77\x34\x28\xc2\x06\xa9\x43\xe1\x37\xd2\x02\xfa\xcd\xb0\xe4\x2e\x76\x43\x8a\x43\xa1\xb7\xf2\x22\xfe\x2e\xe9\x1d\x0d\x3c\x71\x23\xb9\x93\x07\x52\xa0\x15\x17\xf0\x6f\x77\xc8\x4e\xba\x0a\xe0\x42\x49\x34\x02\xb7\xe6\x3c\x0f\xd4\x2c\x0b\x38\x1f\xea\x36\xfc\x9d\x97\xba\x3a\x3c\x6f\x1a\x16\xb2\xe6\xf8\x37\x78\xed\x41\x61\xf5\x95\x5e\x03\x4f\xb5\x15\x0f\x9f\x4b\x4b\x6b\x4d\xb2\xef\xe1\x2e\x53\x1e\xbc\x22\x0c\x09\x80\xb7\x5a\x49\x4e\xe8\x81\x6b\xdd\x5e\x60\x3e\x24\x7b\x9c\x50\x02\x59\xa0\x6c\x77\x60\xc8\x9a\xb3\xc9\x84\xd5\x65\x6e\xe2\xa9\x5e\x08\x34\x84\x0e\x65\x37\xea\x84\xd1\x30\x68\x0d\x4e\x28\x53\x4e\x76\x9c\x23\xd5\x62\xc3\x55\xeb\x50\x13\x56\x7c\xcf\x32\xee\x27\x21\x4f\x9a\x34\x82\x21\x64\x13\xce\x6a\xb8\x73\x5c\x3c\xa8\xce\x96\x36\x48\x5b\x4b\x9e\x85\x0b\x19\xb8\x32\x73\xb8\xe5\xa4\xfc\x4c\xad\x01\x7c\x6f\x62\x54\xaa\xb7\xad\xab\x15\x0b\x31\xcf\xb3\x66\x4d\x2b\xa5\x13\x3f\xbf\x4d\xaf\x3b\x4b\x5c\x7f\x93\x4e\x51\x42\xab\xcf\xff\x78\xb7\xda\x43\x7b\xe8\xfd\x3a\x8f\x89\x01\xdc\x29\xf1\x80\xf4\x12\xbf\x70\x20\xee\xe6\x48\xe9\xbf\xa7\x9a\x9b\x87\xba\x84\x59\xad\xd8\x95\x32\x0f\x9e\xb5\x8a\x5e\x17\x68\x9e\x9e\x46\x5b\x91\xa2\xf5\x6b\x6f\xe6\x81\xec\xb9\xd6\x12\x3d\xd5\xf6\xbc\xc8\x9c\x01\x85\xa2\x8c\x4b\xbe\xf4\x4f\x4f\x20\xf9\xd2\x1f\x68\xcf\x9f\x35\x69\x8b\x05\x75\x32\x70\xe0\xfd\x0e\xce\x86\xbf\xe1\xe7\x12\xfd\x21\xb6\x3b\xea\xb8\x77\xab\x3b\xb3\x0e\x7a\x9c\x0f\x6c\xc7\xb9\xd6\xfb\xcd\x38\x58\x18\xe8\x0c\xd2\xa3\xad\x06\xfd\xb3\xee\x48\xa0\x70\x76\xee\xd0\x7b\xd6\x36\xd6\xa9\x2b\x2c\xb8\x2e\x31\xdd\xd4\xf6\x42\x5b\x1f\xa2\x28\xe4\xfc\x4b\xba\xdb\x90\x37\xeb\x04\xe9\xdb\xae\xc6\x6e\xb6\xbb\xe1\xc8\x2a\x6f\xd8\x95\x7a\x7d\x0d\x96\x85\xfb\x1a\xb8\x81\xe6\x92\x06\x3b\x8b\x37\xa7\x75\x73\x6e\xd4\x6f\x55\xa5\x15\xb2\xe4\xd0\x29\x6c\x5e\x68\xc5\xc3\xfd\x8e\x66\xa1\x9c\x35\xb1\x6c\xac\xa5\x12\x9f\x6a\x64\xd5\xe7\x76\xaa\x4b\xed\x73\x51\xfd\x7b\x33\x3d\xa6\x0c\xc2\x0d\xdd\xef\x3b\x0f\x95\xf3\x32\xef\x77\xdf\x5c\xfe\xbc\x16\xbc\x51\x28\x04\xe6\x38\x6e\xe6\x08\x6c\x6d\x36\x6c\x54\x04\x7d\x64\x19\xc8\xb6\x55\x37\x34\x03\xb5\x06\x5b\x63\x5b\x54\x8f\xe4\x5e\xad\xd8\x75\x49\x45\x49\x3f\x2b\x8d\x26\xca\xdc\x3c\x03\x43\x44\xef\xaf\xd8\x30\x06\x4d\x73\x1f\xbf\x69\x12\xda\xd7\x65\xcb\x60\xaa\xfc\x15\xe6\x81\x21\x26\xd2\x60\x8a\x19\x5f\x28\xeb\x02\x57\x5a\xd7\x01\xe6\x85\xb6\x4b\x0c\x29\x99\x91\xf1\x91\xc6\x71\x41\xd6\xf9\xff\x57\x7e\x34\x86\xfe\x5e\xd8\xd1\x96\x18\xaf\xcc\x8f\xe1\x52\x26\x44\x13\x0c\x75\xc1\x14\xc1\x17\x28\xd4\x4c\x09\xf0\x84\x85\x07\xca\x38\x01\x77\x08\xc4\x1f\xd0\x80\x32\xe0\xd0\x17\xd6\x78\x0c\x79\xfa\x03\x2e\x21\x3e\xa6\xbd\x2a\x51\x3e\x5e\xf6\x7b\x6e\x45\x86\xb2\xd4\x08\xe3\xb0\x87\x30\xb3\x2e\xe7\x74\xf2\x02\xda\xb4\xf6\x7f\x0b\x71\x3e\x5e\xf6\xba\x57\x2b\x35\x03\x76\xe1\xac\xd9\x9a\x1f\x9f\x0f\xc3\xa2\x81\xd1\xd5\x0a\xb5\x1f\x80\xb8\x36\x20\x31\xe7\x46\xf6\x67\x1b\xb9\x9b\x42\x6d\xc9\xf8\xba\x0c\x1a\x2e\x46\xbf\xd6\xb4\x59\xd6\x57\x4d\x55\x00\x80\x6f\x6b\x9b\xe9\xb2\x7f\x09\xc5\x0b\x99\xe7\xcf\xf2\x66\xf8\x99\x66\x3f\x89\x9a\x52\xed\x17\x5c\xbe\x84\x5f\x6d\xf1\xf4\x97\x9d\x23\xf0\x7e\xb9\x9f\x5d\x4d\xe1\xf3\x02\x6e\xd5\x53\x7f\xc1\xe5\xbe\xf0\x53\xfb\x7d\x98\x8f\x00\xeb\x17\xb2\xd5\x8a\x5d\x62\x55\xdc\xab\x01\xaa\x05\x86\x0e\x55\x89\x15\x68\xf4\x79\x29\x04\x7a\x0f\xff\xe8\x45\x87\x5d\x34\xfd\x64\xf7\xf0\x73\xc0\x9a\xd6\x57\xad\x2a\xef\xfb\x1e\x00\xe0\x2d\x03\xfe\xd4\xc6\xde\x97\x44\xdb\x2d\x41\xbb\x8f\x4c\xec\x9a\x59\x4b\xe8\x58\xf5\xb5\xce\x4f\xfb\x2f\x80\xcd\xb1\x79\x36\xd5\x2c\xba\xef\x15\xd7\x9d\x04\xac\xbe\x61\x2f\xac\x99\x29\x89\x86\x14\xd7\xf0\xee\xf4\xec\x87\xa3\x81\x7f\x68\x24\x49\x38\x21\x21\x2f\x43\x19\x9f\xe9\x25\x2e\x50\xdb\x22\x6f\x0e\x6d\xff\x69\xf0\x3f\x01\x00\x00\xff\xff\xb3\x50\xbc\x8c\xe5\x1b\x00\x00")

func complySoc2TemplatesIndexAceBytes() ([]byte, error) {
	return bindataRead(
		_complySoc2TemplatesIndexAce,
		"comply-soc2/templates/index.ace",
	)
}

func complySoc2TemplatesIndexAce() (*asset, error) {
	bytes, err := complySoc2TemplatesIndexAceBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "comply-soc2/templates/index.ace", size: 7141, mode: os.FileMode(420), modTime: time.Unix(1526514440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"comply-blank/README.md": complyBlankReadmeMd,
	"comply-blank/TODO.md": complyBlankTodoMd,
	"comply-blank/narratives/.gitkeep": complyBlankNarrativesGitkeep,
	"comply-blank/policies/.gitkeep": complyBlankPoliciesGitkeep,
	"comply-blank/procedures/.gitkeep": complyBlankProceduresGitkeep,
	"comply-blank/standards/.gitkeep": complyBlankStandardsGitkeep,
	"comply-blank/templates/.gitkeep": complyBlankTemplatesGitkeep,
	"comply-blank/templates/default.latex": complyBlankTemplatesDefaultLatex,
	"comply-blank/templates/index.ace": complyBlankTemplatesIndexAce,
	"comply-soc2/README.md": complySoc2ReadmeMd,
	"comply-soc2/TODO.md": complySoc2TodoMd,
	"comply-soc2/narratives/README.md": complySoc2NarrativesReadmeMd,
	"comply-soc2/narratives/control.md": complySoc2NarrativesControlMd,
	"comply-soc2/narratives/organizational.md": complySoc2NarrativesOrganizationalMd,
	"comply-soc2/narratives/products.md": complySoc2NarrativesProductsMd,
	"comply-soc2/narratives/security.md": complySoc2NarrativesSecurityMd,
	"comply-soc2/narratives/system.md": complySoc2NarrativesSystemMd,
	"comply-soc2/policies/README.md": complySoc2PoliciesReadmeMd,
	"comply-soc2/policies/access.md": complySoc2PoliciesAccessMd,
	"comply-soc2/policies/application.md": complySoc2PoliciesApplicationMd,
	"comply-soc2/policies/availability.md": complySoc2PoliciesAvailabilityMd,
	"comply-soc2/policies/change.md": complySoc2PoliciesChangeMd,
	"comply-soc2/policies/classification.md": complySoc2PoliciesClassificationMd,
	"comply-soc2/policies/conduct.md": complySoc2PoliciesConductMd,
	"comply-soc2/policies/confidentiality.md": complySoc2PoliciesConfidentialityMd,
	"comply-soc2/policies/continuity.md": complySoc2PoliciesContinuityMd,
	"comply-soc2/policies/cyber.md": complySoc2PoliciesCyberMd,
	"comply-soc2/policies/datacenter.md": complySoc2PoliciesDatacenterMd,
	"comply-soc2/policies/development.md": complySoc2PoliciesDevelopmentMd,
	"comply-soc2/policies/disaster.md": complySoc2PoliciesDisasterMd,
	"comply-soc2/policies/encryption.md": complySoc2PoliciesEncryptionMd,
	"comply-soc2/policies/incident.md": complySoc2PoliciesIncidentMd,
	"comply-soc2/policies/information.md": complySoc2PoliciesInformationMd,
	"comply-soc2/policies/log.md": complySoc2PoliciesLogMd,
	"comply-soc2/policies/media.md": complySoc2PoliciesMediaMd,
	"comply-soc2/policies/office.md": complySoc2PoliciesOfficeMd,
	"comply-soc2/policies/password.md": complySoc2PoliciesPasswordMd,
	"comply-soc2/policies/policy.md": complySoc2PoliciesPolicyMd,
	"comply-soc2/policies/privacy.md": complySoc2PoliciesPrivacyMd,
	"comply-soc2/policies/processing.md": complySoc2PoliciesProcessingMd,
	"comply-soc2/policies/remote.md": complySoc2PoliciesRemoteMd,
	"comply-soc2/policies/retention.md": complySoc2PoliciesRetentionMd,
	"comply-soc2/policies/risk.md": complySoc2PoliciesRiskMd,
	"comply-soc2/policies/vendor.md": complySoc2PoliciesVendorMd,
	"comply-soc2/policies/workstation.md": complySoc2PoliciesWorkstationMd,
	"comply-soc2/procedures/README.md": complySoc2ProceduresReadmeMd,
	"comply-soc2/procedures/offboarding.md": complySoc2ProceduresOffboardingMd,
	"comply-soc2/procedures/onboarding.md": complySoc2ProceduresOnboardingMd,
	"comply-soc2/procedures/patch.md": complySoc2ProceduresPatchMd,
	"comply-soc2/procedures/workstation.md": complySoc2ProceduresWorkstationMd,
	"comply-soc2/standards/README.md": complySoc2StandardsReadmeMd,
	"comply-soc2/standards/TSC-2017.yml": complySoc2StandardsTsc2017Yml,
	"comply-soc2/templates/default.latex": complySoc2TemplatesDefaultLatex,
	"comply-soc2/templates/index.ace": complySoc2TemplatesIndexAce,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"comply-blank": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{complyBlankReadmeMd, map[string]*bintree{}},
		"TODO.md": &bintree{complyBlankTodoMd, map[string]*bintree{}},
		"narratives": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{complyBlankNarrativesGitkeep, map[string]*bintree{}},
		}},
		"policies": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{complyBlankPoliciesGitkeep, map[string]*bintree{}},
		}},
		"procedures": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{complyBlankProceduresGitkeep, map[string]*bintree{}},
		}},
		"standards": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{complyBlankStandardsGitkeep, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			".gitkeep": &bintree{complyBlankTemplatesGitkeep, map[string]*bintree{}},
			"default.latex": &bintree{complyBlankTemplatesDefaultLatex, map[string]*bintree{}},
			"index.ace": &bintree{complyBlankTemplatesIndexAce, map[string]*bintree{}},
		}},
	}},
	"comply-soc2": &bintree{nil, map[string]*bintree{
		"README.md": &bintree{complySoc2ReadmeMd, map[string]*bintree{}},
		"TODO.md": &bintree{complySoc2TodoMd, map[string]*bintree{}},
		"narratives": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2NarrativesReadmeMd, map[string]*bintree{}},
			"control.md": &bintree{complySoc2NarrativesControlMd, map[string]*bintree{}},
			"organizational.md": &bintree{complySoc2NarrativesOrganizationalMd, map[string]*bintree{}},
			"products.md": &bintree{complySoc2NarrativesProductsMd, map[string]*bintree{}},
			"security.md": &bintree{complySoc2NarrativesSecurityMd, map[string]*bintree{}},
			"system.md": &bintree{complySoc2NarrativesSystemMd, map[string]*bintree{}},
		}},
		"policies": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2PoliciesReadmeMd, map[string]*bintree{}},
			"access.md": &bintree{complySoc2PoliciesAccessMd, map[string]*bintree{}},
			"application.md": &bintree{complySoc2PoliciesApplicationMd, map[string]*bintree{}},
			"availability.md": &bintree{complySoc2PoliciesAvailabilityMd, map[string]*bintree{}},
			"change.md": &bintree{complySoc2PoliciesChangeMd, map[string]*bintree{}},
			"classification.md": &bintree{complySoc2PoliciesClassificationMd, map[string]*bintree{}},
			"conduct.md": &bintree{complySoc2PoliciesConductMd, map[string]*bintree{}},
			"confidentiality.md": &bintree{complySoc2PoliciesConfidentialityMd, map[string]*bintree{}},
			"continuity.md": &bintree{complySoc2PoliciesContinuityMd, map[string]*bintree{}},
			"cyber.md": &bintree{complySoc2PoliciesCyberMd, map[string]*bintree{}},
			"datacenter.md": &bintree{complySoc2PoliciesDatacenterMd, map[string]*bintree{}},
			"development.md": &bintree{complySoc2PoliciesDevelopmentMd, map[string]*bintree{}},
			"disaster.md": &bintree{complySoc2PoliciesDisasterMd, map[string]*bintree{}},
			"encryption.md": &bintree{complySoc2PoliciesEncryptionMd, map[string]*bintree{}},
			"incident.md": &bintree{complySoc2PoliciesIncidentMd, map[string]*bintree{}},
			"information.md": &bintree{complySoc2PoliciesInformationMd, map[string]*bintree{}},
			"log.md": &bintree{complySoc2PoliciesLogMd, map[string]*bintree{}},
			"media.md": &bintree{complySoc2PoliciesMediaMd, map[string]*bintree{}},
			"office.md": &bintree{complySoc2PoliciesOfficeMd, map[string]*bintree{}},
			"password.md": &bintree{complySoc2PoliciesPasswordMd, map[string]*bintree{}},
			"policy.md": &bintree{complySoc2PoliciesPolicyMd, map[string]*bintree{}},
			"privacy.md": &bintree{complySoc2PoliciesPrivacyMd, map[string]*bintree{}},
			"processing.md": &bintree{complySoc2PoliciesProcessingMd, map[string]*bintree{}},
			"remote.md": &bintree{complySoc2PoliciesRemoteMd, map[string]*bintree{}},
			"retention.md": &bintree{complySoc2PoliciesRetentionMd, map[string]*bintree{}},
			"risk.md": &bintree{complySoc2PoliciesRiskMd, map[string]*bintree{}},
			"vendor.md": &bintree{complySoc2PoliciesVendorMd, map[string]*bintree{}},
			"workstation.md": &bintree{complySoc2PoliciesWorkstationMd, map[string]*bintree{}},
		}},
		"procedures": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2ProceduresReadmeMd, map[string]*bintree{}},
			"offboarding.md": &bintree{complySoc2ProceduresOffboardingMd, map[string]*bintree{}},
			"onboarding.md": &bintree{complySoc2ProceduresOnboardingMd, map[string]*bintree{}},
			"patch.md": &bintree{complySoc2ProceduresPatchMd, map[string]*bintree{}},
			"workstation.md": &bintree{complySoc2ProceduresWorkstationMd, map[string]*bintree{}},
		}},
		"standards": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{complySoc2StandardsReadmeMd, map[string]*bintree{}},
			"TSC-2017.yml": &bintree{complySoc2StandardsTsc2017Yml, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"default.latex": &bintree{complySoc2TemplatesDefaultLatex, map[string]*bintree{}},
			"index.ace": &bintree{complySoc2TemplatesIndexAce, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
